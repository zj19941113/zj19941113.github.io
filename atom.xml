<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>ZhouJie&#39;s Blog</title>
  
  <subtitle>相依为gay</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-06-18T13:45:35.847Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>ZhouJie</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>C++ 近红外人脸定位与深度图人脸活体检测（.raw深度图像）</title>
    <link href="http://yoursite.com/2018/10/22/12/"/>
    <id>http://yoursite.com/2018/10/22/12/</id>
    <published>2018-10-22T03:35:07.000Z</published>
    <updated>2019-06-18T13:45:35.847Z</updated>
    
    <content type="html"><![CDATA[<p>通过深度相机的红外图进行人脸位置定位，传给深度图进行活体检测<br>注：利用rgb传来的位置对应到深度图上偏差过大，直接利用深度相机产生的红外图像进行人脸位置的确定更加精准。</p><a id="more"></a><h2 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h2><p>dlib_test.cpp</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;dlib/image_processing/frontal_face_detector.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;dlib/gui_widgets.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;dlib/image_io.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;time.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdbool.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> dlib;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 函数声明 */</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> *<span class="title">face_location</span><span class="params">(<span class="keyword">char</span> *imgFile)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">liveness_detection</span><span class="params">(<span class="keyword">char</span> *DeepFile, <span class="keyword">int</span> rec_face[<span class="number">4</span>])</span></span>;  </span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> IMG_HEIGHT =  <span class="number">720</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> IMG_WIDTH =  <span class="number">1280</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> *imgFile = <span class="string">"/home/zhoujie/cProject/dlib_test/0001_IR_frontface.jpg"</span>;</span><br><span class="line"><span class="keyword">int</span> *rec_face;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 调用函数得到人脸位置 */</span></span><br><span class="line">    <span class="comment">// Eg:rec_face = &#123;157 ,66 ,172 ,198 &#125;, 行取66：66+198,列取157：157+172</span></span><br><span class="line">rec_face = face_location(imgFile);</span><br><span class="line"></span><br><span class="line"><span class="comment">//深度图与红外图是水平翻转的</span></span><br><span class="line">rec_face[<span class="number">0</span>] = IMG_WIDTH - rec_face[<span class="number">0</span>] -rec_face[<span class="number">2</span>]; </span><br><span class="line">    </span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; rec_face[<span class="number">0</span>] &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; rec_face[<span class="number">1</span>] &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; rec_face[<span class="number">2</span>] &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; rec_face[<span class="number">3</span>] &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">char</span> *DeepFile = <span class="string">"/home/zhoujie/cProject/dlib_test/raw_0001_frontface.raw"</span>;</span><br><span class="line"><span class="keyword">bool</span> IS_FACE;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 调用函数判断是否为活体 */</span></span><br><span class="line">    IS_FACE = liveness_detection( DeepFile, rec_face);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"RESULT : %d\n"</span>, IS_FACE);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">delete</span> rec_face;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 函数 输出人脸位置 */</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> *<span class="title">face_location</span><span class="params">(<span class="keyword">char</span>* imgFile)</span></span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">    <span class="keyword">int</span> *rec_face = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">4</span>];</span><br><span class="line"></span><br><span class="line">    frontal_face_detector detector = get_frontal_face_detector();</span><br><span class="line"></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"processing image "</span> &lt;&lt; imgFile &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">clock_t</span> start,finish;</span><br><span class="line">    <span class="keyword">double</span> totaltime;</span><br><span class="line">    start=clock();</span><br><span class="line"></span><br><span class="line">    array2d&lt;<span class="keyword">unsigned</span> <span class="keyword">char</span>&gt; img;</span><br><span class="line">    load_image(img, imgFile);</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">vector</span>&lt;rectangle&gt; dets = detector(img);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"Number of faces detected: "</span> &lt;&lt; dets.size() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    rec_face[<span class="number">0</span>] = dets[<span class="number">0</span>].left();</span><br><span class="line">    rec_face[<span class="number">1</span>] = dets[<span class="number">0</span>].top();</span><br><span class="line">    rec_face[<span class="number">2</span>] = dets[<span class="number">0</span>].right() - dets[<span class="number">0</span>].left() + <span class="number">1</span>;</span><br><span class="line">    rec_face[<span class="number">3</span>] = dets[<span class="number">0</span>].bottom() - dets[<span class="number">0</span>].top() + <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    finish=clock();</span><br><span class="line">    totaltime=(<span class="keyword">double</span>)(finish-start)/CLOCKS_PER_SEC;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"\n此程序的运行时间为"</span>&lt;&lt;totaltime&lt;&lt;<span class="string">"秒！"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// delete rec_face;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span>  rec_face;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 函数判断是否为活体 */</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">liveness_detection</span><span class="params">(<span class="keyword">char</span> *DeepFile, <span class="keyword">int</span> rec_face[<span class="number">4</span>])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">int</span> ITER = <span class="number">10000</span>; <span class="comment">// 随机取点次数</span></span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">float</span> PLANE_OR_NOT = <span class="number">0.1</span>; <span class="comment">// 判断是否为平面的分界线</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> SIGMA = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">short</span> UNIT16;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 从.raw读取二进制16位数据到MatDATA</span></span><br><span class="line">UNIT16 MatDATA[IMG_HEIGHT*IMG_WIDTH];</span><br><span class="line">FILE *fp = <span class="literal">NULL</span>;</span><br><span class="line">fp = fopen( DeepFile, <span class="string">"rb"</span> );</span><br><span class="line">    fread(MatDATA,<span class="keyword">sizeof</span>(UNIT16),IMG_HEIGHT*IMG_WIDTH,fp);</span><br><span class="line">fclose(fp);</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> i,j;</span><br><span class="line"><span class="keyword">int</span> COL = rec_face[<span class="number">0</span>],ROW = rec_face[<span class="number">1</span>],FACE_WIDTH = rec_face[<span class="number">2</span>],FACE_HEIGHT = rec_face[<span class="number">3</span>]; <span class="comment">//位置信息</span></span><br><span class="line"><span class="comment">// txt :157 66 172 198 , 取行66：66+198,列取157：157+172</span></span><br><span class="line"><span class="keyword">int</span> faceno0_num = FACE_HEIGHT*FACE_WIDTH <span class="number">-1</span>; </span><br><span class="line"><span class="keyword">int</span> FaceDATA[<span class="number">3</span>][<span class="number">160000</span>];</span><br><span class="line">n = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(i = <span class="number">1</span>;i&lt; FACE_HEIGHT+<span class="number">1</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(j= <span class="number">1</span>;j&lt; FACE_WIDTH+<span class="number">1</span>;j++) </span><br><span class="line">&#123; </span><br><span class="line"><span class="keyword">if</span> (MatDATA[IMG_WIDTH*(ROW+i<span class="number">-2</span>)+COL+j<span class="number">-2</span>] == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">faceno0_num -= <span class="number">1</span>; <span class="comment">// 非零深度点个数为 faceno0_num+1</span></span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line">FaceDATA[<span class="number">1</span>][n] = i;</span><br><span class="line">FaceDATA[<span class="number">0</span>][n] = j; </span><br><span class="line">FaceDATA[<span class="number">2</span>][n] = MatDATA[IMG_WIDTH*(ROW+i<span class="number">-2</span>)+COL+j<span class="number">-2</span>];</span><br><span class="line">n += <span class="number">1</span>;</span><br><span class="line">&#125; </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> pretotal = <span class="number">0</span>;  <span class="comment">// 符合拟合模型的数据的个数</span></span><br><span class="line"><span class="keyword">int</span> x[<span class="number">3</span>],y[<span class="number">3</span>],z[<span class="number">3</span>];  <span class="comment">// 随机取三个点 </span></span><br><span class="line">srand((<span class="keyword">unsigned</span>)time(<span class="literal">NULL</span>));</span><br><span class="line"><span class="keyword">float</span> a,b,c;  <span class="comment">// 拟合平面方程 z=ax+by+c</span></span><br><span class="line"><span class="comment">// float besta,bestb,bestc;  // 最佳参数</span></span><br><span class="line"><span class="keyword">int</span> rand_num[<span class="number">3</span>];</span><br><span class="line"><span class="keyword">float</span> check,distance;</span><br><span class="line"><span class="keyword">int</span> total = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; ITER; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">do</span>&#123;</span><br><span class="line">rand_num[<span class="number">0</span>] = <span class="built_in">std</span>::rand()%faceno0_num; </span><br><span class="line">rand_num[<span class="number">1</span>] = <span class="built_in">std</span>::rand()%faceno0_num; </span><br><span class="line">rand_num[<span class="number">2</span>] = <span class="built_in">std</span>::rand()%faceno0_num; </span><br><span class="line">&#125;<span class="keyword">while</span>(rand_num[<span class="number">0</span>] == rand_num[<span class="number">1</span>] || rand_num[<span class="number">0</span>] == rand_num[<span class="number">2</span>] || rand_num[<span class="number">1</span>] == rand_num[<span class="number">2</span>]);</span><br><span class="line"><span class="keyword">for</span>(n = <span class="number">0</span>; n &lt; <span class="number">3</span>; n++ )</span><br><span class="line">&#123;</span><br><span class="line">x[n] = FaceDATA[<span class="number">0</span>][rand_num[n]];</span><br><span class="line">y[n] = FaceDATA[<span class="number">1</span>][rand_num[n]];</span><br><span class="line">z[n] = FaceDATA[<span class="number">2</span>][rand_num[n]];</span><br><span class="line"><span class="comment">// printf("%d,%d,%d,%d\n", x[n],y[n],z[n],n);</span></span><br><span class="line">&#125;</span><br><span class="line">check = (x[<span class="number">0</span>]-x[<span class="number">1</span>])*(y[<span class="number">0</span>]-y[<span class="number">2</span>]) - (x[<span class="number">0</span>]-x[<span class="number">2</span>])*(y[<span class="number">0</span>]-y[<span class="number">1</span>]);</span><br><span class="line"><span class="keyword">if</span> ( check == <span class="number">0</span>)  <span class="comment">// 防止提示浮点数例外 (核心已转储)</span></span><br><span class="line">&#123;</span><br><span class="line">i -= <span class="number">1</span>;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line">a = ( (z[<span class="number">0</span>]-z[<span class="number">1</span>])*(y[<span class="number">0</span>]-y[<span class="number">2</span>]) - (z[<span class="number">0</span>]-z[<span class="number">2</span>])*(y[<span class="number">0</span>]-y[<span class="number">1</span>]) )/( (x[<span class="number">0</span>]-x[<span class="number">1</span>])*(y[<span class="number">0</span>]-y[<span class="number">2</span>]) - (x[<span class="number">0</span>]-x[<span class="number">2</span>])*(y[<span class="number">0</span>]-y[<span class="number">1</span>]) );</span><br><span class="line">        <span class="keyword">if</span> (y[<span class="number">0</span>] == y[<span class="number">2</span>])  <span class="comment">// 防止提示浮点数例外 (核心已转储)</span></span><br><span class="line">&#123;</span><br><span class="line">i -= <span class="number">1</span>;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line">b = ((z[<span class="number">0</span>] - z[<span class="number">2</span>]) - a * (x[<span class="number">0</span>] - x[<span class="number">2</span>]))/(y[<span class="number">0</span>]-y[<span class="number">2</span>]);</span><br><span class="line">        c = z[<span class="number">0</span>]- a * x[<span class="number">0</span>] - b * y[<span class="number">0</span>];</span><br><span class="line"><span class="comment">// printf("%f,%f,%f\n",a,b,c);</span></span><br><span class="line">total = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(n = <span class="number">0</span>; n &lt; faceno0_num +<span class="number">1</span> ; n++ )</span><br><span class="line">&#123;</span><br><span class="line">distance = <span class="built_in">fabs</span>(a*FaceDATA[<span class="number">0</span>][n] + b*FaceDATA[<span class="number">1</span>][n] - <span class="number">1</span>*FaceDATA[<span class="number">2</span>][n] + c*<span class="number">1</span>);</span><br><span class="line"><span class="keyword">if</span> (distance &lt; SIGMA)</span><br><span class="line">&#123;</span><br><span class="line">total +=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// printf("%d,%f,%d\n",i,distance,total);</span></span><br><span class="line"><span class="keyword">if</span> (total &gt; pretotal)  <span class="comment">// 找到符合拟合平面数据最多的拟合平面</span></span><br><span class="line">        &#123;</span><br><span class="line">pretotal=total;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">float</span> pretotal_ary = pretotal *<span class="number">1.0</span>/ faceno0_num ;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d,%f\n"</span>, pretotal,pretotal_ary);</span><br><span class="line"><span class="keyword">bool</span> IS_FACE;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (pretotal_ary &lt; PLANE_OR_NOT)</span><br><span class="line">&#123;</span><br><span class="line">IS_FACE =  <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">IS_FACE = <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span>  IS_FACE;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Ubuntu下编译Dlib库参考这里 <a href="https://blog.csdn.net/ffcjjhv/article/details/84660869" target="_blank" rel="noopener">https://blog.csdn.net/ffcjjhv/article/details/84660869</a><br>修改CMakeLists.txt相应路径<br><code>cmake .</code><br><code>make</code><br><code>./dlib_test</code>  </p><h2 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果"></a>运行结果</h2><p><img src="https://img-blog.csdnimg.cn/20181204145758796.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ZmY2pqaHY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>项目地址：<a href="https://github.com/zj19941113/Face-Liveness_detection" target="_blank" rel="noopener">https://github.com/zj19941113/Face-Liveness_detection</a></p><h3 id="活检部分原理"><a href="#活检部分原理" class="headerlink" title="活检部分原理"></a>活检部分原理</h3><p>Func_liveness_detection.c</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;dirent.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;time.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdbool.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> IMG_HEIGHT =  <span class="number">345</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> IMG_WIDTH =  <span class="number">400</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> ITER = <span class="number">10000</span>; <span class="comment">// 随机取点次数</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">float</span> PLANE_OR_NOT = <span class="number">0.1</span>; <span class="comment">// 判断是否为平面的分界线</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">short</span> UNIT16;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">readFileList</span><span class="params">(<span class="keyword">char</span> *basePath)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    DIR *dir;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">dirent</span> *<span class="title">ptr</span>;</span> </span><br><span class="line">    <span class="keyword">char</span> base[<span class="number">8</span>]; </span><br><span class="line">    <span class="keyword">char</span> title[<span class="number">4</span>];</span><br><span class="line">    <span class="keyword">char</span> *p=<span class="string">".raw"</span>; <span class="comment">//需要的子串;</span></span><br><span class="line">    <span class="keyword">char</span> *p2=<span class="string">".txt"</span>;</span><br><span class="line">    <span class="keyword">char</span> *padd=<span class="string">"/"</span>;</span><br><span class="line">    <span class="keyword">int</span> len;</span><br><span class="line">    <span class="keyword">char</span> Deepfile_raw[<span class="number">100</span>];</span><br><span class="line">    <span class="keyword">char</span> Deepfile_txt[<span class="number">100</span>];</span><br><span class="line"></span><br><span class="line">    UNIT16 MatDATA[IMG_HEIGHT*IMG_WIDTH];</span><br><span class="line">    FILE *fp = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">int</span> DeepDATA[<span class="number">3</span>][IMG_HEIGHT*IMG_WIDTH];</span><br><span class="line">    <span class="keyword">int</span> length;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="keyword">int</span> i,j;</span><br><span class="line">    FILE *fp2 = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">char</span> buf[<span class="number">20</span>];</span><br><span class="line">    <span class="keyword">char</span> *ptr2;</span><br><span class="line">    <span class="keyword">int</span> rec_face[<span class="number">4</span>];</span><br><span class="line">    <span class="keyword">int</span> COL ,ROW ,FACE_WIDTH ,FACE_HEIGHT ; </span><br><span class="line">    <span class="keyword">int</span> FaceDATA[<span class="number">3</span>][<span class="number">40000</span>];</span><br><span class="line">    <span class="keyword">int</span> faceno0_num ;</span><br><span class="line">    <span class="keyword">int</span> sigma = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">int</span> pretotal;  <span class="comment">// 符合拟合模型的数据的个数</span></span><br><span class="line">    <span class="keyword">int</span> x[<span class="number">3</span>],y[<span class="number">3</span>],z[<span class="number">3</span>];  <span class="comment">// 随机取三个点 </span></span><br><span class="line">    <span class="keyword">float</span> a,b,c;  <span class="comment">// 拟合平面方程 z=ax+by+c</span></span><br><span class="line">    <span class="comment">// float besta,bestb,bestc;  // 最佳参数</span></span><br><span class="line">    <span class="keyword">int</span> rand_num[<span class="number">3</span>];</span><br><span class="line">    <span class="keyword">float</span> check,distance;</span><br><span class="line">    <span class="keyword">int</span> total;</span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ((dir=opendir(basePath)) == <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        perror(<span class="string">"Open dir error..."</span>);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> ((ptr=readdir(dir)) != <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">strcpy</span>(base, ptr-&gt;d_name);</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">strstr</span>(base,p)) </span><br><span class="line">        &#123;</span><br><span class="line">            len = <span class="built_in">strlen</span>(base);</span><br><span class="line">            <span class="built_in">memset</span>(title, <span class="string">'\0'</span>, <span class="keyword">sizeof</span>(title));</span><br><span class="line">            <span class="built_in">strncpy</span>(title, base, len <span class="number">-4</span>);</span><br><span class="line">            <span class="built_in">strcpy</span>(Deepfile_raw, basePath);</span><br><span class="line">            <span class="built_in">strcat</span>(Deepfile_raw, padd);</span><br><span class="line">            <span class="built_in">strcat</span>(Deepfile_raw, title);</span><br><span class="line">            <span class="built_in">strcpy</span>(Deepfile_txt, Deepfile_raw);</span><br><span class="line">            <span class="built_in">strcat</span>(Deepfile_raw, p);</span><br><span class="line">            <span class="built_in">strcat</span>(Deepfile_txt, p2);</span><br><span class="line">            <span class="comment">// printf("%s\n",Deepfile_raw); </span></span><br><span class="line">            <span class="comment">// printf("%s\n",Deepfile_txt); </span></span><br><span class="line"></span><br><span class="line">            <span class="comment">// 从.raw读取二进制16位数据到MatDATA </span></span><br><span class="line">            fp = fopen( Deepfile_raw, <span class="string">"rb"</span> );</span><br><span class="line">            fread(MatDATA,<span class="keyword">sizeof</span>(UNIT16),IMG_HEIGHT*IMG_WIDTH,fp);</span><br><span class="line">            fclose(fp);</span><br><span class="line">            <span class="comment">// length = sizeof(MatDATA) / sizeof(UNIT16); </span></span><br><span class="line">            <span class="comment">// printf("数组的长度为: %d\n",length); //length 应为IMG_HEIGHT*IMG_WIDTH</span></span><br><span class="line">            n = <span class="number">0</span>;</span><br><span class="line">            <span class="comment">// DeepDATA三行分别为深度图行数，列数，深度信息</span></span><br><span class="line">            <span class="keyword">for</span>(i=<span class="number">1</span>;i&lt; IMG_HEIGHT+<span class="number">1</span> ;i++)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">for</span>(j=<span class="number">1</span>;j&lt; IMG_WIDTH+<span class="number">1</span> ;j++) </span><br><span class="line">                    &#123; </span><br><span class="line">                        DeepDATA[<span class="number">0</span>][n] = i;</span><br><span class="line">                        DeepDATA[<span class="number">1</span>][n] = j;</span><br><span class="line">                        DeepDATA[<span class="number">2</span>][n] = MatDATA[n];</span><br><span class="line">                        n += <span class="number">1</span>;</span><br><span class="line">                    &#125; </span><br><span class="line">                &#125; </span><br><span class="line">            <span class="comment">// int test1 = 110194 ;</span></span><br><span class="line">            <span class="comment">// printf("%d,%d,%d\n",DeepDATA[0][test1],DeepDATA[1][test1],DeepDATA[2][test1]);</span></span><br><span class="line">            </span><br><span class="line">            <span class="comment">// FaceDATA为深度图DeepDATA裁剪后且去除零深度信息后的人脸部分</span></span><br><span class="line">            n = <span class="number">0</span>;</span><br><span class="line">            fp2 = fopen(Deepfile_txt, <span class="string">"r"</span>);</span><br><span class="line">            fgets(buf, <span class="number">20</span>, fp2);</span><br><span class="line">            <span class="comment">// printf("%s\n", buf );</span></span><br><span class="line">            ptr2 = strtok(buf, <span class="string">" "</span>);</span><br><span class="line">            <span class="keyword">for</span>(n = <span class="number">0</span>; n &lt; <span class="number">4</span>; n++)</span><br><span class="line">            &#123;</span><br><span class="line">                rec_face[n] = atoi(ptr2);</span><br><span class="line">                ptr2 = strtok(<span class="literal">NULL</span>, <span class="string">" "</span>);</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">            fclose(fp2);</span><br><span class="line">            COL = rec_face[<span class="number">0</span>],ROW = rec_face[<span class="number">1</span>],FACE_WIDTH = rec_face[<span class="number">2</span>],FACE_HEIGHT = rec_face[<span class="number">3</span>]; <span class="comment">//位置信息</span></span><br><span class="line">            <span class="comment">// txt :157 66 172 198 , 取行66：66+198,列取157：157+172</span></span><br><span class="line">            faceno0_num = FACE_HEIGHT*FACE_WIDTH <span class="number">-1</span>; </span><br><span class="line">            n = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span>(i = <span class="number">1</span>;i&lt; FACE_HEIGHT+<span class="number">1</span>;i++)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">for</span>(j= <span class="number">1</span>;j&lt; FACE_WIDTH+<span class="number">1</span>;j++) </span><br><span class="line">                    &#123; </span><br><span class="line">                        <span class="keyword">if</span> (MatDATA[IMG_WIDTH*(ROW+i<span class="number">-2</span>)+COL+j<span class="number">-2</span>] == <span class="number">0</span>)</span><br><span class="line">                        &#123;</span><br><span class="line">                            faceno0_num -= <span class="number">1</span>; <span class="comment">// 非零深度点个数为 faceno0_num+1</span></span><br><span class="line">                            <span class="keyword">continue</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                        FaceDATA[<span class="number">1</span>][n] = i;</span><br><span class="line">                        FaceDATA[<span class="number">0</span>][n] = j; </span><br><span class="line">                        FaceDATA[<span class="number">2</span>][n] = MatDATA[IMG_WIDTH*(ROW+i<span class="number">-2</span>)+COL+j<span class="number">-2</span>];</span><br><span class="line">                        n += <span class="number">1</span>;</span><br><span class="line">                    &#125; </span><br><span class="line">                &#125; </span><br><span class="line">            <span class="comment">// int test = 6804;  </span></span><br><span class="line">            <span class="comment">// printf("%d,%d,%d,%d\n",test,FaceDATA[0][test],FaceDATA[1][test],FaceDATA[2][test]);</span></span><br><span class="line">            </span><br><span class="line">            srand((<span class="keyword">unsigned</span>)time(<span class="literal">NULL</span>));</span><br><span class="line">            pretotal = <span class="number">0</span>;</span><br><span class="line">            total = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; ITER; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">do</span>&#123;</span><br><span class="line">                    rand_num[<span class="number">0</span>] = rand()%faceno0_num; </span><br><span class="line">                    rand_num[<span class="number">1</span>] = rand()%faceno0_num; </span><br><span class="line">                    rand_num[<span class="number">2</span>] = rand()%faceno0_num; </span><br><span class="line">                &#125;<span class="keyword">while</span>(rand_num[<span class="number">0</span>] == rand_num[<span class="number">1</span>] || rand_num[<span class="number">0</span>] == rand_num[<span class="number">2</span>] || rand_num[<span class="number">1</span>] == rand_num[<span class="number">2</span>]);</span><br><span class="line">                <span class="keyword">for</span>(n = <span class="number">0</span>; n &lt; <span class="number">3</span>; n++ )</span><br><span class="line">                &#123;</span><br><span class="line">                    x[n] = FaceDATA[<span class="number">0</span>][rand_num[n]];</span><br><span class="line">                    y[n] = FaceDATA[<span class="number">1</span>][rand_num[n]];</span><br><span class="line">                    z[n] = FaceDATA[<span class="number">2</span>][rand_num[n]];</span><br><span class="line">                    <span class="comment">// printf("%d,%d,%d,%d\n", x[n],y[n],z[n],n);</span></span><br><span class="line">                &#125;</span><br><span class="line">                check = (x[<span class="number">0</span>]-x[<span class="number">1</span>])*(y[<span class="number">0</span>]-y[<span class="number">2</span>]) - (x[<span class="number">0</span>]-x[<span class="number">2</span>])*(y[<span class="number">0</span>]-y[<span class="number">1</span>]);</span><br><span class="line">                <span class="keyword">if</span> ( check == <span class="number">0</span>)  <span class="comment">// 防止提示浮点数例外 (核心已转储)</span></span><br><span class="line">                &#123;</span><br><span class="line">                    i -= <span class="number">1</span>;</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                a = ( (z[<span class="number">0</span>]-z[<span class="number">1</span>])*(y[<span class="number">0</span>]-y[<span class="number">2</span>]) - (z[<span class="number">0</span>]-z[<span class="number">2</span>])*(y[<span class="number">0</span>]-y[<span class="number">1</span>]) )*<span class="number">1.0</span>/( (x[<span class="number">0</span>]-x[<span class="number">1</span>])*(y[<span class="number">0</span>]-y[<span class="number">2</span>]) - (x[<span class="number">0</span>]-x[<span class="number">2</span>])*(y[<span class="number">0</span>]-y[<span class="number">1</span>]) );</span><br><span class="line">                <span class="keyword">if</span> (y[<span class="number">0</span>] == y[<span class="number">2</span>])  <span class="comment">// 防止提示浮点数例外 (核心已转储)</span></span><br><span class="line">                &#123;</span><br><span class="line">                    i -= <span class="number">1</span>;</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                b = ((z[<span class="number">0</span>] - z[<span class="number">2</span>]) - a * (x[<span class="number">0</span>] - x[<span class="number">2</span>]))*<span class="number">1.0</span>/(y[<span class="number">0</span>]-y[<span class="number">2</span>]);</span><br><span class="line">                c = z[<span class="number">0</span>]- a * x[<span class="number">0</span>] - b * y[<span class="number">0</span>];</span><br><span class="line">                <span class="comment">// printf("%f,%f,%f\n",a,b,c);</span></span><br><span class="line">                total = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">for</span>(n = <span class="number">0</span>; n &lt; faceno0_num +<span class="number">1</span> ; n++ )</span><br><span class="line">                &#123;</span><br><span class="line">                    distance = <span class="built_in">fabs</span>(a*FaceDATA[<span class="number">0</span>][n] + b*FaceDATA[<span class="number">1</span>][n] - <span class="number">1</span>*FaceDATA[<span class="number">2</span>][n] + c*<span class="number">1</span>);</span><br><span class="line">                    <span class="keyword">if</span> (distance &lt; sigma)</span><br><span class="line">                    &#123;</span><br><span class="line">                        total +=<span class="number">1</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">// printf("%d,%f,%d\n",i,distance,total);</span></span><br><span class="line">                <span class="keyword">if</span> (total &gt; pretotal)  <span class="comment">// 找到符合拟合平面数据最多的拟合平面</span></span><br><span class="line">                &#123;</span><br><span class="line">                    pretotal=total;</span><br><span class="line">                    <span class="comment">// besta = a;</span></span><br><span class="line">                    <span class="comment">// bestb = b;</span></span><br><span class="line">                    <span class="comment">// bestc = c;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">float</span> pretotal_ary = pretotal *<span class="number">1.0</span>/ faceno0_num ;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"pretotal = %d,_ary = %f,"</span>,pretotal,pretotal_ary);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%s"</span>,base);</span><br><span class="line">            <span class="keyword">bool</span> IS_FACE;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (pretotal_ary&gt;PLANE_OR_NOT)</span><br><span class="line">            &#123;</span><br><span class="line">                IS_FACE =  <span class="literal">false</span>;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"不是人脸\n"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                IS_FACE = <span class="literal">true</span>;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"是人脸\n"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;</span><br><span class="line">    closedir(dir);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    DIR *dir;</span><br><span class="line">    <span class="keyword">char</span> *basePath = <span class="string">"/home/zhoujie/liveness detection/raw文件/non-face"</span>;</span><br><span class="line">    readFileList(basePath);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>github地址：<a href="https://github.com/zj19941113/Face-Liveness_detection" target="_blank" rel="noopener">https://github.com/zj19941113/Face-Liveness_detection</a><br>上面这个项目使用的数据集标定的不太准，PLANE_OR_NOT参数选为 0.1</p><p>这个数据集是自己标定的，数量较少但是比较准确： <a href="https://pan.baidu.com/s/161xSbayGW7tKg0tKfTW1mw" target="_blank" rel="noopener">https://pan.baidu.com/s/161xSbayGW7tKg0tKfTW1mw</a> ，PLANE_OR_NOT参数选为 0.2</p><p>快速鼠标标定深度图人脸位置： <a href="https://blog.csdn.net/ffcjjhv/article/details/83270002" target="_blank" rel="noopener">https://blog.csdn.net/ffcjjhv/article/details/83270002</a></p><p><img src="https://raw.githubusercontent.com/zj19941113/Face-Liveness_detection/master/images/2018-10-19%2011-55-09%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE.png" alt></p><p><img src="https://raw.githubusercontent.com/zj19941113/Face-Liveness_detection/master/images/2018-10-19%2011-58-47%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE.png" alt></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;通过深度相机的红外图进行人脸位置定位，传给深度图进行活体检测&lt;br&gt;注：利用rgb传来的位置对应到深度图上偏差过大，直接利用深度相机产生的红外图像进行人脸位置的确定更加精准。&lt;/p&gt;
    
    </summary>
    
      <category term="课题项目" scheme="http://yoursite.com/categories/%E8%AF%BE%E9%A2%98%E9%A1%B9%E7%9B%AE/"/>
    
    
      <category term="深度图" scheme="http://yoursite.com/tags/%E6%B7%B1%E5%BA%A6%E5%9B%BE/"/>
    
      <category term="活体检测" scheme="http://yoursite.com/tags/%E6%B4%BB%E4%BD%93%E6%A3%80%E6%B5%8B/"/>
    
      <category term="C++" scheme="http://yoursite.com/tags/C/"/>
    
      <category term="近红外人脸定位" scheme="http://yoursite.com/tags/%E8%BF%91%E7%BA%A2%E5%A4%96%E4%BA%BA%E8%84%B8%E5%AE%9A%E4%BD%8D/"/>
    
  </entry>
  
  <entry>
    <title>matlab 深度图人脸活体检测（.raw深度图像）</title>
    <link href="http://yoursite.com/2018/10/22/11/"/>
    <id>http://yoursite.com/2018/10/22/11/</id>
    <published>2018-10-22T03:28:26.000Z</published>
    <updated>2019-06-18T13:45:21.108Z</updated>
    
    <content type="html"><![CDATA[<p>github地址：<a href="https://github.com/zj19941113/Deep-Img-Liveness-Detection" target="_blank" rel="noopener">https://github.com/zj19941113/Deep-Img-Liveness-Detection</a><br>上面这个项目使用的数据集标定的不太准，PLANE_OR_NOT参数选为 0.1</p><a id="more"></a><p>这个数据集是自己标定的，数量较少但是比较准确： <a href="https://pan.baidu.com/s/161xSbayGW7tKg0tKfTW1mw" target="_blank" rel="noopener">https://pan.baidu.com/s/161xSbayGW7tKg0tKfTW1mw</a> ，PLANE_OR_NOT参数选为 0.2</p><p>快速鼠标标定深度图人脸位置： <a href="https://blog.csdn.net/ffcjjhv/article/details/83270002" target="_blank" rel="noopener">https://blog.csdn.net/ffcjjhv/article/details/83270002</a></p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">RAW_PATH = <span class="string">'/home/zhoujie/liveness detection/zjraw/non-face/'</span>;</span><br><span class="line">PLANE_OR_NOT = <span class="number">0.2</span>;  <span class="comment">%根据标定位置的准确程度修改阈值</span></span><br><span class="line">ITER = <span class="number">10000</span>;  <span class="comment">%10000次结果基本已经稳定，不用修改</span></span><br><span class="line">file =dir([RAW_PATH ,<span class="string">'*.raw'</span>]);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> num=<span class="number">1</span>:<span class="built_in">length</span>(file)</span><br><span class="line">f1 = fopen([RAW_PATH,file(num).name], <span class="string">'r'</span>);</span><br><span class="line">txtname = strrep(file(num).name,<span class="string">'.raw'</span>,<span class="string">'.txt'</span>);</span><br><span class="line">[par1,par2,par3,par4] = textread([RAW_PATH,txtname],<span class="string">'%d%d%d%d'</span>,<span class="number">1</span>);</span><br><span class="line">data0 = fread(f1, <span class="string">'uint16'</span>);</span><br><span class="line">fclose(f1);</span><br><span class="line">img1 = <span class="built_in">reshape</span>(data0, <span class="number">400</span>, <span class="number">345</span>);</span><br><span class="line">dep_img = img1';</span><br><span class="line"><span class="comment">% dep_img(find(dep_img &gt; 600))= 0;</span></span><br><span class="line"><span class="comment">% figure(1),imshow(dep_img,[400,580]); </span></span><br><span class="line">face = dep_img(par2 :par2 +par4,par1 :par1 + par3); </span><br><span class="line"><span class="comment">% figure(2),imshow(face,[400,580]); </span></span><br><span class="line"><span class="comment">%%%三维平面拟合</span></span><br><span class="line">[X Y]=<span class="built_in">meshgrid</span>(<span class="number">1</span>:<span class="built_in">size</span>(face,<span class="number">2</span>),<span class="number">1</span>:<span class="built_in">size</span>(face,<span class="number">1</span>));</span><br><span class="line">zz=face(:);xx=X(:);yy=Y(:);</span><br><span class="line">data=[xx';yy';zz'];</span><br><span class="line">id = data(<span class="number">3</span>,:) == <span class="number">0</span>;</span><br><span class="line">data(:,id) = [];</span><br><span class="line">number = <span class="built_in">size</span>(data,<span class="number">2</span>); <span class="comment">% 总点数</span></span><br><span class="line">sigma = <span class="number">1</span>;</span><br><span class="line">pretotal=<span class="number">0</span>;     <span class="comment">%符合拟合模型的数据的个数</span></span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:ITER</span><br><span class="line"> <span class="comment">%%% 随机选择三个点</span></span><br><span class="line">     idx = randperm(number,<span class="number">3</span>); </span><br><span class="line">     sample = data(:,idx); </span><br><span class="line">     <span class="comment">%%%拟合直线方程 z=ax+by+c</span></span><br><span class="line">     plane = <span class="built_in">zeros</span>(<span class="number">1</span>,<span class="number">3</span>);</span><br><span class="line">     x = sample(<span class="number">1</span>,:);</span><br><span class="line">     y = sample(<span class="number">2</span>,:);</span><br><span class="line">     z = sample(<span class="number">3</span>,:);</span><br><span class="line">     a = ((z(<span class="number">1</span>)-z(<span class="number">2</span>))*(y(<span class="number">1</span>)-y(<span class="number">3</span>)) - (z(<span class="number">1</span>)-z(<span class="number">3</span>))*(y(<span class="number">1</span>)-y(<span class="number">2</span>)))/((x(<span class="number">1</span>)-x(<span class="number">2</span>))*(y(<span class="number">1</span>)-y(<span class="number">3</span>)) - (x(<span class="number">1</span>)-x(<span class="number">3</span>))*(y(<span class="number">1</span>)-y(<span class="number">2</span>)));</span><br><span class="line">     b = ((z(<span class="number">1</span>) - z(<span class="number">3</span>)) - a * (x(<span class="number">1</span>) - x(<span class="number">3</span>)))/(y(<span class="number">1</span>)-y(<span class="number">3</span>));</span><br><span class="line">     c = z(<span class="number">1</span>) - a * x(<span class="number">1</span>) - b * y(<span class="number">1</span>);</span><br><span class="line">     plane = [a b <span class="number">-1</span> c];</span><br><span class="line">     mask=<span class="built_in">abs</span>(plane*[data; <span class="built_in">ones</span>(<span class="number">1</span>,<span class="built_in">size</span>(data,<span class="number">2</span>))]);    <span class="comment">%求每个数据到拟合平面的距离</span></span><br><span class="line">     total=sum(mask&lt;sigma);              <span class="comment">%计算数据距离平面小于一定阈值的数据的个数</span></span><br><span class="line">     <span class="keyword">if</span> total&gt;pretotal            <span class="comment">%找到符合拟合平面数据最多的拟合平面</span></span><br><span class="line">         pretotal=total;</span><br><span class="line"><span class="comment">%      bestplane=plane;          %找到最好的拟合平面</span></span><br><span class="line">    <span class="keyword">end</span>  </span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">pretotal_ary = pretotal/number;</span><br><span class="line"><span class="comment">% potable(num) = pretotal_ary;</span></span><br><span class="line"><span class="keyword">if</span>(pretotal_ary&gt;PLANE_OR_NOT)</span><br><span class="line">    descrip = <span class="string">'不是人脸'</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">descrip = <span class="string">'是人脸'</span>; </span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="built_in">disp</span>([<span class="string">'pretotal='</span>,num2str(pretotal),<span class="string">','</span>,<span class="string">'_ary='</span>,num2str(pretotal_ary),<span class="string">','</span>,file(num).name,descrip]);</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;github地址：&lt;a href=&quot;https://github.com/zj19941113/Deep-Img-Liveness-Detection&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/zj19941113/Deep-Img-Liveness-Detection&lt;/a&gt;&lt;br&gt;上面这个项目使用的数据集标定的不太准，PLANE_OR_NOT参数选为 0.1&lt;/p&gt;
    
    </summary>
    
      <category term="课题项目" scheme="http://yoursite.com/categories/%E8%AF%BE%E9%A2%98%E9%A1%B9%E7%9B%AE/"/>
    
    
      <category term="matlab" scheme="http://yoursite.com/tags/matlab/"/>
    
      <category term="深度图" scheme="http://yoursite.com/tags/%E6%B7%B1%E5%BA%A6%E5%9B%BE/"/>
    
      <category term="活体检测" scheme="http://yoursite.com/tags/%E6%B4%BB%E4%BD%93%E6%A3%80%E6%B5%8B/"/>
    
      <category term="人脸" scheme="http://yoursite.com/tags/%E4%BA%BA%E8%84%B8/"/>
    
      <category term="raw" scheme="http://yoursite.com/tags/raw/"/>
    
  </entry>
  
</feed>
