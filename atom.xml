<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>ZhouJie&#39;s Blog</title>
  
  <subtitle>相依为gay</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-06-21T03:17:56.634Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>ZhouJie</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>基于RGBD相机的人脸实时三维重建过程解析（ElasticFusion实现）</title>
    <link href="http://yoursite.com/2019/06/17/18/"/>
    <id>http://yoursite.com/2019/06/17/18/</id>
    <published>2019-06-17T03:36:20.000Z</published>
    <updated>2019-06-21T03:17:56.634Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://img-blog.csdnimg.cn/20190617110733452.JPG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ZmY2pqaHY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><a id="more"></a><p><img src="https://img-blog.csdnimg.cn/20190617110750587.JPG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ZmY2pqaHY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20190617110803839.JPG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ZmY2pqaHY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20190617110815847.JPG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ZmY2pqaHY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20190617110827407.JPG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ZmY2pqaHY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20190617110838240.JPG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ZmY2pqaHY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20190617110852240.JPG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ZmY2pqaHY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20190617110903395.JPG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ZmY2pqaHY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20190617110915324.JPG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ZmY2pqaHY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20190617110925918.JPG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ZmY2pqaHY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20190617110936331.JPG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ZmY2pqaHY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20190617110948477.JPG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ZmY2pqaHY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20190617111000826.JPG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ZmY2pqaHY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>主要是在ElasticFusion基础上做了部分修改，进行人脸实时重建。<br>PPT及相关论文地址：<a href="https://pan.baidu.com/s/1Zr1uCFj7YqgEWWof2gp-Lw" target="_blank" rel="noopener">https://pan.baidu.com/s/1Zr1uCFj7YqgEWWof2gp-Lw</a>  ，提取码：7fnw<br>相关算法实现链接：<br><a href="https://blog.csdn.net/ffcjjhv/article/details/89221992" target="_blank" rel="noopener">BundleFusion在win10+vs2013+cuda8.0上的实现</a><br><a href="https://blog.csdn.net/ffcjjhv/article/details/89151382" target="_blank" rel="noopener">DynamicFusion在ubuntu16.04+显卡GT740+cuda8.0上的实现</a><br><a href="https://blog.csdn.net/ffcjjhv/article/details/89258224" target="_blank" rel="noopener">ElasticFusion在ubuntu16.04+cuda8.0上的实现</a></p><p>参考链接：<br><a href="https://blog.csdn.net/fuxingyin/article/details/51417822" target="_blank" rel="noopener">KinectFusion 解析</a><br><a href="https://www.jianshu.com/p/7a447c633ae9" target="_blank" rel="noopener">KinectFusion 论文精析</a><br><a href="https://blog.csdn.net/xiaohu50/article/details/51592503" target="_blank" rel="noopener">kinect fusion 3D重建基本算法</a><br><a href="https://blog.csdn.net/qq_31785865/article/details/78524429" target="_blank" rel="noopener">KinectFusion中用到的TSDF Fusion</a><br><a href="https://blog.csdn.net/fuxingyin/article/details/52921958" target="_blank" rel="noopener">BundleFusion 解析</a><br><a href="https://blog.csdn.net/fuxingyin/article/details/51433793" target="_blank" rel="noopener">ElasticFusion 解析</a> （这个博主其他文章也非常值得参考）<br><a href="https://blog.csdn.net/datase/article/details/80961668" target="_blank" rel="noopener">ElasticFusion</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/20190617110733452.JPG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ZmY2pqaHY=,size_16,color_FFFFFF,t_70&quot; alt=&quot;在这里插入图片描述&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="三维重建" scheme="http://yoursite.com/categories/%E4%B8%89%E7%BB%B4%E9%87%8D%E5%BB%BA/"/>
    
      <category term="算法" scheme="http://yoursite.com/categories/%E4%B8%89%E7%BB%B4%E9%87%8D%E5%BB%BA/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="ElasticFusion" scheme="http://yoursite.com/tags/ElasticFusion/"/>
    
      <category term="RGBD" scheme="http://yoursite.com/tags/RGBD/"/>
    
      <category term="人脸实时三维重建" scheme="http://yoursite.com/tags/%E4%BA%BA%E8%84%B8%E5%AE%9E%E6%97%B6%E4%B8%89%E7%BB%B4%E9%87%8D%E5%BB%BA/"/>
    
  </entry>
  
  <entry>
    <title>Vue+iview+Echarts+electron 桌面应用</title>
    <link href="http://yoursite.com/2019/04/29/17/"/>
    <id>http://yoursite.com/2019/04/29/17/</id>
    <published>2019-04-29T12:01:15.000Z</published>
    <updated>2019-06-21T03:10:59.881Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一、Vue项目创建"><a href="#一、Vue项目创建" class="headerlink" title="一、Vue项目创建"></a>一、Vue项目创建</h1><h2 id="1、安装node-js"><a href="#1、安装node-js" class="headerlink" title="1、安装node.js"></a>1、安装node.js</h2><p>#下载安装包：<a href="https://nodejs.org/en/" target="_blank" rel="noopener">https://nodejs.org/en/</a><br>cmd输入<code>node -v</code> 和<code>npm -v</code>查看是否安装成功</p><a id="more"></a><p><img src="https://img-blog.csdnimg.cn/20190429103700396.JPG" alt="在这里插入图片描述"></p><h2 id="2、Vue开发环境"><a href="#2、Vue开发环境" class="headerlink" title="2、Vue开发环境"></a>2、Vue开发环境</h2><p>#命令行下载淘宝镜像命令工具 <code>cnpm</code></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install cnpm -g --registry=http:<span class="comment">//registry.npm.taobao.org</span></span><br></pre></td></tr></table></figure><p>#用 cnpm 命令全局安装vue-cli脚手架</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm install --global vue-cli</span><br></pre></td></tr></table></figure><p>输入vue，出来vue的信息说明安装成功<br><img src="https://img-blog.csdnimg.cn/2019042910425040.JPG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ZmY2pqaHY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="3、搭建Vue项目"><a href="#3、搭建Vue项目" class="headerlink" title="3、搭建Vue项目"></a>3、搭建Vue项目</h2><h3 id="（1）项目初始化"><a href="#（1）项目初始化" class="headerlink" title="（1）项目初始化"></a>（1）项目初始化</h3><p> 使用命令创建项目，一步步选择之后开始等等项目创建完成<br> <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vue init webpack app</span><br></pre></td></tr></table></figure></p><p><img src="https://img-blog.csdnimg.cn/20190429104503876.JPG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ZmY2pqaHY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h3 id="（2）项目预览"><a href="#（2）项目预览" class="headerlink" title="（2）项目预览"></a>（2）项目预览</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd demo</span><br><span class="line">npm run dev</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20190429105341255.JPG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ZmY2pqaHY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>打开浏览器，复制粘贴命令行显示的地址（ <a href="http://localhost:8080），跳出页面" target="_blank" rel="noopener">http://localhost:8080），跳出页面</a><br><img src="https://img-blog.csdnimg.cn/20190429105244906.JPG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ZmY2pqaHY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h1 id="二、引入ivew-Echarts"><a href="#二、引入ivew-Echarts" class="headerlink" title="二、引入ivew+Echarts"></a>二、引入ivew+Echarts</h1><h2 id="1、ivew-Echarts安装"><a href="#1、ivew-Echarts安装" class="headerlink" title="1、ivew+Echarts安装"></a>1、ivew+Echarts安装</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm install ivew -save</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm install echarts -save</span><br></pre></td></tr></table></figure><h2 id="2、引入ivew-Echarts"><a href="#2、引入ivew-Echarts" class="headerlink" title="2、引入ivew+Echarts"></a>2、引入ivew+Echarts</h2><p>项目<code>src/main.js</code>中引入ivew+Echarts</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">import iView from 'iview';</span><br><span class="line">import 'iview/dist/styles/iview.css';</span><br><span class="line"></span><br><span class="line">Vue.use(iView);</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">import Echarts from 'echarts'</span><br><span class="line">Vue.prototype.echarts = Echarts</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20190530103057482.JPG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ZmY2pqaHY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="3、Echarts组件"><a href="#3、Echarts组件" class="headerlink" title="3、Echarts组件"></a>3、Echarts组件</h2><p>将<code>src/components/HelloWorld</code>修改为如下内容</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br></pre></td><td class="code"><pre><span class="line">&lt;style scoped&gt;</span><br><span class="line">.layout&#123;</span><br><span class="line">    border: <span class="number">1</span>px solid #d7dde4;</span><br><span class="line">    background: #f5f7f9;</span><br><span class="line">    position: relative;</span><br><span class="line">    border-radius: <span class="number">4</span>px;</span><br><span class="line">    overflow: hidden;</span><br><span class="line">&#125;</span><br><span class="line">.layout-logo&#123;</span><br><span class="line">    width: <span class="number">100</span>px;</span><br><span class="line">    height: <span class="number">30</span>px;</span><br><span class="line">    background: #<span class="number">5b</span>6270;</span><br><span class="line">    border-radius: <span class="number">3</span>px;</span><br><span class="line">    <span class="keyword">float</span>: left;</span><br><span class="line">    position: relative;</span><br><span class="line">    top: <span class="number">15</span>px;</span><br><span class="line">    left: <span class="number">20</span>px;</span><br><span class="line">&#125;</span><br><span class="line">.layout-nav&#123;</span><br><span class="line">    width: <span class="number">420</span>px;</span><br><span class="line">    margin: <span class="number">0</span> <span class="keyword">auto</span>;</span><br><span class="line">    margin-right: <span class="number">20</span>px;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;<span class="keyword">template</span>&gt;</span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span>="<span class="title">layout</span>"&gt;</span></span><br><span class="line"><span class="class">        &lt;Layout&gt;</span></span><br><span class="line"><span class="class">            &lt;Header&gt;</span></span><br><span class="line"><span class="class">                &lt;Menu mode="horizontal" theme="dark" active-name="1"&gt;</span></span><br><span class="line"><span class="class">                    &lt;div class="layout-logo"&gt;&lt;/div&gt;</span></span><br><span class="line"><span class="class">                    &lt;div class="layout-nav"&gt;</span></span><br><span class="line"><span class="class">                        &lt;MenuItem name="1"&gt;</span></span><br><span class="line"><span class="class">                            &lt;Icon type="ios-navigate"&gt;&lt;/Icon&gt;</span></span><br><span class="line"><span class="class">                            <span class="title">Item</span> 1</span></span><br><span class="line"><span class="class">                        &lt;/MenuItem&gt;</span></span><br><span class="line"><span class="class">                        &lt;MenuItem name="2"&gt;</span></span><br><span class="line"><span class="class">                            &lt;Icon type="ios-keypad"&gt;&lt;/Icon&gt;</span></span><br><span class="line"><span class="class">                            <span class="title">Item</span> 2</span></span><br><span class="line"><span class="class">                        &lt;/MenuItem&gt;</span></span><br><span class="line"><span class="class">                        &lt;MenuItem name="3"&gt;</span></span><br><span class="line"><span class="class">                            &lt;Icon type="ios-analytics"&gt;&lt;/Icon&gt;</span></span><br><span class="line"><span class="class">                            <span class="title">Item</span> 3</span></span><br><span class="line"><span class="class">                        &lt;/MenuItem&gt;</span></span><br><span class="line"><span class="class">                        &lt;MenuItem name="4"&gt;</span></span><br><span class="line"><span class="class">                            &lt;Icon type="ios-paper"&gt;&lt;/Icon&gt;</span></span><br><span class="line"><span class="class">                            <span class="title">Item</span> 4</span></span><br><span class="line"><span class="class">                        &lt;/MenuItem&gt;</span></span><br><span class="line"><span class="class">                    &lt;/div&gt;</span></span><br><span class="line"><span class="class">                &lt;/Menu&gt;</span></span><br><span class="line"><span class="class">            &lt;/Header&gt;</span></span><br><span class="line"><span class="class">            &lt;Layout&gt;</span></span><br><span class="line"><span class="class">                &lt;Sider hide-trigger :style="&#123;background: '#fff'&#125;"&gt;</span></span><br><span class="line"><span class="class">                    &lt;Menu active-name="1-2" theme="light" width="auto" :open-names="['1']"&gt;</span></span><br><span class="line"><span class="class">                        &lt;Submenu name="1"&gt;</span></span><br><span class="line"><span class="class">                            &lt;template slot="title"&gt;</span></span><br><span class="line"><span class="class">                                &lt;Icon type="ios-navigate"&gt;&lt;/Icon&gt;</span></span><br><span class="line"><span class="class">                                <span class="title">Item</span> 1</span></span><br><span class="line"><span class="class">                            &lt;/template&gt;</span></span><br><span class="line"><span class="class">                            &lt;MenuItem name="1-1"&gt;<span class="title">Option</span> 1&lt;/MenuItem&gt;</span></span><br><span class="line"><span class="class">                            &lt;MenuItem name="1-2"&gt;<span class="title">Option</span> 2&lt;/MenuItem&gt;</span></span><br><span class="line"><span class="class">                            &lt;MenuItem name="1-3"&gt;<span class="title">Option</span> 3&lt;/MenuItem&gt;</span></span><br><span class="line"><span class="class">                        &lt;/Submenu&gt;</span></span><br><span class="line"><span class="class">                        &lt;Submenu name="2"&gt;</span></span><br><span class="line"><span class="class">                            &lt;template slot="title"&gt;</span></span><br><span class="line"><span class="class">                                &lt;Icon type="ios-keypad"&gt;&lt;/Icon&gt;</span></span><br><span class="line"><span class="class">                                <span class="title">Item</span> 2</span></span><br><span class="line"><span class="class">                            &lt;/template&gt;</span></span><br><span class="line"><span class="class">                            &lt;MenuItem name="2-1"&gt;<span class="title">Option</span> 1&lt;/MenuItem&gt;</span></span><br><span class="line"><span class="class">                            &lt;MenuItem name="2-2"&gt;<span class="title">Option</span> 2&lt;/MenuItem&gt;</span></span><br><span class="line"><span class="class">                        &lt;/Submenu&gt;</span></span><br><span class="line"><span class="class">                        &lt;Submenu name="3"&gt;</span></span><br><span class="line"><span class="class">                            &lt;template slot="title"&gt;</span></span><br><span class="line"><span class="class">                                &lt;Icon type="ios-analytics"&gt;&lt;/Icon&gt;</span></span><br><span class="line"><span class="class">                                <span class="title">Item</span> 3</span></span><br><span class="line"><span class="class">                            &lt;/template&gt;</span></span><br><span class="line"><span class="class">                            &lt;MenuItem name="3-1"&gt;<span class="title">Option</span> 1&lt;/MenuItem&gt;</span></span><br><span class="line"><span class="class">                            &lt;MenuItem name="3-2"&gt;<span class="title">Option</span> 2&lt;/MenuItem&gt;</span></span><br><span class="line"><span class="class">                        &lt;/Submenu&gt;</span></span><br><span class="line"><span class="class">                    &lt;/Menu&gt;</span></span><br><span class="line"><span class="class">                &lt;/Sider&gt;</span></span><br><span class="line"><span class="class">                &lt;Layout :style="&#123;padding: '0 24px 24px'&#125;"&gt;</span></span><br><span class="line"><span class="class">                    &lt;Breadcrumb :style="&#123;margin: '24px 0'&#125;"&gt;</span></span><br><span class="line"><span class="class">                        &lt;BreadcrumbItem&gt;<span class="title">Home</span>&lt;/BreadcrumbItem&gt;</span></span><br><span class="line"><span class="class">                        &lt;BreadcrumbItem&gt;<span class="title">Components</span>&lt;/BreadcrumbItem&gt;</span></span><br><span class="line"><span class="class">                        &lt;BreadcrumbItem&gt;<span class="title">Layout</span>&lt;/BreadcrumbItem&gt;</span></span><br><span class="line"><span class="class">                    &lt;/Breadcrumb&gt;</span></span><br><span class="line"><span class="class">                    &lt;Content :style="&#123;padding: '24px', minHeight: '280px', background: '#fff'&#125;"&gt;</span></span><br><span class="line"><span class="class">                        &lt;div id="echart" style="width: 940px;height:500px;"&gt;&lt;/div&gt;</span></span><br><span class="line"><span class="class">                    &lt;/Content&gt;</span></span><br><span class="line"><span class="class">                &lt;/Layout&gt;</span></span><br><span class="line"><span class="class">            &lt;/Layout&gt;</span></span><br><span class="line"><span class="class">        &lt;/Layout&gt;</span></span><br><span class="line"><span class="class">    &lt;/div&gt;</span></span><br><span class="line"><span class="class">&lt;/template&gt;</span></span><br><span class="line"><span class="class">&lt;script&gt;</span></span><br><span class="line"><span class="class">    <span class="title">import</span> <span class="title">echarts</span> <span class="title">from</span> '<span class="title">echarts</span>'</span></span><br><span class="line"><span class="class">    <span class="title">export</span> <span class="title">default</span> &#123;</span></span><br><span class="line">      data() &#123;</span><br><span class="line">        <span class="keyword">return</span> &#123;&#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      mounted() &#123;</span><br><span class="line">        <span class="comment">// 基于准备好的dom，初始化echarts实例</span></span><br><span class="line">        var myChart = echarts.init(document.getElementById('echart'));</span><br><span class="line">        <span class="comment">// 绘制图表</span></span><br><span class="line">        var option = &#123;</span><br><span class="line">          title : &#123;</span><br><span class="line">              text: '保有储量变化图',</span><br><span class="line">              subtext: '一次能源'</span><br><span class="line">          &#125;,</span><br><span class="line">          tooltip : &#123;</span><br><span class="line">              trigger: 'axis'</span><br><span class="line">          &#125;,</span><br><span class="line">          legend: &#123;</span><br><span class="line">              data:['煤','石油','天然气']</span><br><span class="line">          &#125;,</span><br><span class="line">          toolbox: &#123;</span><br><span class="line">              show : <span class="literal">true</span>,</span><br><span class="line">              feature : &#123;</span><br><span class="line">                  dataView : &#123;show: <span class="literal">true</span>, readOnly: <span class="literal">false</span>&#125;,</span><br><span class="line">                  magicType : &#123;show: true, type: ['line', 'bar']&#125;,</span><br><span class="line">                  restore : &#123;show: <span class="literal">true</span>&#125;,</span><br><span class="line">                  saveAsImage : &#123;show: <span class="literal">true</span>&#125;</span><br><span class="line">              &#125;</span><br><span class="line">          &#125;,</span><br><span class="line">          calculable : <span class="literal">true</span>,</span><br><span class="line">          xAxis : [</span><br><span class="line">              &#123;</span><br><span class="line">                  type : 'category',</span><br><span class="line">                  data : ['2009','2010','2011','2012','2013','2014','2015','2016','2017'],</span><br><span class="line">                  splitNumber: <span class="number">10</span></span><br><span class="line">              &#125;</span><br><span class="line">          ],</span><br><span class="line">          yAxis : [</span><br><span class="line">              &#123;</span><br><span class="line">                  type : 'value'</span><br><span class="line">              &#125;</span><br><span class="line">          ],</span><br><span class="line">          series : [</span><br><span class="line">              &#123;</span><br><span class="line">                  name:<span class="string">'煤'</span>,</span><br><span class="line">                  type:'bar',</span><br><span class="line">                  data:[<span class="number">1683.47</span>,<span class="number">1654.23</span>,<span class="number">1640.12</span>,<span class="number">1641.6</span>,<span class="number">1639.68</span>,<span class="number">1642.7</span>,<span class="number">1610.41</span>,<span class="number">1639.45</span>,<span class="number">1722.2</span>],</span><br><span class="line">                  markPoint : &#123;</span><br><span class="line">                      data : [</span><br><span class="line">                          &#123;type : 'max', name: '最大值'&#125;,</span><br><span class="line">                          &#123;type : 'min', name: '最小值'&#125;</span><br><span class="line">                      ]</span><br><span class="line">                  &#125;,</span><br><span class="line">                  markLine : &#123;</span><br><span class="line">                      data : [</span><br><span class="line">                          &#123;type : 'average', name: '平均值'&#125;</span><br><span class="line">                      ]</span><br><span class="line">                  &#125;</span><br><span class="line">              &#125;,</span><br><span class="line">              &#123;</span><br><span class="line">                  name:'石油',</span><br><span class="line">                  type:'bar',</span><br><span class="line">                  data:[<span class="number">22490.2</span>,<span class="number">24947.67</span>,<span class="number">29844.34</span>,<span class="number">31397.94</span>,<span class="number">33713</span>,<span class="number">36300.8</span>,<span class="number">38445.3</span>,<span class="number">38375.6</span>,<span class="number">38158.7</span>],</span><br><span class="line">                  markPoint : &#123;</span><br><span class="line">                      data : [</span><br><span class="line">                          &#123;type : 'max', name: '最大值'&#125;,</span><br><span class="line">                          &#123;type : 'min', name: '最小值'&#125;</span><br><span class="line">                      ]</span><br><span class="line">                  &#125;,</span><br><span class="line">                  markLine : &#123;</span><br><span class="line">                      data : [</span><br><span class="line">                          &#123;type : 'average', name : '平均值'&#125;</span><br><span class="line">                      ]</span><br><span class="line">                  &#125;</span><br><span class="line">              &#125;,</span><br><span class="line">              &#123;</span><br><span class="line">                  name:'天然气',</span><br><span class="line">                  type:'bar',</span><br><span class="line">                  data:[<span class="number">5502.54</span>,<span class="number">5628.11</span>,<span class="number">5478</span>,<span class="number">6376.26</span>,<span class="number">6231.14</span>,<span class="number">8047.88</span>,<span class="number">7857.1</span>,<span class="number">7802.5</span>,<span class="number">8695.01</span>],</span><br><span class="line">                  markPoint : &#123;</span><br><span class="line">                      data : [</span><br><span class="line">                          &#123;type : 'max', name: '最大值'&#125;,</span><br><span class="line">                          &#123;type : 'min', name: '最小值'&#125;</span><br><span class="line">                      ]</span><br><span class="line">                  &#125;,</span><br><span class="line">                  markLine : &#123;</span><br><span class="line">                      data : [</span><br><span class="line">                          &#123;type : 'average', name : '平均值'&#125;</span><br><span class="line">                      ]</span><br><span class="line">                  &#125;</span><br><span class="line">              &#125;  </span><br><span class="line">          ]</span><br><span class="line">        &#125;;</span><br><span class="line">        myChart.setOption(option);</span><br><span class="line">      &#125; </span><br><span class="line">    &#125; </span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm run dev</span><br></pre></td></tr></table></figure><p>打开<a href="http://localhost:8080" target="_blank" rel="noopener">http://localhost:8080</a> ，显示页面<br><img src="https://img-blog.csdnimg.cn/2019053010333712.JPG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ZmY2pqaHY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="4、生成项目"><a href="#4、生成项目" class="headerlink" title="4、生成项目"></a>4、生成项目</h2><p>执行生成命令</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm run build</span><br></pre></td></tr></table></figure><p>出现如下效果<br><img src="https://img-blog.csdnimg.cn/20190429111214467.JPG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ZmY2pqaHY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>项目下回多出一个dist的文件夹，里面是打包好的东西，双击index.html显示网页内容则证明生成成功<br><img src="https://img-blog.csdnimg.cn/20190429111253648.JPG" alt="在这里插入图片描述"></p><h3 id="（1）打包页面显示空白"><a href="#（1）打包页面显示空白" class="headerlink" title="（1）打包页面显示空白"></a>（1）打包页面显示空白</h3><p>修改index.js 中的生成路径，第46行改为<code>assetsPublicPath: &#39;./&#39;,</code>，否则后面程序运行打包页面会显示空白，找不到路径<br><img src="https://img-blog.csdnimg.cn/20190530094646185.JPG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ZmY2pqaHY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h3 id="（2）页面部分空白，router-view内容无法显示"><a href="#（2）页面部分空白，router-view内容无法显示" class="headerlink" title="（2）页面部分空白，router-view内容无法显示"></a>（2）页面部分空白，router-view内容无法显示</h3><p>// mode: ‘history’,//将这个模式关闭就好<br><img src="https://img-blog.csdnimg.cn/20190530095136965.JPG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ZmY2pqaHY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h3 id="（3）iview-打包之后，图标无法显示"><a href="#（3）iview-打包之后，图标无法显示" class="headerlink" title="（3）iview 打包之后，图标无法显示"></a>（3）iview 打包之后，图标无法显示</h3><p>在 <code>build/webpack.prod.conf.js</code> 中,将extract改为false<br><img src="https://img-blog.csdnimg.cn/20190530095429841.JPG" alt="在这里插入图片描述"><br>接下来一切操作都在<code>dist文件夹</code>目录下。</p><h1 id="三、electron打包"><a href="#三、electron打包" class="headerlink" title="三、electron打包"></a>三、electron打包</h1><h2 id="1、安装-electron"><a href="#1、安装-electron" class="headerlink" title="1、安装 electron"></a>1、安装 electron</h2><p>用 cnpm 命令安装 electron</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm install electron -g</span><br></pre></td></tr></table></figure><p>cmd输入electron -v查看是否安装成功<br><img src="https://img-blog.csdnimg.cn/20190429195032186.JPG" alt="在这里插入图片描述"></p><h2 id="2、-package-json-和-main-js"><a href="#2、-package-json-和-main-js" class="headerlink" title="2、 package.json 和 main.js"></a>2、 package.json 和 main.js</h2><p>在dist文件夹下，复制粘贴下面的 package.json 和 main.js文件，最终目录如图<br><img src="https://img-blog.csdnimg.cn/20190429194331359.JPG" alt="在这里插入图片描述"><br>在<code>package.json</code>中：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">"name"</span>    : <span class="string">"your-app"</span>,</span><br><span class="line">  <span class="string">"version"</span> : <span class="string">"0.1.0"</span>,</span><br><span class="line">  <span class="string">"main"</span>    : <span class="string">"main.js"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在<code>main.js</code>中</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">const &#123;app, BrowserWindow&#125; = require('electron')</span><br><span class="line">const path = require('path')</span><br><span class="line">const url = require('url')</span><br><span class="line"></span><br><span class="line"><span class="comment">// Keep a global reference of the window object, if you don't, the window will</span></span><br><span class="line"><span class="comment">// be closed automatically when the JavaScript object is garbage collected.</span></span><br><span class="line">let win</span><br><span class="line"></span><br><span class="line"><span class="function">function <span class="title">createWindow</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="comment">// Create the browser window.</span></span><br><span class="line">  win = <span class="keyword">new</span> BrowserWindow(&#123;width: <span class="number">800</span>, height: <span class="number">600</span>&#125;)</span><br><span class="line"></span><br><span class="line">  <span class="comment">// and load the index.html of the app.</span></span><br><span class="line">  win.loadURL(url.format(&#123;</span><br><span class="line">    pathname: path.join(__dirname, 'index.html'),</span><br><span class="line">    protocol: 'file:',</span><br><span class="line">    slashes: <span class="literal">true</span></span><br><span class="line">  &#125;))</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Open the DevTools.</span></span><br><span class="line">  <span class="comment">// win.webContents.openDevTools()</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// Emitted when the window is closed.</span></span><br><span class="line">  win.on('closed', () =&gt; &#123;</span><br><span class="line">    <span class="comment">// Dereference the window object, usually you would store windows</span></span><br><span class="line">    <span class="comment">// in an array if your app supports multi windows, this is the time</span></span><br><span class="line">    <span class="comment">// when you should delete the corresponding element.</span></span><br><span class="line">    win = null</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// This method will be called when Electron has finished</span></span><br><span class="line"><span class="comment">// initialization and is ready to create browser windows.</span></span><br><span class="line"><span class="comment">// Some APIs can only be used after this event occurs.</span></span><br><span class="line">app.on('ready', createWindow)</span><br><span class="line"></span><br><span class="line"><span class="comment">// Quit when all windows are closed.</span></span><br><span class="line">app.on('window-all-closed', () =&gt; &#123;</span><br><span class="line">  <span class="comment">// On macOS it is common for applications and their menu bar</span></span><br><span class="line">  <span class="comment">// to stay active until the user quits explicitly with Cmd + Q</span></span><br><span class="line">  if (process.platform !== 'darwin') &#123;</span><br><span class="line">    app.quit()</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">app.on('activate', () =&gt; &#123;</span><br><span class="line">  <span class="comment">// On macOS it's common to re-create a window in the app when the</span></span><br><span class="line">  <span class="comment">// dock icon is clicked and there are no other windows open.</span></span><br><span class="line">  <span class="keyword">if</span> (win === null) &#123;</span><br><span class="line">    createWindow()</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// In this file you can include the rest of your app's specific main process</span></span><br><span class="line"><span class="comment">// code. You can also put them in separate files and require them here.</span></span><br></pre></td></tr></table></figure><p>运行</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">electron .</span><br></pre></td></tr></table></figure><h2 id="3、electron-packager打包"><a href="#3、electron-packager打包" class="headerlink" title="3、electron-packager打包"></a>3、electron-packager打包</h2><h3 id="（1）全局安装electron-packager"><a href="#（1）全局安装electron-packager" class="headerlink" title="（1）全局安装electron-packager"></a>（1）全局安装<code>electron-packager</code></h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install electron-packager -g</span><br></pre></td></tr></table></figure><h3 id="（2）运行打包命令"><a href="#（2）运行打包命令" class="headerlink" title="（2）运行打包命令"></a>（2）运行打包命令</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">electron-packager . demo --win --out outApp --arch=x64 --app-version <span class="number">1.0</span><span class="number">.0</span> --electron-version <span class="number">5.0</span><span class="number">.0</span> --overwrite --ignore=node_modules</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20190429195228387.JPG" alt="在这里插入图片描述"><br>在<code>dist\outApp\demo-win32-x64</code>文件夹下生成可执行文件<code>demo.exe</code>,双击运行程序<br><img src="https://img-blog.csdnimg.cn/20190429195349765.JPG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ZmY2pqaHY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>嫌每次输入太长，可以将在<code>package.json</code>中添加</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"scripts"</span>: &#123;</span><br><span class="line">        <span class="string">"start"</span>: <span class="string">"electron ."</span>,</span><br><span class="line">        <span class="string">"build"</span>: <span class="string">"electron-packager . myApp --win --out outApp --arch=x64 --app-version 1.0.0 --electron-version 5.0.0 --overwrite --ignore=node_modules"</span></span><br><span class="line">      &#125;</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20190605162356685.JPG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ZmY2pqaHY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>这样输入<code>npm run start</code>相当于执行了<code>electron .</code>,测试打包效果<br>输入<code>npm run build</code>相当于执行了打包命令，在<code>dist\outApp\myApp-win32-x64</code>文件夹下生成可执行文件<code>myApp.exe</code></p><h2 id="4、源码加密"><a href="#4、源码加密" class="headerlink" title="4、源码加密"></a>4、源码加密</h2><p>在<code>outApp\demo-win32-x64\resources\app</code>里有写的源码。写的代码完全暴露在用户电脑上是非常不安全的，可以通过electron 自带的加密功能解决这个问题。</p><h3 id="（1）全局安装-asar"><a href="#（1）全局安装-asar" class="headerlink" title="（1）全局安装 asar"></a>（1）全局安装 asar</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install asar -g</span><br></pre></td></tr></table></figure><h3 id="（2）使用asar指令进行加密"><a href="#（2）使用asar指令进行加密" class="headerlink" title="（2）使用asar指令进行加密"></a>（2）使用asar指令进行加密</h3><p>在<code>resources</code>目录下使用<code>asar</code>指令进行加密</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">asar pack ./app app.asar</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20190429195615524.JPG" alt="在这里插入图片描述"><br>将原来的app文件夹删除，这样生成的<code>app.asar</code>就加密了之前的源代码<br>双击<code>demo.exe</code>重新运行程序</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;一、Vue项目创建&quot;&gt;&lt;a href=&quot;#一、Vue项目创建&quot; class=&quot;headerlink&quot; title=&quot;一、Vue项目创建&quot;&gt;&lt;/a&gt;一、Vue项目创建&lt;/h1&gt;&lt;h2 id=&quot;1、安装node-js&quot;&gt;&lt;a href=&quot;#1、安装node-js&quot; class=&quot;headerlink&quot; title=&quot;1、安装node.js&quot;&gt;&lt;/a&gt;1、安装node.js&lt;/h2&gt;&lt;p&gt;#下载安装包：&lt;a href=&quot;https://nodejs.org/en/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://nodejs.org/en/&lt;/a&gt;&lt;br&gt;cmd输入&lt;code&gt;node -v&lt;/code&gt; 和&lt;code&gt;npm -v&lt;/code&gt;查看是否安装成功&lt;/p&gt;
    
    </summary>
    
      <category term="前端" scheme="http://yoursite.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="electron" scheme="http://yoursite.com/tags/electron/"/>
    
      <category term="Vue" scheme="http://yoursite.com/tags/Vue/"/>
    
      <category term="iview" scheme="http://yoursite.com/tags/iview/"/>
    
      <category term="Echarts" scheme="http://yoursite.com/tags/Echarts/"/>
    
      <category term="桌面应用" scheme="http://yoursite.com/tags/%E6%A1%8C%E9%9D%A2%E5%BA%94%E7%94%A8/"/>
    
  </entry>
  
  <entry>
    <title>一步步配置腾讯云服务器Ubuntu 通过域名访问自己的网页tomcat（详细基础）</title>
    <link href="http://yoursite.com/2019/04/26/22/"/>
    <id>http://yoursite.com/2019/04/26/22/</id>
    <published>2019-04-26T08:32:46.000Z</published>
    <updated>2019-06-21T03:19:46.545Z</updated>
    
    <content type="html"><![CDATA[<h1 id="STEP1-云服务器-域名"><a href="#STEP1-云服务器-域名" class="headerlink" title="STEP1:云服务器+域名"></a>STEP1:云服务器+域名</h1><h2 id="1、购买云服务器、域名"><a href="#1、购买云服务器、域名" class="headerlink" title="1、购买云服务器、域名"></a>1、购买云服务器、域名</h2><p>购买学生优惠套餐 10元/月：<a href="https://cloud.tencent.com/act/campus?fromSource=gwzcw.1088196.1088196.1088196" target="_blank" rel="noopener">https://cloud.tencent.com/act/campus?fromSource=gwzcw.1088196.1088196.1088196</a><br>系统选ubuntu，购买3个月加购域名共38元（3个月以下没法添加域名解析），买了域名以后可以直接通过域名访问</p><a id="more"></a><p><img src="https://img-blog.csdnimg.cn/20181220201420186.JPG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ZmY2pqaHY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>收到服务器信息，最好把这些复制到一个txt里，以后会经常用。</p><h2 id="2、添加解析"><a href="#2、添加解析" class="headerlink" title="2、添加解析"></a>2、添加解析</h2><p>在控制台进入云解析，添加解析，填域名，点新手快速添加， 网站解析，输入公网ip（无需备案）<br>完成后：<br><img src="https://img-blog.csdnimg.cn/20181220200632602.JPG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ZmY2pqaHY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="3、设置安全组"><a href="#3、设置安全组" class="headerlink" title="3、设置安全组"></a>3、设置安全组</h2><p>控制台-云服务器-安全组-新建，选择 放通22，80，443，3389端口和ICMP协议，新建安全组<br>点击关联实例数，新增关联与自己的服务器进行关联，<br>点击修改规则，放通8080端口（tomcat要用）<img src="https://img-blog.csdnimg.cn/20181220212224635.JPG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ZmY2pqaHY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h1 id="STEP2-连接服务器，配置JDK-tomcat"><a href="#STEP2-连接服务器，配置JDK-tomcat" class="headerlink" title="STEP2:连接服务器，配置JDK+tomcat"></a>STEP2:连接服务器，配置JDK+tomcat</h1><h2 id="1、连接服务器"><a href="#1、连接服务器" class="headerlink" title="1、连接服务器"></a>1、连接服务器</h2><p>下载安装PuTTY：<a href="https://www.chiark.greenend.org.uk/~sgtatham/putty/latest.html" target="_blank" rel="noopener">https://www.chiark.greenend.org.uk/~sgtatham/putty/latest.html</a><br>下载安装WinSCP：<a href="https://winscp.net/eng/download.php" target="_blank" rel="noopener">https://winscp.net/eng/download.php</a></p><h3 id="（1）PuTTY连接服务器"><a href="#（1）PuTTY连接服务器" class="headerlink" title="（1）PuTTY连接服务器"></a>（1）PuTTY连接服务器</h3><p>输入公网ip<br><img src="https://img-blog.csdnimg.cn/20181220201826146.JPG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ZmY2pqaHY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>输入默认账户ubuntu，输入初始密码<strong><strong>**</strong></strong>，登陆成功如上图。</p><h4 id="putty的复制粘贴技巧"><a href="#putty的复制粘贴技巧" class="headerlink" title="putty的复制粘贴技巧"></a>putty的复制粘贴技巧</h4><p>复制密码后，在putty直接右键就是粘贴，密码不显示注意不要多复制。（如果想复制putty中的文字，左键选取就已经复制上了）<br><img src="https://img-blog.csdnimg.cn/20181220202551470.JPG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ZmY2pqaHY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h4 id="创建root账号"><a href="#创建root账号" class="headerlink" title="创建root账号"></a>创建root账号</h4><p>1、设置root密码<br>sudo passwd root<br>输入密码<br>2、获取root权限<br>输入su<br>输入密码<br>以后再次登录，输入su再输入密码就可以了，成功后：</p><blockquote><p>root@VM-0-16-ubuntu:/home/ubuntu#</p></blockquote><h3 id="（2）winSCP连接服务器"><a href="#（2）winSCP连接服务器" class="headerlink" title="（2）winSCP连接服务器"></a>（2）winSCP连接服务器</h3><p>主机名为公网ip，点击登录<br><img src="https://img-blog.csdnimg.cn/20181220203010452.JPG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ZmY2pqaHY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>尝试新建文件夹test，提示permission denied<br><img src="https://img-blog.csdnimg.cn/2018122020325485.JPG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ZmY2pqaHY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h4 id="使用root登录winSCP："><a href="#使用root登录winSCP：" class="headerlink" title="使用root登录winSCP："></a>使用root登录winSCP：</h4><p>打开winSCP填写登录信息 ，点击高级，设置SFTP如下：<br><code>sudo /usr/lib/openssh/sftp-server</code><br><img src="https://img-blog.csdnimg.cn/20181220204051332.JPG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ZmY2pqaHY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>重新登录后，就可以将本地文件拖到服务器中了。</p><h2 id="2、配置JDK-tomcat（ubuntu云服务器）"><a href="#2、配置JDK-tomcat（ubuntu云服务器）" class="headerlink" title="2、配置JDK+tomcat（ubuntu云服务器）"></a>2、配置JDK+tomcat（ubuntu云服务器）</h2><p>下载jdk8：<a href="http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html" target="_blank" rel="noopener">http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html</a><br>下载Tomcat：<a href="https://tomcat.apache.org/download-90.cgi" target="_blank" rel="noopener">https://tomcat.apache.org/download-90.cgi</a><br>root登录winSCP后，将下载的 jdk-8u191-linux-x64.tar.gz 和 jdk-11.0.1_linux-x64_bin.tar.gz拖到/usr/local/src/目录下   </p><h3 id="（1）安装JDK1-8"><a href="#（1）安装JDK1-8" class="headerlink" title="（1）安装JDK1.8"></a>（1）安装JDK1.8</h3><p>root登录putty后，输入<br><code>cd /usr/local/src/</code> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // 进入存放安装包的位置<br><code>tar zxvf jdk-8u144-linux-x64.tar.gz</code> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // 解压下载的数据包<br><code>mv jdk1.8.0_144 /usr/local/jdk1.8</code> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // 给解压完成后的数据包更换一个其他目录并且改名<br><code>vi /etc/profile</code>  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // 编辑/etc/profile  环境变量文件<br>在最后面添加</p><blockquote><p>JAVA_HOME=/usr/local/jdk1.8<br>JAVA_BIN=/usr/local/jdk1.8/bin<br>JRE_HOME=/usr/local/jdk1.8/jre<br>PATH=$PATH:/usr/local/jdk1.8/bin:/usr/local/jdk1.8/jre/bin<br>CLASSPATH=/usr/local/jdk1.8/jre/lib:/usr/local/jdk1.8/lib:/usr/local/jdk1.8/jre/lib/charsets.jar</p></blockquote><h4 id="vi使用技巧"><a href="#vi使用技巧" class="headerlink" title="vi使用技巧"></a>vi使用技巧</h4><p>输入 i ，退出命令模式，进入INSERT模式<br>开始修改内容……<br>按 esc 键，退出INSERT模式，进入命令模式<br>再输入 :wq，保存文件，退出vi编辑器</p><p>键 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 功能<br>:wq &nbsp;&nbsp;&nbsp;&nbsp;     保存文件，退出vi编辑器<br>:w  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;    保存文件，但不退出vi编辑器<br>:q  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;     退出vi编辑器<br>:q! &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;    不保存文件，退出vi编辑器<br>ZZ  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;    保存文件，退出vi编辑器<br>或者在winSCP中直接打开/etc/profile文件，修改后保存。</p><p>putty中输入<br><code>source /etc/profile</code> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // source重启环境变量配置文件<br><code>java -version</code>  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // 检测jdk环境是否配置好<br><img src="https://img-blog.csdnimg.cn/20181220210757797.JPG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ZmY2pqaHY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>注：每次登录，碰到java -version不显示版本号就，先<code>source /etc/profile</code>，再<code>java -version</code>，就好了。</p><h3 id="（2）安装Tomcat9"><a href="#（2）安装Tomcat9" class="headerlink" title="（2）安装Tomcat9"></a>（2）安装Tomcat9</h3><p>root登录putty后，输入<br><code>cd /usr/local/src/</code> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // 进入存放安装包的位置<br><code>tar zxvf apache-tomcat-9.0.14.tar.gz</code> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // 解压下载的数据包<br><code>mv apache-tomcat-9.0.14 /usr/local/tomcat</code> &nbsp;&nbsp; // 给解压完成后的数据包更换一个其他目录并且改名<br><code>/usr/local/tomcat/bin/startup.sh</code> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // 启动Tomcat</p><p>Tomcat启用成功了显示：</p><blockquote><p>Using CATALINA_BASE:   /usr/local/tomcat<br>Using CATALINA_HOME:   /usr/local/tomcat<br>Using CATALINA_TMPDIR: /usr/local/tomcat/temp<br>Using JRE_HOME:        /usr/local/jdk1.8<br>Using CLASSPATH:       /usr/local/tomcat/bin/bootstrap.jar:/usr/local/tomcat/bin/tomcat-juli.jar<br>Tomcat started.</p></blockquote><p>如果要关闭Tomcat<br><code>/usr/local/tomcat/bin/shutdown.sh</code><br>启动Tomcat后，确定服务器8080端口放通，则在浏览器输入 服务器公网ip:8080，一只熟悉的猫出现了~注：如果添加了域名解析，可以用域名代替ip</p><h1 id="STEP3-本地网页布置到tomcat"><a href="#STEP3-本地网页布置到tomcat" class="headerlink" title="STEP3:本地网页布置到tomcat"></a>STEP3:本地网页布置到tomcat</h1><p>希望ip:8080访问自己的网页<br>首先有自己的网页，如自己写的跳一跳网页，下载地址：<a href="https://github.com/zj19941113/You_Jump_I_Jump" target="_blank" rel="noopener">https://github.com/zj19941113/You_Jump_I_Jump</a><br>将项目文件夹zjgame放到tomcat/webapps/文件夹中，从ROOT中将WEB-INF文件夹复制到zjgame，访问ip:8080/zjgame/zjtest.html，就能看到项目了<br>如果添加了域名解析，可以访问 域名:8080/zjgame/zjtest.html<br><img src="https://img-blog.csdnimg.cn/20181220213248797.JPG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ZmY2pqaHY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h3 id="（1）去掉项目名"><a href="#（1）去掉项目名" class="headerlink" title="（1）去掉项目名"></a>（1）去掉项目名</h3><p>a. 将zjgame中的网页和资源文件复制到ROOT中，zjtest.html重命名为index.html<br>浏览器输入 ip:8080 就能访问了<br>或者</p><p>b. 修改 /usr/local/tomcat/conf/server.xml 文件<br><img src="https://img-blog.csdnimg.cn/20181224161700100.JPG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ZmY2pqaHY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>在&lt;Host&gt;&lt;/Host&gt;里加上 &lt;Context path=”” docBase=”项目名” reloadable=”true” /&gt;</p><h3 id="（2）去掉-8080"><a href="#（2）去掉-8080" class="headerlink" title="（2）去掉:8080"></a>（2）去掉:8080</h3><p>修改 /usr/local/tomcat/conf/server.xml 文件，将默认端口port=”8080”改为”80”</p><blockquote><p>Connector port=”80” protocol=”HTTP/1.1” connectionTimeout=”20000”  redirectPort=”8443” /&gt;</p></blockquote><p>关闭Tomcat<br><code>/usr/local/tomcat/bin/shutdown.sh</code><br>过一会再重启<br><code>/usr/local/tomcat/bin/startup.sh</code><br>因为之前已经进行过域名解析，所以直接访问 <a href="http://zhoujie1994.cn" target="_blank" rel="noopener">http://zhoujie1994.cn</a> 就能看到自己的网页了<br><img src="https://img-blog.csdnimg.cn/2018122019554673.JPG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ZmY2pqaHY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>备案后不会再提示不安全：<a href="https://zhoujie1994.cn/three/" target="_blank" rel="noopener">https://zhoujie1994.cn/three/</a><br><img src="https://img-blog.csdnimg.cn/20190123095759145.JPG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ZmY2pqaHY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;STEP1-云服务器-域名&quot;&gt;&lt;a href=&quot;#STEP1-云服务器-域名&quot; class=&quot;headerlink&quot; title=&quot;STEP1:云服务器+域名&quot;&gt;&lt;/a&gt;STEP1:云服务器+域名&lt;/h1&gt;&lt;h2 id=&quot;1、购买云服务器、域名&quot;&gt;&lt;a href=&quot;#1、购买云服务器、域名&quot; class=&quot;headerlink&quot; title=&quot;1、购买云服务器、域名&quot;&gt;&lt;/a&gt;1、购买云服务器、域名&lt;/h2&gt;&lt;p&gt;购买学生优惠套餐 10元/月：&lt;a href=&quot;https://cloud.tencent.com/act/campus?fromSource=gwzcw.1088196.1088196.1088196&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://cloud.tencent.com/act/campus?fromSource=gwzcw.1088196.1088196.1088196&lt;/a&gt;&lt;br&gt;系统选ubuntu，购买3个月加购域名共38元（3个月以下没法添加域名解析），买了域名以后可以直接通过域名访问&lt;/p&gt;
    
    </summary>
    
      <category term="前端" scheme="http://yoursite.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="腾讯云服务器" scheme="http://yoursite.com/tags/%E8%85%BE%E8%AE%AF%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
      <category term="tomcat" scheme="http://yoursite.com/tags/tomcat/"/>
    
  </entry>
  
  <entry>
    <title>Kinect v1实时dlib(GPU版)人脸识别与活体检测</title>
    <link href="http://yoursite.com/2019/04/22/16/"/>
    <id>http://yoursite.com/2019/04/22/16/</id>
    <published>2019-04-22T11:39:33.000Z</published>
    <updated>2019-06-21T03:07:30.247Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一、配置"><a href="#一、配置" class="headerlink" title="一、配置"></a>一、配置</h1><h2 id="1、opencv"><a href="#1、opencv" class="headerlink" title="1、opencv"></a>1、opencv</h2><p>#安装依赖</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install libvtk5-dev</span><br><span class="line">sudo apt-get install libgtk2<span class="number">.0</span>-dev</span><br></pre></td></tr></table></figure><a id="more"></a><p>#安装OpenCV 2.4.13</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">git clone https:<span class="comment">//github.com/opencv/opencv</span></span><br><span class="line">cd opencv/</span><br><span class="line">git checkout <span class="number">2.4</span><span class="number">.13</span><span class="number">.3</span></span><br><span class="line">mkdir -p build &amp;&amp; cd build</span><br><span class="line">cmake -DWITH_VTK=ON -DWITH_GTK=ON -DBUILD_opencv_calib3d=ON -DBUILD_opencv_imgproc=ON -DWITH_CUDA=OFF ..</span><br><span class="line">make -j4</span><br><span class="line">sudo make install</span><br></pre></td></tr></table></figure><p>注：opencv的下载过程非常慢</p><h2 id="2、dlib（GPU版）"><a href="#2、dlib（GPU版）" class="headerlink" title="2、dlib（GPU版）"></a>2、dlib（GPU版）</h2><p>需要提前安装<code>驱动、cuda 与 cudnn</code><br>进入官网：<a href="http://dlib.net/" target="_blank" rel="noopener">http://dlib.net/</a> ，点击左下角<code>Download dlib ver.19.17</code> ，下载后解压。<br>进入dlib根目录下</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mkdir build &amp;&amp; cd build</span><br><span class="line">cmake .. </span><br><span class="line">cmake --build . --config Release</span><br><span class="line">sudo make install</span><br></pre></td></tr></table></figure><p>注：会自动检查满足安装gpu版条件，注意命令行提示信息</p><h1 id="二、Kinect-v1接入"><a href="#二、Kinect-v1接入" class="headerlink" title="二、Kinect v1接入"></a>二、Kinect v1接入</h1><h2 id="1、安装OpenNI2"><a href="#1、安装OpenNI2" class="headerlink" title="1、安装OpenNI2"></a>1、安装OpenNI2</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git clone https:<span class="comment">//github.com/occipital/OpenNI2.git</span></span><br><span class="line">cd OpenNI2</span><br><span class="line">make -j4</span><br></pre></td></tr></table></figure><h2 id="2、安装libFreenect"><a href="#2、安装libFreenect" class="headerlink" title="2、安装libFreenect"></a>2、安装libFreenect</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git clone https:<span class="comment">//github.com/OpenKinect/libfreenect</span></span><br><span class="line">cd libfreenect</span><br></pre></td></tr></table></figure><p>打开<code>libfreenect/CMakeLists.txt</code>，在33行<code>cmake_minimum_required(VERSION 2.8.12)</code>下一行添加</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">add_definitions(-<span class="built_in">std</span>=c++<span class="number">11</span>)</span><br></pre></td></tr></table></figure><p>保存后关闭，命令行继续执行</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mkdir build &amp;&amp; cd build  </span><br><span class="line">cmake .. -DBUILD_OPENNI2_DRIVER=ON  </span><br><span class="line">make -j4</span><br><span class="line">cp -L lib/OpenNI2-FreenectDriver/libFreenectDriver.so $&#123;OPENNI2_DIR&#125;/Bin/x64-Release/OpenNI2/Drivers   #OPENNI2_DIR需要修改</span><br></pre></td></tr></table></figure><p>注：<code>${OPENNI2_DIR}</code>是OpenNI2的解压文件夹，比如我的在ElasticFusion文件夹，则<br><img src="https://img-blog.csdnimg.cn/2019041516412934.png" alt="在这里插入图片描述"><br>打开<code>libfreenect</code>文件夹，运行</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo cp platform/linux/udev/<span class="number">51</span>-kinect.rules /etc/udev/rules.d</span><br></pre></td></tr></table></figure><p>重启后，插上kinect后，命令行运行<code>clsusb</code>，查看是否包含：Xbox camera，Xbox motor，Xbox audio<br><img src="https://img-blog.csdnimg.cn/20190415165040377.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ZmY2pqaHY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h1 id="二、代码运行"><a href="#二、代码运行" class="headerlink" title="二、代码运行"></a>二、代码运行</h1><h2 id="1、CMakeList-txt修改"><a href="#1、CMakeList-txt修改" class="headerlink" title="1、CMakeList.txt修改"></a>1、CMakeList.txt修改</h2><p>#CMakeList.txt</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">cmake_minimum_required(VERSION <span class="number">2.8</span><span class="number">.4</span>) </span><br><span class="line"></span><br><span class="line">project(face_dlib) </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">SET(CMAKE_CXX_FLAGS <span class="string">"$&#123;CMAKE_CXX_FLAGS&#125; -O2 -DDLIB_JPEG_SUPPORT"</span>)</span><br><span class="line"></span><br><span class="line">IF(CMAKE_CXX_COMPILER_ID STREQUAL <span class="string">"Clang"</span>)</span><br><span class="line">  SET(CMAKE_CXX_FLAGS <span class="string">"$&#123;CMAKE_CXX_FLAGS&#125; -Weverything"</span>)</span><br><span class="line">ELSEIF(CMAKE_CXX_COMPILER_ID STREQUAL <span class="string">"GNU"</span>)</span><br><span class="line">  SET(CMAKE_CXX_FLAGS <span class="string">"$&#123;CMAKE_CXX_FLAGS&#125; -Wall -Wextra"</span>)</span><br><span class="line">ENDIF()</span><br><span class="line"></span><br><span class="line"><span class="meta"># opencv</span></span><br><span class="line">find_package(OpenCV REQUIRED)</span><br><span class="line">include_directories($&#123;OpenCV_INCLUDE_DIRS&#125;)</span><br><span class="line"></span><br><span class="line"># OpenNI2</span><br><span class="line"><span class="built_in">set</span>(OPENNI2_PATH <span class="string">"/home/zhoujie/fusion/ElasticFusion/OpenNI2"</span>) </span><br><span class="line"></span><br><span class="line"><span class="built_in">set</span>(OPENNI2_INCLUDE_DIR $&#123;OPENNI2_PATH&#125;/Include)</span><br><span class="line"><span class="built_in">set</span>(OPENNI2_LIBRARY $&#123;OPENNI2_PATH&#125;/Bin/x64-Release)</span><br><span class="line">include_directories ($&#123;OPENNI2_INCLUDE_DIR&#125;)</span><br><span class="line">link_directories ($&#123;OPENNI2_LIBRARY&#125;)</span><br><span class="line"></span><br><span class="line"><span class="meta"># dlib</span></span><br><span class="line">include(/home/zhoujie/dlib<span class="number">-19.17</span>/dlib/cmake)</span><br><span class="line"></span><br><span class="line">add_executable(this_is_who_kinect_one src/this_is_who_kinect_one.cpp)</span><br><span class="line">target_link_libraries(this_is_who_kinect_one dlib $&#123;OpenCV_LIBS&#125; libOpenNI2.so)</span><br><span class="line"></span><br><span class="line">macro(add_face_dlib name)</span><br><span class="line">   add_executable($&#123;name&#125; src/$&#123;name&#125;.cpp)</span><br><span class="line">   target_link_libraries($&#123;name&#125; dlib )</span><br><span class="line">endmacro()</span><br><span class="line"></span><br><span class="line">add_face_dlib(train_candidate)</span><br><span class="line">add_face_dlib(this_is_who)</span><br></pre></td></tr></table></figure><p>将<code>OPENNI2_PATH</code>与<code>dlib</code>路径修改为自己的。</p><h2 id="2、数据-模型下载"><a href="#2、数据-模型下载" class="headerlink" title="2、数据+模型下载"></a>2、数据+模型下载</h2><p>下载 <code>shape_predictor_68_face_landmarks.dat</code> 和 <code>dlib_face_recognition_resnet_model_v1.dat</code> 放置到<code>model</code>文件夹中</p><p>链接：<a href="https://pan.baidu.com/s/1jIoW6BSa5nkGWNipL7sxVQ" target="_blank" rel="noopener">https://pan.baidu.com/s/1jIoW6BSa5nkGWNipL7sxVQ</a><br>其中包括：</p><ul><li>candidate-face.zip（人脸库：包含29个正面人脸红外图）</li><li>allface.zip（测试人脸集：包括29个人，每人13种脸部姿态下的红外图与深度图）</li><li>shape_predictor_68_face_landmarks.dat（人脸68关键点检测器）</li><li>dlib_face_recognition_resnet_model_v1.dat（人脸识别模型）<br><img src="https://img-blog.csdnimg.cn/20190123122918821.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ZmY2pqaHY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li></ul><h2 id="3、代码运行"><a href="#3、代码运行" class="headerlink" title="3、代码运行"></a>3、代码运行</h2><p><img src="https://img-blog.csdnimg.cn/20190422194030399.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ZmY2pqaHY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>将<code>train_candidate.cpp</code> 、<code>this_is_who</code> 和 <code>this_is_who_kinect_one.cpp</code>置于<code>src</code>文件夹中。</p><p>#build</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir build &amp;&amp; cd build</span><br><span class="line">cmake ..</span><br><span class="line">make -j4</span><br></pre></td></tr></table></figure><p>cmake时检查是否适用dlib(GPU)版<br><img src="https://img-blog.csdnimg.cn/20190423104534219.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ZmY2pqaHY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><img src="https://img-blog.csdnimg.cn/20190423104605942.png" alt="在这里插入图片描述"><br>最终在<code>build</code>文件夹中生成多个可执行文件<br><img src="https://img-blog.csdnimg.cn/20190423104548489.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ZmY2pqaHY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>将人脸图片重命名为人的名字，放在<code>data</code>文件夹中。</p><p>1、运行<code>train_candidate</code> 获得人脸库特征信息，存储在<code>candidates_descriptors.dat</code> 与 <code>candidates.dat</code> 中，同时生成<code>candidates.txt</code>，便于查看候选人信息。每次修改人脸库，只需运行<code>train_candidate</code>，完成人脸信息的更新。<br><img src="https://img-blog.csdnimg.cn/20190423102438856.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ZmY2pqaHY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>2、运行<code>this_is_who_kinect_one</code>,实时获取Kinect深度图与彩色图，并进行人脸识别与活体检测。<br><img src="https://img-blog.csdnimg.cn/20190422193123321.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ZmY2pqaHY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>3、 不使用kinect v1实时接入，在离线数据上测试，运行<code>this_is_who</code>,使用<code>data/allface</code>中的深度图与红外图，并进行人脸识别与活体检测。<br><img src="https://img-blog.csdnimg.cn/20190423103125141.png" alt="在这里插入图片描述"><br>代码部分：</p><p>#train_candidate</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;dlib/dnn.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;dlib/image_processing/frontal_face_detector.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;dlib/image_processing.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;dlib/gui_widgets.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;dlib/image_io.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;time.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;dirent.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> dlib;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 函数声明 */</span></span><br><span class="line"><span class="comment">/* 人脸库训练 */</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">candidates_train</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span> *facesFile,<span class="built_in">std</span>::<span class="built_in">vector</span>&lt;matrix&lt;<span class="keyword">float</span>,<span class="number">0</span>,<span class="number">1</span>&gt;&gt;&amp;candidates_descriptors,<span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="built_in">string</span>&gt;&amp;candidates)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">template</span> &lt;<span class="keyword">int</span>,<span class="keyword">template</span>&lt;<span class="keyword">typename</span>&gt;<span class="class"><span class="keyword">class</span>,<span class="title">int</span>,<span class="title">typename</span>&gt; <span class="title">class</span> <span class="title">block</span>, <span class="title">int</span> <span class="title">N</span>, <span class="title">template</span>&lt;typename&gt;<span class="title">class</span> <span class="title">BN</span>, <span class="title">typename</span> <span class="title">SUBNET</span>&gt;</span></span><br><span class="line"><span class="class"><span class="title">using</span> <span class="title">residual</span> = <span class="title">add_prev1</span>&lt;block&lt;N,BN,1,tag1&lt;SUBNET&gt;&gt;&gt;;</span></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">template</span> &lt;<span class="keyword">int</span>,<span class="keyword">template</span>&lt;<span class="keyword">typename</span>&gt;<span class="class"><span class="keyword">class</span>,<span class="title">int</span>,<span class="title">typename</span>&gt; <span class="title">class</span> <span class="title">block</span>, <span class="title">int</span> <span class="title">N</span>, <span class="title">template</span>&lt;typename&gt;<span class="title">class</span> <span class="title">BN</span>, <span class="title">typename</span> <span class="title">SUBNET</span>&gt;</span></span><br><span class="line"><span class="class"><span class="title">using</span> <span class="title">residual_down</span> = <span class="title">add_prev2</span>&lt;avg_pool&lt;2,2,2,2,skip1&lt;tag2&lt;block&lt;N,BN,2,tag1&lt;SUBNET&gt;&gt;&gt;&gt;&gt;&gt;;</span></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">int</span> N, <span class="keyword">template</span> &lt;<span class="keyword">typename</span>&gt; <span class="class"><span class="keyword">class</span> <span class="title">BN</span>, <span class="title">int</span> <span class="title">stride</span>, <span class="title">typename</span> <span class="title">SUBNET</span>&gt; </span></span><br><span class="line"><span class="class"><span class="title">using</span> <span class="title">block</span>  = <span class="title">BN</span>&lt;con&lt;N,3,3,1,1,relu&lt;BN&lt;con&lt;N,3,3,stride,stride,SUBNET&gt;&gt;&gt;&gt;&gt;;</span></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">int</span> N, <span class="keyword">typename</span> SUBNET&gt; <span class="keyword">using</span> ares      = relu&lt;residual&lt;block,N,affine,SUBNET&gt;&gt;;</span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">int</span> N, <span class="keyword">typename</span> SUBNET&gt; <span class="keyword">using</span> ares_down = relu&lt;residual_down&lt;block,N,affine,SUBNET&gt;&gt;;</span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> SUBNET&gt; <span class="keyword">using</span> alevel0 = ares_down&lt;<span class="number">256</span>,SUBNET&gt;;</span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> SUBNET&gt; <span class="keyword">using</span> alevel1 = ares&lt;<span class="number">256</span>,ares&lt;<span class="number">256</span>,ares_down&lt;<span class="number">256</span>,SUBNET&gt;&gt;&gt;;</span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> SUBNET&gt; <span class="keyword">using</span> alevel2 = ares&lt;<span class="number">128</span>,ares&lt;<span class="number">128</span>,ares_down&lt;<span class="number">128</span>,SUBNET&gt;&gt;&gt;;</span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> SUBNET&gt; <span class="keyword">using</span> alevel3 = ares&lt;<span class="number">64</span>,ares&lt;<span class="number">64</span>,ares&lt;<span class="number">64</span>,ares_down&lt;<span class="number">64</span>,SUBNET&gt;&gt;&gt;&gt;;</span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> SUBNET&gt; <span class="keyword">using</span> alevel4 = ares&lt;<span class="number">32</span>,ares&lt;<span class="number">32</span>,ares&lt;<span class="number">32</span>,SUBNET&gt;&gt;&gt;;</span><br><span class="line"><span class="keyword">using</span> anet_type = loss_metric&lt;fc_no_bias&lt;<span class="number">128</span>,avg_pool_everything&lt;</span><br><span class="line">    alevel0&lt;</span><br><span class="line">    alevel1&lt;</span><br><span class="line">    alevel2&lt;</span><br><span class="line">    alevel3&lt;</span><br><span class="line">    alevel4&lt;</span><br><span class="line">    max_pool&lt;<span class="number">3</span>,<span class="number">3</span>,<span class="number">2</span>,<span class="number">2</span>,relu&lt;affine&lt;con&lt;<span class="number">32</span>,<span class="number">7</span>,<span class="number">7</span>,<span class="number">2</span>,<span class="number">2</span>,</span><br><span class="line">    input_rgb_image_sized&lt;<span class="number">150</span>&gt;</span><br><span class="line">    &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span>** argv)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (argc == <span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">"\nCall this program like this:"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">"./train_candidate ../data/candidate-face/"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">char</span> *facesFile = argv[<span class="number">1</span>];</span><br><span class="line"></span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">vector</span>&lt;matrix&lt;<span class="keyword">float</span>,0,1&gt;&gt; candidates_descriptors;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="built_in">string</span>&gt; candidates;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/* 人脸库训练 */</span></span><br><span class="line">    candidates_train(facesFile,candidates_descriptors,candidates);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 人脸库训练 */</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">candidates_train</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span> *facesFile,<span class="built_in">std</span>::<span class="built_in">vector</span>&lt;matrix&lt;<span class="keyword">float</span>,<span class="number">0</span>,<span class="number">1</span>&gt;&gt;&amp;candidates_descriptors,<span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="built_in">string</span>&gt;&amp;candidates)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    DIR *dir;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">dirent</span> *<span class="title">ptr</span>;</span> </span><br><span class="line">    <span class="keyword">char</span> base[<span class="number">30</span>]; </span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">char</span> *pick=<span class="string">".jpg"</span>; <span class="comment">//需要的子串;</span></span><br><span class="line">    <span class="keyword">char</span> IRfile[<span class="number">100</span>];</span><br><span class="line">    <span class="keyword">char</span> *name;</span><br><span class="line">    <span class="keyword">int</span> face_num = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">vector</span>&lt;matrix&lt;rgb_pixel&gt;&gt; faces;</span><br><span class="line"></span><br><span class="line">    frontal_face_detector detector = get_frontal_face_detector(); <span class="comment">// 人脸正脸检测器</span></span><br><span class="line">    shape_predictor sp; <span class="comment">//人脸关键点检测器</span></span><br><span class="line">    anet_type net;  <span class="comment">// 人脸识别模型</span></span><br><span class="line"></span><br><span class="line">    deserialize(<span class="string">"../model/shape_predictor_68_face_landmarks.dat"</span>) &gt;&gt; sp;</span><br><span class="line">    deserialize(<span class="string">"../model/dlib_face_recognition_resnet_model_v1.dat"</span>) &gt;&gt; net;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">clock_t</span> start,finish;</span><br><span class="line">    <span class="keyword">double</span> totaltime;</span><br><span class="line">    start=clock();</span><br><span class="line"></span><br><span class="line">    <span class="function">ofstream <span class="title">mycout</span><span class="params">(<span class="string">"../candidates.txt"</span>)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"TRAINING START！"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ((dir=opendir(facesFile)) == <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        perror(<span class="string">"Open dir error..."</span>);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> ((ptr=readdir(dir)) != <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">strcpy</span>(base, ptr-&gt;d_name);</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">strstr</span>(base,pick)) </span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">"training image:"</span> &lt;&lt; base &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">            <span class="built_in">strcpy</span>(IRfile, facesFile);</span><br><span class="line">            <span class="built_in">strcat</span>(IRfile, base);</span><br><span class="line">            name = strtok(base, <span class="string">"_"</span>);</span><br><span class="line">            <span class="built_in">string</span> candidate = name;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">"candidate: "</span> &lt;&lt; candidate &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">            mycout  &lt;&lt; candidate &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">            candidates.push_back(candidate);</span><br><span class="line">            matrix&lt;rgb_pixel&gt; img;</span><br><span class="line">            load_image(img, IRfile);</span><br><span class="line">            <span class="built_in">std</span>::<span class="built_in">vector</span>&lt;rectangle&gt; dets = detector(img);</span><br><span class="line">            full_object_detection shape = sp(img, dets[<span class="number">0</span>]);</span><br><span class="line">            matrix&lt;rgb_pixel&gt; face_chip;</span><br><span class="line">            extract_image_chip(img, get_face_chip_details(shape,<span class="number">150</span>,<span class="number">0.25</span>), face_chip);</span><br><span class="line">            faces.push_back(move(face_chip));</span><br><span class="line">            face_num += <span class="number">1</span>;</span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;</span><br><span class="line">    candidates_descriptors = net(faces);</span><br><span class="line"></span><br><span class="line">    mycout.close();</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"TRAINING END！"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"\nTRAIN RESULT："</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"Training "</span> &lt;&lt; face_num &lt;&lt;  <span class="string">" face(s)！"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    finish=clock();</span><br><span class="line">    totaltime=(<span class="keyword">double</span>)(finish-start)/CLOCKS_PER_SEC;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"TRAINING TIME： "</span> &lt;&lt; totaltime &lt;&lt; <span class="string">" S！"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"\nFace database updating……"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    serialize(<span class="string">"../candidates_descriptors.dat"</span>) &lt;&lt; candidates_descriptors;</span><br><span class="line">    serialize(<span class="string">"../candidates.dat"</span>) &lt;&lt; candidates;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"Face has been updated！"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    </span><br><span class="line">    closedir(dir);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>#this_is_who_kinect_one.cpp</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;opencv2/core.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;opencv2/imgproc.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;opencv2/highgui.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;opencv2/opencv.hpp&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;OpenNI.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;dlib/dnn.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;dlib/image_processing/frontal_face_detector.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;dlib/image_processing/render_face_detections.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;dlib/image_processing.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;dlib/gui_widgets.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;dlib/image_io.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;dlib/opencv.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;time.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;dirent.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sstream&gt; </span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> openni;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> dlib;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> cv;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">template</span> &lt;<span class="keyword">int</span>,<span class="keyword">template</span>&lt;<span class="keyword">typename</span>&gt;<span class="class"><span class="keyword">class</span>,<span class="title">int</span>,<span class="title">typename</span>&gt; <span class="title">class</span> <span class="title">block</span>, <span class="title">int</span> <span class="title">N</span>, <span class="title">template</span>&lt;typename&gt;<span class="title">class</span> <span class="title">BN</span>, <span class="title">typename</span> <span class="title">SUBNET</span>&gt;</span></span><br><span class="line"><span class="class"><span class="title">using</span> <span class="title">residual</span> = <span class="title">add_prev1</span>&lt;block&lt;N,BN,1,tag1&lt;SUBNET&gt;&gt;&gt;;</span></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">template</span> &lt;<span class="keyword">int</span>,<span class="keyword">template</span>&lt;<span class="keyword">typename</span>&gt;<span class="class"><span class="keyword">class</span>,<span class="title">int</span>,<span class="title">typename</span>&gt; <span class="title">class</span> <span class="title">block</span>, <span class="title">int</span> <span class="title">N</span>, <span class="title">template</span>&lt;typename&gt;<span class="title">class</span> <span class="title">BN</span>, <span class="title">typename</span> <span class="title">SUBNET</span>&gt;</span></span><br><span class="line"><span class="class"><span class="title">using</span> <span class="title">residual_down</span> = <span class="title">add_prev2</span>&lt;avg_pool&lt;2,2,2,2,skip1&lt;tag2&lt;block&lt;N,BN,2,tag1&lt;SUBNET&gt;&gt;&gt;&gt;&gt;&gt;;</span></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">int</span> N, <span class="keyword">template</span> &lt;<span class="keyword">typename</span>&gt; <span class="class"><span class="keyword">class</span> <span class="title">BN</span>, <span class="title">int</span> <span class="title">stride</span>, <span class="title">typename</span> <span class="title">SUBNET</span>&gt; </span></span><br><span class="line"><span class="class"><span class="title">using</span> <span class="title">block</span>  = <span class="title">BN</span>&lt;con&lt;N,3,3,1,1,relu&lt;BN&lt;con&lt;N,3,3,stride,stride,SUBNET&gt;&gt;&gt;&gt;&gt;;</span></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">int</span> N, <span class="keyword">typename</span> SUBNET&gt; <span class="keyword">using</span> ares      = relu&lt;residual&lt;block,N,affine,SUBNET&gt;&gt;;</span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">int</span> N, <span class="keyword">typename</span> SUBNET&gt; <span class="keyword">using</span> ares_down = relu&lt;residual_down&lt;block,N,affine,SUBNET&gt;&gt;;</span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> SUBNET&gt; <span class="keyword">using</span> alevel0 = ares_down&lt;<span class="number">256</span>,SUBNET&gt;;</span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> SUBNET&gt; <span class="keyword">using</span> alevel1 = ares&lt;<span class="number">256</span>,ares&lt;<span class="number">256</span>,ares_down&lt;<span class="number">256</span>,SUBNET&gt;&gt;&gt;;</span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> SUBNET&gt; <span class="keyword">using</span> alevel2 = ares&lt;<span class="number">128</span>,ares&lt;<span class="number">128</span>,ares_down&lt;<span class="number">128</span>,SUBNET&gt;&gt;&gt;;</span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> SUBNET&gt; <span class="keyword">using</span> alevel3 = ares&lt;<span class="number">64</span>,ares&lt;<span class="number">64</span>,ares&lt;<span class="number">64</span>,ares_down&lt;<span class="number">64</span>,SUBNET&gt;&gt;&gt;&gt;;</span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> SUBNET&gt; <span class="keyword">using</span> alevel4 = ares&lt;<span class="number">32</span>,ares&lt;<span class="number">32</span>,ares&lt;<span class="number">32</span>,SUBNET&gt;&gt;&gt;;</span><br><span class="line"><span class="keyword">using</span> anet_type = loss_metric&lt;fc_no_bias&lt;<span class="number">128</span>,avg_pool_everything&lt;</span><br><span class="line">    alevel0&lt;</span><br><span class="line">    alevel1&lt;</span><br><span class="line">    alevel2&lt;</span><br><span class="line">    alevel3&lt;</span><br><span class="line">    alevel4&lt;</span><br><span class="line">    max_pool&lt;<span class="number">3</span>,<span class="number">3</span>,<span class="number">2</span>,<span class="number">2</span>,relu&lt;affine&lt;con&lt;<span class="number">32</span>,<span class="number">7</span>,<span class="number">7</span>,<span class="number">2</span>,<span class="number">2</span>,</span><br><span class="line">    input_rgb_image_sized&lt;<span class="number">150</span>&gt;</span><br><span class="line">    &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> ITER = <span class="number">5000</span>; <span class="comment">// 随机取点次数</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">float</span> PLANE_OR_NOT = <span class="number">0.2</span>; <span class="comment">// 判断是否为平面的分界线</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> SIGMA = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  frontal_face_detector detector = get_frontal_face_detector(); <span class="comment">// 人脸正脸检测器</span></span><br><span class="line">  shape_predictor sp; <span class="comment">//人脸关键点检测器</span></span><br><span class="line">  anet_type net;  <span class="comment">// 人脸识别模型</span></span><br><span class="line"></span><br><span class="line">  deserialize(<span class="string">"../model/shape_predictor_68_face_landmarks.dat"</span>) &gt;&gt; sp;</span><br><span class="line">  deserialize(<span class="string">"../model/dlib_face_recognition_resnet_model_v1.dat"</span>) &gt;&gt; net;</span><br><span class="line"></span><br><span class="line">  <span class="built_in">std</span>::<span class="built_in">vector</span>&lt;matrix&lt;<span class="keyword">float</span>,0,1&gt;&gt; candidates_descriptors;</span><br><span class="line">  deserialize(<span class="string">"../candidates_descriptors.dat"</span>) &gt;&gt; candidates_descriptors;</span><br><span class="line"></span><br><span class="line">  <span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="built_in">string</span>&gt; candidates;</span><br><span class="line">  deserialize(<span class="string">"../candidates.dat"</span>) &gt;&gt; candidates;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 1. Initial OpenNI</span></span><br><span class="line">  <span class="keyword">if</span>( OpenNI::initialize() != STATUS_OK )</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">cerr</span> &lt;&lt; <span class="string">"OpenNI Initial Error: "</span> </span><br><span class="line">         &lt;&lt; OpenNI::getExtendedError() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 2. Open Device</span></span><br><span class="line">  Device mDevice;</span><br><span class="line">  <span class="keyword">if</span>( mDevice.open( ANY_DEVICE ) != STATUS_OK )</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">cerr</span> &lt;&lt; <span class="string">"Can't Open Device: "</span> </span><br><span class="line">         &lt;&lt; OpenNI::getExtendedError() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 3. Create depth stream</span></span><br><span class="line">  VideoStream mDepthStream;</span><br><span class="line">  <span class="keyword">if</span>( mDevice.hasSensor( SENSOR_DEPTH ) )</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">if</span>( mDepthStream.create( mDevice, SENSOR_DEPTH ) == STATUS_OK )</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="comment">// 3a. set video mode</span></span><br><span class="line">      VideoMode mMode;</span><br><span class="line">      mMode.setResolution( <span class="number">640</span>, <span class="number">480</span> );</span><br><span class="line">      mMode.setFps( <span class="number">30</span> );</span><br><span class="line">      mMode.setPixelFormat( PIXEL_FORMAT_DEPTH_1_MM );</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span>( mDepthStream.setVideoMode( mMode) != STATUS_OK )</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"Can't apply VideoMode: "</span></span><br><span class="line">             &lt;&lt; OpenNI::getExtendedError() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">      <span class="built_in">cerr</span> &lt;&lt; <span class="string">"Can't create depth stream on device: "</span></span><br><span class="line">           &lt;&lt; OpenNI::getExtendedError() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">      <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">cerr</span> &lt;&lt; <span class="string">"ERROR: This device does not have depth sensor"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 4. Create color stream</span></span><br><span class="line">  VideoStream mColorStream;</span><br><span class="line">  <span class="keyword">if</span>( mDevice.hasSensor( SENSOR_COLOR ) )</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">if</span>( mColorStream.create( mDevice, SENSOR_COLOR ) == STATUS_OK )</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="comment">// 4a. set video mode</span></span><br><span class="line">      VideoMode mMode;</span><br><span class="line">      mMode.setResolution( <span class="number">640</span>, <span class="number">480</span> );</span><br><span class="line">      mMode.setFps( <span class="number">30</span> );</span><br><span class="line">      mMode.setPixelFormat( PIXEL_FORMAT_RGB888 );</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span>( mColorStream.setVideoMode( mMode) != STATUS_OK )</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"Can't apply VideoMode: "</span> </span><br><span class="line">             &lt;&lt; OpenNI::getExtendedError() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 4b. image registration</span></span><br><span class="line">      <span class="keyword">if</span>( mDevice.isImageRegistrationModeSupported(</span><br><span class="line">              IMAGE_REGISTRATION_DEPTH_TO_COLOR ) )</span><br><span class="line">      &#123;</span><br><span class="line">        mDevice.setImageRegistrationMode( IMAGE_REGISTRATION_DEPTH_TO_COLOR );</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">      <span class="built_in">cerr</span> &lt;&lt; <span class="string">"Can't create color stream on device: "</span></span><br><span class="line">           &lt;&lt; OpenNI::getExtendedError() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">      <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 5. create OpenCV Window</span></span><br><span class="line">  cv::namedWindow( <span class="string">"Depth Image"</span>, CV_WINDOW_AUTOSIZE);</span><br><span class="line">  cv::namedWindow( <span class="string">"Color Image"</span>, CV_WINDOW_AUTOSIZE);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 6. start</span></span><br><span class="line">  VideoFrameRef  mColorFrame;</span><br><span class="line">  VideoFrameRef  mDepthFrame;</span><br><span class="line"></span><br><span class="line">  mDepthStream.start();</span><br><span class="line">  mColorStream.start();</span><br><span class="line"></span><br><span class="line">  cv::Mat cImageBGR;</span><br><span class="line">  cv::Mat DepthMat;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">int</span> iMaxDepth = mDepthStream.getMaxPixelValue();</span><br><span class="line">  <span class="keyword">while</span>( <span class="literal">true</span> )</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="comment">// 8a. get depth frame</span></span><br><span class="line">    <span class="keyword">if</span>( mDepthStream.readFrame( &amp;mDepthFrame ) == STATUS_OK )</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="comment">// 8b. convert data to OpenCV format</span></span><br><span class="line">      <span class="keyword">const</span> cv::<span class="function">Mat <span class="title">mImageDepth</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">                mDepthFrame.getHeight(), mDepthFrame.getWidth(),</span></span></span><br><span class="line"><span class="function"><span class="params">                CV_16UC1, (<span class="keyword">void</span>*)mDepthFrame.getData() )</span></span>;</span><br><span class="line"></span><br><span class="line">      DepthMat = mImageDepth.clone();</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 8c. re-map depth data [0,Max] to [0,255]</span></span><br><span class="line">      cv::Mat mScaledDepth;</span><br><span class="line">      mImageDepth.convertTo( mScaledDepth, CV_8U, <span class="number">255.0</span> / iMaxDepth );</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 8d. show image</span></span><br><span class="line">      cv::imshow( <span class="string">"Depth Image"</span>, mScaledDepth );</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 7a. get color frame</span></span><br><span class="line">    <span class="keyword">if</span>( mColorStream.readFrame( &amp;mColorFrame ) == STATUS_OK )</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="comment">// 7b. convert data to OpenCV format</span></span><br><span class="line">      <span class="keyword">const</span> cv::<span class="function">Mat <span class="title">mImageRGB</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">              mColorFrame.getHeight(), mColorFrame.getWidth(),</span></span></span><br><span class="line"><span class="function"><span class="params">              CV_8UC3, (<span class="keyword">void</span>*)mColorFrame.getData() )</span></span>;</span><br><span class="line">      <span class="comment">// 7c. convert form RGB to BGR</span></span><br><span class="line">      </span><br><span class="line">      </span><br><span class="line">      cv::cvtColor( mImageRGB, cImageBGR, CV_RGB2BGR );</span><br><span class="line">      <span class="comment">// 7d. show image</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">//dlib</span></span><br><span class="line">      cv_image&lt;bgr_pixel&gt; cimg(cImageBGR);</span><br><span class="line"></span><br><span class="line">      <span class="comment">// Detect faces </span></span><br><span class="line">      <span class="built_in">std</span>::<span class="built_in">vector</span>&lt;dlib::rectangle&gt; dets = detector(cimg);</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span>(dets.size() != <span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">int</span> livedetector;</span><br><span class="line">        <span class="built_in">string</span> who,isface;</span><br><span class="line">        <span class="keyword">float</span> who_probability;</span><br><span class="line">        <span class="keyword">float</span> pretotal_ary;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(dets.size() != <span class="number">1</span>)&#123;</span><br><span class="line">          livedetector = <span class="number">-1</span>;</span><br><span class="line">          <span class="keyword">for</span> (<span class="keyword">unsigned</span> <span class="keyword">long</span> j = <span class="number">0</span>; j &lt; dets.size(); ++j)&#123;</span><br><span class="line">            <span class="function">Rect <span class="title">rect</span><span class="params">(dets[j].left(),dets[j].top(),dets[j].right() -dets[j].left(), dets[j].bottom() -dets[j].top())</span></span>;<span class="comment">//左上坐标（x,y）和矩形的长(x)宽(y)</span></span><br><span class="line">            cv::rectangle(cImageBGR, rect, Scalar(<span class="number">0</span>, <span class="number">255</span>, <span class="number">0</span>),<span class="number">1</span>,<span class="number">8</span>,<span class="number">0</span>);</span><br><span class="line">          &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">          Rect rect(dets[<span class="number">0</span>].left(),dets[<span class="number">0</span>].top(),dets[<span class="number">0</span>].right() -dets[<span class="number">0</span>].left(), dets[<span class="number">0</span>].bottom() -dets[<span class="number">0</span>].top());<span class="comment">//左上坐标（x,y）和矩形的长(x)宽(y)</span></span><br><span class="line">          cv::rectangle(cImageBGR, rect, Scalar(<span class="number">0</span>, <span class="number">255</span>, <span class="number">0</span>),<span class="number">1</span>,<span class="number">8</span>,<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">          full_object_detection shape = sp(cimg, dets[<span class="number">0</span>]);</span><br><span class="line">          <span class="built_in">std</span>::<span class="built_in">vector</span>&lt;matrix&lt;rgb_pixel&gt;&gt; faces;</span><br><span class="line">          matrix&lt;rgb_pixel&gt; face_chip;</span><br><span class="line">          extract_image_chip(cimg, get_face_chip_details(shape,<span class="number">150</span>,<span class="number">0.25</span>), face_chip);</span><br><span class="line">          faces.push_back(move(face_chip));</span><br><span class="line">          <span class="built_in">std</span>::<span class="built_in">vector</span>&lt;matrix&lt;<span class="keyword">float</span>,0,1&gt;&gt; face_descriptors = net(faces);</span><br><span class="line"></span><br><span class="line">          <span class="keyword">float</span> distance;</span><br><span class="line">          <span class="keyword">float</span> best_distance = length(face_descriptors[<span class="number">0</span>]-candidates_descriptors[<span class="number">0</span>]);</span><br><span class="line">          <span class="keyword">size_t</span> candidates_num = candidates_descriptors.size();</span><br><span class="line">          <span class="keyword">int</span> candidates_num_int = <span class="keyword">static_cast</span>&lt;<span class="keyword">int</span>&gt;(candidates_num);</span><br><span class="line">          <span class="keyword">int</span> best_k = <span class="number">0</span>;</span><br><span class="line">          <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">1</span>; k &lt; candidates_num_int; k++)</span><br><span class="line">          &#123;</span><br><span class="line">              distance = length(face_descriptors[<span class="number">0</span>]-candidates_descriptors[k]);</span><br><span class="line">              <span class="keyword">if</span> (distance &lt; best_distance) </span><br><span class="line">              &#123;</span><br><span class="line">                  best_distance = distance;</span><br><span class="line">                  best_k = k;</span><br><span class="line">              &#125;</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">if</span> (best_distance &lt; <span class="number">0.6</span>) &#123;</span><br><span class="line">              who = candidates[best_k];</span><br><span class="line">              who_probability =  (<span class="number">1.05</span><span class="number">-0.66</span>*best_distance)*<span class="number">100</span> &lt; <span class="number">100</span>?(<span class="number">1.05</span><span class="number">-0.66</span>*best_distance)*<span class="number">100</span>:<span class="number">99</span>;</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">else</span>&#123;</span><br><span class="line">              who = <span class="string">"Unknow"</span>;</span><br><span class="line">          &#125;</span><br><span class="line"></span><br><span class="line">          <span class="comment">// liveness_detection(DepthMat,locates,livedetector);</span></span><br><span class="line">          <span class="keyword">int</span> COL ,ROW ,FACE_WIDTH ,FACE_HEIGHT; </span><br><span class="line">          <span class="keyword">int</span> faceno0_num;</span><br><span class="line">          <span class="keyword">int</span> FaceDATA[<span class="number">3</span>][<span class="number">100000</span>];</span><br><span class="line">          <span class="keyword">int</span> k;</span><br><span class="line">          <span class="keyword">int</span> pretotal;</span><br><span class="line">          <span class="keyword">int</span> x[<span class="number">3</span>],y[<span class="number">3</span>],z[<span class="number">3</span>];  <span class="comment">// 随机取三个点 </span></span><br><span class="line">          <span class="keyword">float</span> a,b,c;  <span class="comment">// 拟合平面方程 z=ax+by+c</span></span><br><span class="line">          <span class="keyword">int</span> rand_num[<span class="number">3</span>];</span><br><span class="line">          <span class="keyword">float</span> check,distance2;</span><br><span class="line">          <span class="keyword">int</span> total;</span><br><span class="line"></span><br><span class="line">          COL = rect.x;</span><br><span class="line">          ROW = rect.y;</span><br><span class="line">          FACE_WIDTH = rect.width;</span><br><span class="line">          FACE_HEIGHT = rect.height; </span><br><span class="line">          faceno0_num = FACE_HEIGHT*FACE_WIDTH <span class="number">-1</span>; </span><br><span class="line">          k = <span class="number">0</span>;</span><br><span class="line">          <span class="keyword">for</span>(<span class="keyword">int</span> m = <span class="number">1</span>;m&lt; FACE_HEIGHT+<span class="number">1</span>;m++)</span><br><span class="line">          &#123;</span><br><span class="line">              <span class="keyword">for</span>(<span class="keyword">int</span> n= <span class="number">1</span>;n&lt; FACE_WIDTH+<span class="number">1</span>;n++) </span><br><span class="line">              &#123; </span><br><span class="line">                  ushort tmp = DepthMat.at&lt;ushort&gt;(COL+n<span class="number">-1</span>,ROW+m<span class="number">-1</span>);</span><br><span class="line">                  <span class="keyword">if</span> (tmp == <span class="number">0</span>)</span><br><span class="line">                  &#123;</span><br><span class="line">                      faceno0_num -= <span class="number">1</span>; <span class="comment">// 非零深度点个数为 faceno0_num+1</span></span><br><span class="line">                      <span class="keyword">continue</span>;</span><br><span class="line">                  &#125;</span><br><span class="line">                  FaceDATA[<span class="number">0</span>][k] = n; </span><br><span class="line">                  FaceDATA[<span class="number">1</span>][k] = m;</span><br><span class="line">                  FaceDATA[<span class="number">2</span>][k] = tmp;</span><br><span class="line">                  k += <span class="number">1</span>;</span><br><span class="line">              &#125; </span><br><span class="line">          &#125; </span><br><span class="line"></span><br><span class="line">          <span class="keyword">if</span>(faceno0_num &gt; <span class="number">2000</span>)&#123;</span><br><span class="line">            pretotal = <span class="number">0</span>;  <span class="comment">// 符合拟合模型的数据的个数 </span></span><br><span class="line">            srand((<span class="keyword">unsigned</span>)time(<span class="literal">NULL</span>));</span><br><span class="line">            total = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span>(k = <span class="number">0</span>; k &lt; ITER; k++)</span><br><span class="line">            &#123;</span><br><span class="line">              <span class="keyword">do</span>&#123;</span><br><span class="line">                  rand_num[<span class="number">0</span>] = <span class="built_in">std</span>::rand()%faceno0_num; </span><br><span class="line">                  rand_num[<span class="number">1</span>] = <span class="built_in">std</span>::rand()%faceno0_num; </span><br><span class="line">                  rand_num[<span class="number">2</span>] = <span class="built_in">std</span>::rand()%faceno0_num; </span><br><span class="line">              &#125;<span class="keyword">while</span>(rand_num[<span class="number">0</span>] == rand_num[<span class="number">1</span>] || rand_num[<span class="number">0</span>] == rand_num[<span class="number">2</span>] || rand_num[<span class="number">1</span>] == rand_num[<span class="number">2</span>]);</span><br><span class="line">              <span class="keyword">for</span>(<span class="keyword">int</span> n = <span class="number">0</span>; n &lt; <span class="number">3</span>; n++ )</span><br><span class="line">              &#123;</span><br><span class="line">                  x[n] = FaceDATA[<span class="number">0</span>][rand_num[n]];</span><br><span class="line">                  y[n] = FaceDATA[<span class="number">1</span>][rand_num[n]];</span><br><span class="line">                  z[n] = FaceDATA[<span class="number">2</span>][rand_num[n]];</span><br><span class="line">              &#125;</span><br><span class="line">              check = (x[<span class="number">0</span>]-x[<span class="number">1</span>])*(y[<span class="number">0</span>]-y[<span class="number">2</span>]) - (x[<span class="number">0</span>]-x[<span class="number">2</span>])*(y[<span class="number">0</span>]-y[<span class="number">1</span>]);</span><br><span class="line">              <span class="keyword">if</span> ( check == <span class="number">0</span>)  <span class="comment">// 防止提示浮点数例外 (核心已转储)</span></span><br><span class="line">              &#123;</span><br><span class="line">                  k -= <span class="number">1</span>;</span><br><span class="line">                  <span class="keyword">continue</span>;</span><br><span class="line">              &#125;</span><br><span class="line">              a = ( (z[<span class="number">0</span>]-z[<span class="number">1</span>])*(y[<span class="number">0</span>]-y[<span class="number">2</span>]) - (z[<span class="number">0</span>]-z[<span class="number">2</span>])*(y[<span class="number">0</span>]-y[<span class="number">1</span>]) )*<span class="number">1.0</span>/( (x[<span class="number">0</span>]-x[<span class="number">1</span>])*(y[<span class="number">0</span>]-y[<span class="number">2</span>]) - (x[<span class="number">0</span>]-x[<span class="number">2</span>])*(y[<span class="number">0</span>]-y[<span class="number">1</span>]) );</span><br><span class="line">              <span class="keyword">if</span> (y[<span class="number">0</span>] == y[<span class="number">2</span>])  <span class="comment">// 防止提示浮点数例外 (核心已转储)</span></span><br><span class="line">              &#123;</span><br><span class="line">                  k -= <span class="number">1</span>;</span><br><span class="line">                  <span class="keyword">continue</span>;</span><br><span class="line">              &#125;</span><br><span class="line">              b = ((z[<span class="number">0</span>] - z[<span class="number">2</span>]) - a * (x[<span class="number">0</span>] - x[<span class="number">2</span>]))*<span class="number">1.0</span>/(y[<span class="number">0</span>]-y[<span class="number">2</span>]);</span><br><span class="line">              c = z[<span class="number">0</span>]- a * x[<span class="number">0</span>] - b * y[<span class="number">0</span>];</span><br><span class="line">              total = <span class="number">0</span>;</span><br><span class="line">              <span class="keyword">for</span>(<span class="keyword">int</span> n = <span class="number">0</span>; n &lt; faceno0_num +<span class="number">1</span> ; n++ )</span><br><span class="line">              &#123;</span><br><span class="line">                  distance2 = <span class="built_in">fabs</span>(a*FaceDATA[<span class="number">0</span>][n] + b*FaceDATA[<span class="number">1</span>][n] - <span class="number">1</span>*FaceDATA[<span class="number">2</span>][n] + c*<span class="number">1</span>);</span><br><span class="line">                  <span class="keyword">if</span> (distance2 &lt; SIGMA)</span><br><span class="line">                  &#123;</span><br><span class="line">                      total +=<span class="number">1</span>;</span><br><span class="line">                  &#125;</span><br><span class="line">              &#125;</span><br><span class="line">              <span class="keyword">if</span> (total &gt; pretotal)  <span class="comment">// 找到符合拟合平面数据最多的拟合平面</span></span><br><span class="line">              &#123;</span><br><span class="line">                  pretotal=total;</span><br><span class="line">              &#125;   </span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            pretotal_ary = pretotal *<span class="number">1.0</span>/ faceno0_num;</span><br><span class="line">            <span class="keyword">if</span> (pretotal_ary &lt; PLANE_OR_NOT)&#123;</span><br><span class="line">              livedetector = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">              livedetector = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">          </span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">else</span>&#123;</span><br><span class="line">            livedetector = <span class="number">-2</span>;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(livedetector == <span class="number">-1</span>)&#123;</span><br><span class="line">          who = <span class="string">"More than one face"</span>;</span><br><span class="line">          isface = <span class="string">"Please detect one face"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(livedetector == <span class="number">1</span>)&#123;</span><br><span class="line">          isface = <span class="string">"Is FACE"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(livedetector == <span class="number">0</span>)&#123;</span><br><span class="line">          isface = <span class="string">"Is not FACE"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(livedetector == <span class="number">-2</span>)&#123;</span><br><span class="line">          isface = <span class="string">"Lack of depth information"</span>;</span><br><span class="line">          pretotal_ary = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">stringstream</span> strStream1; </span><br><span class="line">        strStream1 &lt;&lt; who &lt;&lt; <span class="string">" , "</span> &lt;&lt; who_probability &lt;&lt; <span class="string">"%"</span>; </span><br><span class="line">        <span class="built_in">string</span> str1 = strStream1.str();  </span><br><span class="line"></span><br><span class="line">        <span class="built_in">stringstream</span> strStream2; </span><br><span class="line">        strStream2 &lt;&lt; isface &lt;&lt; <span class="string">" , "</span> &lt;&lt; <span class="string">"pretotal_ary:"</span> &lt;&lt; pretotal_ary; </span><br><span class="line">        <span class="built_in">string</span> str2 = strStream2.str();  </span><br><span class="line"></span><br><span class="line">        cv::putText(cImageBGR, <span class="string">"RECOGNITION RESULT: "</span>, cv::Point(<span class="number">20</span>,<span class="number">20</span>), cv::FONT_HERSHEY_COMPLEX,<span class="number">0.4</span>,Scalar(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>),<span class="number">1</span>,<span class="number">8</span>,<span class="number">0</span>);</span><br><span class="line">        cv::putText(cImageBGR, str1, cv::Point(<span class="number">20</span>,<span class="number">40</span>), cv::FONT_HERSHEY_COMPLEX,<span class="number">0.5</span>,Scalar(<span class="number">0</span>, <span class="number">255</span>, <span class="number">0</span>),<span class="number">1</span>,<span class="number">8</span>,<span class="number">0</span>);</span><br><span class="line">        cv::putText(cImageBGR, <span class="string">"LIVENESS DETECTION RESULT: "</span>, cv::Point(<span class="number">20</span>,<span class="number">60</span>), cv::FONT_HERSHEY_COMPLEX,<span class="number">0.4</span>,Scalar(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>),<span class="number">1</span>,<span class="number">8</span>,<span class="number">0</span>);</span><br><span class="line">        cv::putText(cImageBGR, str2, cv::Point(<span class="number">20</span>,<span class="number">80</span>), cv::FONT_HERSHEY_COMPLEX,<span class="number">0.5</span>,Scalar(<span class="number">0</span>, <span class="number">255</span>, <span class="number">0</span>),<span class="number">1</span>,<span class="number">8</span>,<span class="number">0</span>);</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      cv::imshow( <span class="string">"Color Image"</span>, cImageBGR);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 6a. check keyboard</span></span><br><span class="line">    <span class="keyword">if</span>( cv::waitKey( <span class="number">1</span> ) == <span class="string">'q'</span> )&#123;</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 9. stop</span></span><br><span class="line">  mDepthStream.destroy();</span><br><span class="line">  mColorStream.destroy();</span><br><span class="line">  mDevice.close();</span><br><span class="line">  OpenNI::shutdown();</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>#this_is_who.cpp</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;dlib/dnn.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;dlib/image_processing/frontal_face_detector.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;dlib/image_processing.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;dlib/gui_widgets.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;dlib/image_io.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;time.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;dirent.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> dlib;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 函数声明 */</span></span><br><span class="line"><span class="comment">/* 输出人脸位置 返回识别结果 */</span></span><br><span class="line"><span class="function"><span class="built_in">string</span> <span class="title">face_location</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span> *imgFile,<span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp;locates, <span class="built_in">std</span>::<span class="built_in">vector</span>&lt;matrix&lt;<span class="keyword">float</span>,<span class="number">0</span>,<span class="number">1</span>&gt;&gt;&amp;candidates_descriptors,<span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="built_in">string</span>&gt;&amp;candidates)</span></span>;</span><br><span class="line"><span class="comment">/* 判断是否为活体 */</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">liveness_detection</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span> *DeepFile,<span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp;locates)</span></span>;  </span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> IMG_HEIGHT =  <span class="number">720</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> IMG_WIDTH =  <span class="number">1280</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">template</span> &lt;<span class="keyword">int</span>,<span class="keyword">template</span>&lt;<span class="keyword">typename</span>&gt;<span class="class"><span class="keyword">class</span>,<span class="title">int</span>,<span class="title">typename</span>&gt; <span class="title">class</span> <span class="title">block</span>, <span class="title">int</span> <span class="title">N</span>, <span class="title">template</span>&lt;typename&gt;<span class="title">class</span> <span class="title">BN</span>, <span class="title">typename</span> <span class="title">SUBNET</span>&gt;</span></span><br><span class="line"><span class="class"><span class="title">using</span> <span class="title">residual</span> = <span class="title">add_prev1</span>&lt;block&lt;N,BN,1,tag1&lt;SUBNET&gt;&gt;&gt;;</span></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">template</span> &lt;<span class="keyword">int</span>,<span class="keyword">template</span>&lt;<span class="keyword">typename</span>&gt;<span class="class"><span class="keyword">class</span>,<span class="title">int</span>,<span class="title">typename</span>&gt; <span class="title">class</span> <span class="title">block</span>, <span class="title">int</span> <span class="title">N</span>, <span class="title">template</span>&lt;typename&gt;<span class="title">class</span> <span class="title">BN</span>, <span class="title">typename</span> <span class="title">SUBNET</span>&gt;</span></span><br><span class="line"><span class="class"><span class="title">using</span> <span class="title">residual_down</span> = <span class="title">add_prev2</span>&lt;avg_pool&lt;2,2,2,2,skip1&lt;tag2&lt;block&lt;N,BN,2,tag1&lt;SUBNET&gt;&gt;&gt;&gt;&gt;&gt;;</span></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">int</span> N, <span class="keyword">template</span> &lt;<span class="keyword">typename</span>&gt; <span class="class"><span class="keyword">class</span> <span class="title">BN</span>, <span class="title">int</span> <span class="title">stride</span>, <span class="title">typename</span> <span class="title">SUBNET</span>&gt; </span></span><br><span class="line"><span class="class"><span class="title">using</span> <span class="title">block</span>  = <span class="title">BN</span>&lt;con&lt;N,3,3,1,1,relu&lt;BN&lt;con&lt;N,3,3,stride,stride,SUBNET&gt;&gt;&gt;&gt;&gt;;</span></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">int</span> N, <span class="keyword">typename</span> SUBNET&gt; <span class="keyword">using</span> ares      = relu&lt;residual&lt;block,N,affine,SUBNET&gt;&gt;;</span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">int</span> N, <span class="keyword">typename</span> SUBNET&gt; <span class="keyword">using</span> ares_down = relu&lt;residual_down&lt;block,N,affine,SUBNET&gt;&gt;;</span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> SUBNET&gt; <span class="keyword">using</span> alevel0 = ares_down&lt;<span class="number">256</span>,SUBNET&gt;;</span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> SUBNET&gt; <span class="keyword">using</span> alevel1 = ares&lt;<span class="number">256</span>,ares&lt;<span class="number">256</span>,ares_down&lt;<span class="number">256</span>,SUBNET&gt;&gt;&gt;;</span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> SUBNET&gt; <span class="keyword">using</span> alevel2 = ares&lt;<span class="number">128</span>,ares&lt;<span class="number">128</span>,ares_down&lt;<span class="number">128</span>,SUBNET&gt;&gt;&gt;;</span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> SUBNET&gt; <span class="keyword">using</span> alevel3 = ares&lt;<span class="number">64</span>,ares&lt;<span class="number">64</span>,ares&lt;<span class="number">64</span>,ares_down&lt;<span class="number">64</span>,SUBNET&gt;&gt;&gt;&gt;;</span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> SUBNET&gt; <span class="keyword">using</span> alevel4 = ares&lt;<span class="number">32</span>,ares&lt;<span class="number">32</span>,ares&lt;<span class="number">32</span>,SUBNET&gt;&gt;&gt;;</span><br><span class="line"><span class="keyword">using</span> anet_type = loss_metric&lt;fc_no_bias&lt;<span class="number">128</span>,avg_pool_everything&lt;</span><br><span class="line">    alevel0&lt;</span><br><span class="line">    alevel1&lt;</span><br><span class="line">    alevel2&lt;</span><br><span class="line">    alevel3&lt;</span><br><span class="line">    alevel4&lt;</span><br><span class="line">    max_pool&lt;<span class="number">3</span>,<span class="number">3</span>,<span class="number">2</span>,<span class="number">2</span>,relu&lt;affine&lt;con&lt;<span class="number">32</span>,<span class="number">7</span>,<span class="number">7</span>,<span class="number">2</span>,<span class="number">2</span>,</span><br><span class="line">    input_rgb_image_sized&lt;<span class="number">150</span>&gt;</span><br><span class="line">    &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span>** argv)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (argc == <span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">"\nCall this program like this:"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">"./this_is_who ../data/allface/0004_IR_allleft.jpg ../data/allface/0004_raw_allleft.raw"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">char</span> *imgFile = argv[<span class="number">1</span>];</span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">char</span> *DeepFile = argv[<span class="number">2</span>];</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">vector</span>&lt;matrix&lt;<span class="keyword">float</span>,0,1&gt;&gt; candidates_descriptors;</span><br><span class="line">    deserialize(<span class="string">"../candidates_descriptors.dat"</span>) &gt;&gt; candidates_descriptors;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="built_in">string</span>&gt; candidates;</span><br><span class="line">    deserialize(<span class="string">"../candidates.dat"</span>) &gt;&gt; candidates;</span><br><span class="line">   </span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; locates;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 输出人脸位置 返回识别结果 */</span></span><br><span class="line">    <span class="built_in">string</span> who = face_location(imgFile, locates, candidates_descriptors,candidates); </span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"\nRECOGNITION RESULT："</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"This is "</span> &lt;&lt; who &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//深度图与红外图是水平翻转的</span></span><br><span class="line">    locates[<span class="number">0</span>] = IMG_WIDTH - locates[<span class="number">0</span>] -locates[<span class="number">2</span>];  </span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 判断是否为活体 */</span></span><br><span class="line">    liveness_detection( DeepFile, locates);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 函数 输出人脸位置 返回识别结果 */</span></span><br><span class="line"><span class="function"><span class="built_in">string</span> <span class="title">face_location</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span>* imgFile,<span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp;locates, <span class="built_in">std</span>::<span class="built_in">vector</span>&lt;matrix&lt;<span class="keyword">float</span>,<span class="number">0</span>,<span class="number">1</span>&gt;&gt;&amp;candidates_descriptors,<span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="built_in">string</span>&gt;&amp;candidates)</span></span></span><br><span class="line"><span class="function"></span>&#123;   </span><br><span class="line">    frontal_face_detector detector = get_frontal_face_detector(); <span class="comment">// 人脸正脸检测器</span></span><br><span class="line">    shape_predictor sp; <span class="comment">//人脸关键点检测器</span></span><br><span class="line">    anet_type net;  <span class="comment">// 人脸识别模型</span></span><br><span class="line"></span><br><span class="line">    deserialize(<span class="string">"../model/shape_predictor_68_face_landmarks.dat"</span>) &gt;&gt; sp;</span><br><span class="line">    deserialize(<span class="string">"../model/dlib_face_recognition_resnet_model_v1.dat"</span>) &gt;&gt; net;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"\nprocessing image "</span> &lt;&lt; imgFile &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    matrix&lt;rgb_pixel&gt; img;</span><br><span class="line">    load_image(img, imgFile);</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">vector</span>&lt;rectangle&gt; dets = detector(img);</span><br><span class="line">    <span class="comment">// cout &lt;&lt; "Number of faces detected: " &lt;&lt; dets.size() &lt;&lt; endl;</span></span><br><span class="line">    locates.push_back(dets[<span class="number">0</span>].left());</span><br><span class="line">    locates.push_back(dets[<span class="number">0</span>].top());</span><br><span class="line">    locates.push_back(dets[<span class="number">0</span>].right() - dets[<span class="number">0</span>].left());</span><br><span class="line">    locates.push_back(dets[<span class="number">0</span>].bottom() - dets[<span class="number">0</span>].top());</span><br><span class="line">    full_object_detection shape = sp(img, dets[<span class="number">0</span>]);</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">vector</span>&lt;matrix&lt;rgb_pixel&gt;&gt; faces;</span><br><span class="line">    matrix&lt;rgb_pixel&gt; face_chip;</span><br><span class="line">    extract_image_chip(img, get_face_chip_details(shape,<span class="number">150</span>,<span class="number">0.25</span>), face_chip);</span><br><span class="line">    faces.push_back(move(face_chip));</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">vector</span>&lt;matrix&lt;<span class="keyword">float</span>,0,1&gt;&gt; face_descriptors = net(faces);</span><br><span class="line">    <span class="keyword">float</span> distance;</span><br><span class="line">    <span class="keyword">float</span> best_distance = length(face_descriptors[<span class="number">0</span>]-candidates_descriptors[<span class="number">0</span>]);</span><br><span class="line">    <span class="keyword">size_t</span> candidates_num = candidates_descriptors.size();</span><br><span class="line">    <span class="keyword">int</span> candidates_num_int = <span class="keyword">static_cast</span>&lt;<span class="keyword">int</span>&gt;(candidates_num);</span><br><span class="line">    <span class="keyword">int</span> best_k = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">1</span>; k &lt; candidates_num_int; k++)</span><br><span class="line">    &#123;</span><br><span class="line">        distance = length(face_descriptors[<span class="number">0</span>]-candidates_descriptors[k]);</span><br><span class="line">        <span class="keyword">if</span> (distance &lt; best_distance) </span><br><span class="line">        &#123;</span><br><span class="line">            best_distance = distance;</span><br><span class="line">            best_k = k;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">string</span> who;</span><br><span class="line">    <span class="keyword">if</span> (best_distance &lt; <span class="number">0.6</span>) &#123;</span><br><span class="line">        who = candidates[best_k];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        who = <span class="string">"Unknow"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> who;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 函数判断是否为活体 */</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">liveness_detection</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span> *DeepFile,<span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp;locates)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">int</span> ITER = <span class="number">5000</span>; <span class="comment">// 随机取点次数</span></span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">float</span> PLANE_OR_NOT = <span class="number">0.2</span>; <span class="comment">// 判断是否为平面的分界线</span></span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">int</span> SIGMA = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">short</span> UNIT16;</span><br><span class="line">    <span class="comment">// 从.raw读取二进制16位数据到MatDATA</span></span><br><span class="line">    UNIT16 MatDATA[IMG_HEIGHT*IMG_WIDTH];</span><br><span class="line">    FILE *fp = <span class="literal">NULL</span>;</span><br><span class="line">    fp = fopen( DeepFile, <span class="string">"rb"</span> );</span><br><span class="line">    <span class="keyword">size_t</span> sizeRead = fread(MatDATA,<span class="keyword">sizeof</span>(UNIT16),IMG_HEIGHT*IMG_WIDTH,fp);</span><br><span class="line">    <span class="keyword">if</span> (sizeRead != IMG_HEIGHT*IMG_WIDTH) &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"DeepFile open error!"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;    </span><br><span class="line">    fclose(fp);</span><br><span class="line">    <span class="keyword">int</span> n = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> i,j;</span><br><span class="line">    <span class="keyword">int</span> COL = locates[<span class="number">0</span>],ROW = locates[<span class="number">1</span>],FACE_WIDTH = locates[<span class="number">2</span>],FACE_HEIGHT = locates[<span class="number">3</span>]; <span class="comment">//位置信息</span></span><br><span class="line">    <span class="comment">// txt :157 66 172 198 , 取行66：66+198,列取157：157+172</span></span><br><span class="line">    <span class="keyword">int</span> faceno0_num = FACE_HEIGHT*FACE_WIDTH <span class="number">-1</span>; </span><br><span class="line">    <span class="keyword">int</span> FaceDATA[<span class="number">3</span>][<span class="number">100000</span>];</span><br><span class="line">    n = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(i = <span class="number">1</span>;i&lt; FACE_HEIGHT+<span class="number">1</span>;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(j= <span class="number">1</span>;j&lt; FACE_WIDTH+<span class="number">1</span>;j++) </span><br><span class="line">            &#123; </span><br><span class="line">                <span class="keyword">if</span> (MatDATA[IMG_WIDTH*(ROW+i<span class="number">-2</span>)+COL+j<span class="number">-2</span>] == <span class="number">0</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    faceno0_num -= <span class="number">1</span>; <span class="comment">// 非零深度点个数为 faceno0_num+1</span></span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                FaceDATA[<span class="number">1</span>][n] = i;</span><br><span class="line">                FaceDATA[<span class="number">0</span>][n] = j; </span><br><span class="line">                FaceDATA[<span class="number">2</span>][n] = MatDATA[IMG_WIDTH*(ROW+i<span class="number">-2</span>)+COL+j<span class="number">-2</span>];</span><br><span class="line">                n += <span class="number">1</span>;</span><br><span class="line">            &#125; </span><br><span class="line">        &#125; </span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> pretotal = <span class="number">0</span>;  <span class="comment">// 符合拟合模型的数据的个数</span></span><br><span class="line">    <span class="keyword">int</span> x[<span class="number">3</span>],y[<span class="number">3</span>],z[<span class="number">3</span>];  <span class="comment">// 随机取三个点 </span></span><br><span class="line">    srand((<span class="keyword">unsigned</span>)time(<span class="literal">NULL</span>));</span><br><span class="line">    <span class="keyword">float</span> a,b,c;  <span class="comment">// 拟合平面方程 z=ax+by+c</span></span><br><span class="line">    <span class="comment">// float besta,bestb,bestc;  // 最佳参数</span></span><br><span class="line">    <span class="keyword">int</span> rand_num[<span class="number">3</span>];</span><br><span class="line">    <span class="keyword">float</span> check,distance;</span><br><span class="line">    <span class="keyword">int</span> total = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; ITER; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">do</span>&#123;</span><br><span class="line">            rand_num[<span class="number">0</span>] = <span class="built_in">std</span>::rand()%faceno0_num; </span><br><span class="line">            rand_num[<span class="number">1</span>] = <span class="built_in">std</span>::rand()%faceno0_num; </span><br><span class="line">            rand_num[<span class="number">2</span>] = <span class="built_in">std</span>::rand()%faceno0_num; </span><br><span class="line">        &#125;<span class="keyword">while</span>(rand_num[<span class="number">0</span>] == rand_num[<span class="number">1</span>] || rand_num[<span class="number">0</span>] == rand_num[<span class="number">2</span>] || rand_num[<span class="number">1</span>] == rand_num[<span class="number">2</span>]);</span><br><span class="line">        <span class="keyword">for</span>(n = <span class="number">0</span>; n &lt; <span class="number">3</span>; n++ )</span><br><span class="line">        &#123;</span><br><span class="line">            x[n] = FaceDATA[<span class="number">0</span>][rand_num[n]];</span><br><span class="line">            y[n] = FaceDATA[<span class="number">1</span>][rand_num[n]];</span><br><span class="line">            z[n] = FaceDATA[<span class="number">2</span>][rand_num[n]];</span><br><span class="line">        &#125;</span><br><span class="line">        check = (x[<span class="number">0</span>]-x[<span class="number">1</span>])*(y[<span class="number">0</span>]-y[<span class="number">2</span>]) - (x[<span class="number">0</span>]-x[<span class="number">2</span>])*(y[<span class="number">0</span>]-y[<span class="number">1</span>]);</span><br><span class="line">        <span class="keyword">if</span> ( check == <span class="number">0</span>)  <span class="comment">// 防止提示浮点数例外 (核心已转储)</span></span><br><span class="line">        &#123;</span><br><span class="line">            i -= <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        a = ( (z[<span class="number">0</span>]-z[<span class="number">1</span>])*(y[<span class="number">0</span>]-y[<span class="number">2</span>]) - (z[<span class="number">0</span>]-z[<span class="number">2</span>])*(y[<span class="number">0</span>]-y[<span class="number">1</span>]) )*<span class="number">1.0</span>/( (x[<span class="number">0</span>]-x[<span class="number">1</span>])*(y[<span class="number">0</span>]-y[<span class="number">2</span>]) - (x[<span class="number">0</span>]-x[<span class="number">2</span>])*(y[<span class="number">0</span>]-y[<span class="number">1</span>]) );</span><br><span class="line">        <span class="keyword">if</span> (y[<span class="number">0</span>] == y[<span class="number">2</span>])  <span class="comment">// 防止提示浮点数例外 (核心已转储)</span></span><br><span class="line">        &#123;</span><br><span class="line">            i -= <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        b = ((z[<span class="number">0</span>] - z[<span class="number">2</span>]) - a * (x[<span class="number">0</span>] - x[<span class="number">2</span>]))*<span class="number">1.0</span>/(y[<span class="number">0</span>]-y[<span class="number">2</span>]);</span><br><span class="line">        c = z[<span class="number">0</span>]- a * x[<span class="number">0</span>] - b * y[<span class="number">0</span>];</span><br><span class="line">        total = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(n = <span class="number">0</span>; n &lt; faceno0_num +<span class="number">1</span> ; n++ )</span><br><span class="line">        &#123;</span><br><span class="line">            distance = <span class="built_in">fabs</span>(a*FaceDATA[<span class="number">0</span>][n] + b*FaceDATA[<span class="number">1</span>][n] - <span class="number">1</span>*FaceDATA[<span class="number">2</span>][n] + c*<span class="number">1</span>);</span><br><span class="line">            <span class="keyword">if</span> (distance &lt; SIGMA)</span><br><span class="line">            &#123;</span><br><span class="line">                total +=<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (total &gt; pretotal)  <span class="comment">// 找到符合拟合平面数据最多的拟合平面</span></span><br><span class="line">        &#123;</span><br><span class="line">            pretotal=total;</span><br><span class="line">            <span class="comment">// besta = a;</span></span><br><span class="line">            <span class="comment">// bestb = b;</span></span><br><span class="line">            <span class="comment">// bestc = c;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">float</span> pretotal_ary = pretotal *<span class="number">1.0</span>/ faceno0_num ;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"\nLIVENESS DETECTION RESULT："</span>  &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">bool</span> IS_FACE;</span><br><span class="line">    <span class="keyword">if</span> (pretotal_ary &lt; PLANE_OR_NOT)</span><br><span class="line">    &#123;</span><br><span class="line">        IS_FACE =  <span class="literal">true</span>;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"pretotal_ary = "</span> &lt;&lt; pretotal_ary  &lt;&lt; <span class="string">" , Is FACE!"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        IS_FACE = <span class="literal">false</span>;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"pretotal_ary = "</span> &lt;&lt; pretotal_ary  &lt;&lt; <span class="string">" , Is not FACE!"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span>  IS_FACE;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>代码比较粗糙，应该以后也不会再改了……</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;一、配置&quot;&gt;&lt;a href=&quot;#一、配置&quot; class=&quot;headerlink&quot; title=&quot;一、配置&quot;&gt;&lt;/a&gt;一、配置&lt;/h1&gt;&lt;h2 id=&quot;1、opencv&quot;&gt;&lt;a href=&quot;#1、opencv&quot; class=&quot;headerlink&quot; title=&quot;1、opencv&quot;&gt;&lt;/a&gt;1、opencv&lt;/h2&gt;&lt;p&gt;#安装依赖&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo apt-get install libvtk5-dev&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo apt-get install libgtk2&lt;span class=&quot;number&quot;&gt;.0&lt;/span&gt;-dev&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="算法" scheme="http://yoursite.com/categories/%E7%AE%97%E6%B3%95/"/>
    
      <category term="实时人脸识别" scheme="http://yoursite.com/categories/%E7%AE%97%E6%B3%95/%E5%AE%9E%E6%97%B6%E4%BA%BA%E8%84%B8%E8%AF%86%E5%88%AB/"/>
    
      <category term="活体检测" scheme="http://yoursite.com/categories/%E7%AE%97%E6%B3%95/%E5%AE%9E%E6%97%B6%E4%BA%BA%E8%84%B8%E8%AF%86%E5%88%AB/%E6%B4%BB%E4%BD%93%E6%A3%80%E6%B5%8B/"/>
    
    
      <category term="dlib" scheme="http://yoursite.com/tags/dlib/"/>
    
      <category term="opencv" scheme="http://yoursite.com/tags/opencv/"/>
    
      <category term="Kinect" scheme="http://yoursite.com/tags/Kinect/"/>
    
  </entry>
  
  <entry>
    <title>ElasticFusion在ubuntu16.04+cuda8.0上的实现</title>
    <link href="http://yoursite.com/2019/04/12/15/"/>
    <id>http://yoursite.com/2019/04/12/15/</id>
    <published>2019-04-12T13:06:41.000Z</published>
    <updated>2019-06-21T03:18:15.202Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一、驱动与cuda安装"><a href="#一、驱动与cuda安装" class="headerlink" title="一、驱动与cuda安装"></a>一、驱动与cuda安装</h1><p>#安装驱动与cuda8.0<br>参考这篇：<a href="https://blog.csdn.net/ffcjjhv/article/details/89151382" target="_blank" rel="noopener">https://blog.csdn.net/ffcjjhv/article/details/89151382</a></p><h1 id="二、配置"><a href="#二、配置" class="headerlink" title="二、配置"></a>二、配置</h1><h2 id="1、依赖包"><a href="#1、依赖包" class="headerlink" title="1、依赖包"></a>1、依赖包</h2><a id="more"></a><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install cmake cmake-qt-gui git build-essential libusb<span class="number">-1.0</span><span class="number">-0</span>-dev libudev-dev </span><br><span class="line">sudo apt-get install freeglut3-dev libglew-dev libsuitesparse-dev libeigen3-dev </span><br><span class="line">sudo apt-get install zlib1g-dev libjpeg-dev doxygen graphviz</span><br></pre></td></tr></table></figure><h2 id="2、openjdk-7-jdk"><a href="#2、openjdk-7-jdk" class="headerlink" title="2、openjdk-7-jdk"></a>2、openjdk-7-jdk</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo add-apt-repository ppa:openjdk-r/ppa</span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install openjdk<span class="number">-7</span>-jdk</span><br></pre></td></tr></table></figure><h2 id="3、OpenGL"><a href="#3、OpenGL" class="headerlink" title="3、OpenGL"></a>3、OpenGL</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install build-essential libgl1-mesa-dev</span><br><span class="line">sudo apt-get install freeglut3-dev</span><br><span class="line">sudo apt-get install libglew-dev libsdl2-dev libsdl2-image-dev libglm-dev libfreetype6-dev</span><br></pre></td></tr></table></figure><h1 id="三、代码编译"><a href="#三、代码编译" class="headerlink" title="三、代码编译"></a>三、代码编译</h1><p>#download ElasticFusion<br>GitHub地址：<a href="https://github.com/mp3guy/ElasticFusion" target="_blank" rel="noopener">https://github.com/mp3guy/ElasticFusion</a> ，解压到<code>ElasticFusion/ElasticFusion-master</code></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd ElasticFusion</span><br></pre></td></tr></table></figure><h2 id="1、安装-Pangolin"><a href="#1、安装-Pangolin" class="headerlink" title="1、安装 Pangolin"></a>1、安装 Pangolin</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">git clone https:<span class="comment">//github.com/stevenlovegrove/Pangolin.git</span></span><br><span class="line">cd Pangolin</span><br><span class="line">mkdir build &amp;&amp; cd build</span><br><span class="line">cmake ../ -DAVFORMAT_INCLUDE_DIR=<span class="string">""</span> -DCPP11_NO_BOOST=ON</span><br><span class="line">make -j4</span><br><span class="line">cd ../..</span><br></pre></td></tr></table></figure><h2 id="2、安装-OpenNI2"><a href="#2、安装-OpenNI2" class="headerlink" title="2、安装 OpenNI2"></a>2、安装 OpenNI2</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git clone https:<span class="comment">//github.com/occipital/OpenNI2.git</span></span><br><span class="line">cd OpenNI2</span><br><span class="line">make -j4</span><br><span class="line">cd ..</span><br></pre></td></tr></table></figure><h2 id="3、配置-ElasticFusion"><a href="#3、配置-ElasticFusion" class="headerlink" title="3、配置 ElasticFusion"></a>3、配置 ElasticFusion</h2><h3 id="（1）build-Core"><a href="#（1）build-Core" class="headerlink" title="（1）build Core"></a>（1）build Core</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cd ElasticFusion-master/Core</span><br><span class="line">mkdir build &amp;&amp; cd build</span><br><span class="line">cmake ../src</span><br><span class="line">make -j4</span><br><span class="line">cd ../../</span><br></pre></td></tr></table></figure><h3 id="（2）build-GPUTest"><a href="#（2）build-GPUTest" class="headerlink" title="（2）build GPUTest"></a>（2）build GPUTest</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cd GPUTest</span><br><span class="line">mkdir build &amp;&amp; cd build</span><br><span class="line">cmake ../src</span><br><span class="line">make -j4</span><br><span class="line">cd ../../</span><br></pre></td></tr></table></figure><h3 id="（3）build-GUI"><a href="#（3）build-GUI" class="headerlink" title="（3）build GUI"></a>（3）build GUI</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cd GUI</span><br><span class="line">mkdir build &amp;&amp; cd build</span><br><span class="line">cmake ../src</span><br><span class="line">make -j4</span><br><span class="line">cd ../../</span><br></pre></td></tr></table></figure><h1 id="四、-运行"><a href="#四、-运行" class="headerlink" title="四、 运行"></a>四、 运行</h1><h2 id="1、数据集离线运行"><a href="#1、数据集离线运行" class="headerlink" title="1、数据集离线运行"></a>1、数据集离线运行</h2><p>下载数据集：  <a href="http://www.doc.ic.ac.uk/~sleutene/datasets/elasticfusion/dyson_lab.klg" target="_blank" rel="noopener">http://www.doc.ic.ac.uk/~sleutene/datasets/elasticfusion/dyson_lab.klg</a> ，放到<code>ElasticFusion/ElasticFusion-master/GUI/build</code>，并运行</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./ElasticFusion -l dyson_lab.klg</span><br></pre></td></tr></table></figure><p>#运行结果<br><img src="https://img-blog.csdnimg.cn/20190412210419542.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ZmY2pqaHY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="2、在Kinect-v1上实时运行"><a href="#2、在Kinect-v1上实时运行" class="headerlink" title="2、在Kinect v1上实时运行"></a>2、在Kinect v1上实时运行</h2><h3 id="（1）build-libFreenect"><a href="#（1）build-libFreenect" class="headerlink" title="（1）build libFreenect"></a>（1）build libFreenect</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd ElasticFusion</span><br><span class="line">git clone https:<span class="comment">//github.com/OpenKinect/libfreenect</span></span><br><span class="line">cd libfreenect</span><br></pre></td></tr></table></figure><p>打开<code>libfreenect/CMakeLists.txt</code>，在33行<code>cmake_minimum_required(VERSION 2.8.12)</code>下一行添加</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">add_definitions(-<span class="built_in">std</span>=c++<span class="number">11</span>)</span><br></pre></td></tr></table></figure><p>保存后关闭，命令行继续执行</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mkdir build &amp;&amp; cd build  </span><br><span class="line">cmake .. -DBUILD_OPENNI2_DRIVER=ON  </span><br><span class="line">make -j4</span><br><span class="line">cp -L lib/OpenNI2-FreenectDriver/libFreenectDriver.so $&#123;OPENNI2_DIR&#125;/Bin/x64-Release/OpenNI2/Drivers   #OPENNI2_DIR需要修改</span><br></pre></td></tr></table></figure><p>注：<code>${OPENNI2_DIR}</code>是OpenNI2的解压文件夹，比如我的在ElasticFusion文件夹，则<br><img src="https://img-blog.csdnimg.cn/2019041516412934.png" alt="在这里插入图片描述"></p><h3 id="（2）Kinect-v1接入"><a href="#（2）Kinect-v1接入" class="headerlink" title="（2）Kinect v1接入"></a>（2）Kinect v1接入</h3><p>打开<code>libfreenect</code>文件夹，运行</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo cp platform/linux/udev/<span class="number">51</span>-kinect.rules /etc/udev/rules.d</span><br></pre></td></tr></table></figure><p>重启后，插上kinect后，命令行运行<code>lsusb</code>，查看是否包含：Xbox camera，Xbox motor，Xbox audio<br><img src="https://img-blog.csdnimg.cn/20190415165040377.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ZmY2pqaHY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h3 id="（3）修改GPUConfig-h"><a href="#（3）修改GPUConfig-h" class="headerlink" title="（3）修改GPUConfig.h"></a>（3）修改GPUConfig.h</h3><p>如果代码运行很慢且出现如下提示，需要修改修改<code>GPUConfig.h</code><br><img src="https://img-blog.csdnimg.cn/20190415170500705.png" alt="在这里插入图片描述"><br>在<code>ElasticFusion/ElasticFusion-master/GPUtest/build</code>文件夹运行</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./GPUTest ../</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20190415165848574.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ZmY2pqaHY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>将最后4行添加到<code>/ElasticFusion/ElasticFusion-master/Core/src/Utils/GPUConfig.h</code><br><img src="https://img-blog.csdnimg.cn/20190415170048968.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ZmY2pqaHY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h3 id="（4）运行"><a href="#（4）运行" class="headerlink" title="（4）运行"></a>（4）运行</h3><p>打开<code>ElasticFusion/ElasticFusion-master/GUI/build</code>，运行</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./ElasticFusion</span><br></pre></td></tr></table></figure><p>#运行结果<br><img src="https://img-blog.csdnimg.cn/20190415170315378.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ZmY2pqaHY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;一、驱动与cuda安装&quot;&gt;&lt;a href=&quot;#一、驱动与cuda安装&quot; class=&quot;headerlink&quot; title=&quot;一、驱动与cuda安装&quot;&gt;&lt;/a&gt;一、驱动与cuda安装&lt;/h1&gt;&lt;p&gt;#安装驱动与cuda8.0&lt;br&gt;参考这篇：&lt;a href=&quot;https://blog.csdn.net/ffcjjhv/article/details/89151382&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://blog.csdn.net/ffcjjhv/article/details/89151382&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;二、配置&quot;&gt;&lt;a href=&quot;#二、配置&quot; class=&quot;headerlink&quot; title=&quot;二、配置&quot;&gt;&lt;/a&gt;二、配置&lt;/h1&gt;&lt;h2 id=&quot;1、依赖包&quot;&gt;&lt;a href=&quot;#1、依赖包&quot; class=&quot;headerlink&quot; title=&quot;1、依赖包&quot;&gt;&lt;/a&gt;1、依赖包&lt;/h2&gt;
    
    </summary>
    
      <category term="三维重建" scheme="http://yoursite.com/categories/%E4%B8%89%E7%BB%B4%E9%87%8D%E5%BB%BA/"/>
    
      <category term="配置" scheme="http://yoursite.com/categories/%E4%B8%89%E7%BB%B4%E9%87%8D%E5%BB%BA/%E9%85%8D%E7%BD%AE/"/>
    
      <category term="算法" scheme="http://yoursite.com/categories/%E4%B8%89%E7%BB%B4%E9%87%8D%E5%BB%BA/%E9%85%8D%E7%BD%AE/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="ElasticFusion" scheme="http://yoursite.com/tags/ElasticFusion/"/>
    
      <category term="三维重建" scheme="http://yoursite.com/tags/%E4%B8%89%E7%BB%B4%E9%87%8D%E5%BB%BA/"/>
    
  </entry>
  
  <entry>
    <title>BundleFusion在win10+vs2013+cuda8.0上的实现</title>
    <link href="http://yoursite.com/2019/04/12/21/"/>
    <id>http://yoursite.com/2019/04/12/21/</id>
    <published>2019-04-12T03:06:00.000Z</published>
    <updated>2019-06-21T03:18:40.799Z</updated>
    
    <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>在深度相机室内实时稠密三维重建领域，BundleFusion是目前效果最好的开源算法框架。论文地址：<a href="https://arxiv.org/pdf/1604.01093.pdf" target="_blank" rel="noopener">https://arxiv.org/pdf/1604.01093.pdf</a><br>演示视频截取片断：</p><a id="more"></a><p><img src="https://img-blog.csdnimg.cn/20190412112621627.gif" alt="在这里插入图片描述"><br>视频地址：<a href="https://www.youtube.com/watch?v=keIirXrRb1k" target="_blank" rel="noopener">https://www.youtube.com/watch?v=keIirXrRb1k</a><br>在演示视频中，structure sensor是卡在iPad上，将采集到的数据通过无线网络传给台式机（带GPU），匹配、优化和重建工作都是在台式机上运行，重建的结果再通过无线网络传到iPad上显示。<br>重建效果图：<br><img src="https://img-blog.csdnimg.cn/20190412112318524.JPG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ZmY2pqaHY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h1 id="一、配置"><a href="#一、配置" class="headerlink" title="一、配置"></a>一、配置</h1><h2 id="1、cuda8-0安装"><a href="#1、cuda8-0安装" class="headerlink" title="1、cuda8.0安装"></a>1、cuda8.0安装</h2><p>#建议安装：<code>cuda8.0</code>，<code>vs2013</code></p><p>#卸载cuda10.0<br>在控制面板/卸载程序，卸载掉所有带有NVIDIA的程序，卸载顺序不影响</p><p>#下载cuda8.0：<a href="https://developer.nvidia.com/cuda-80-ga2-download-archive" target="_blank" rel="noopener">https://developer.nvidia.com/cuda-80-ga2-download-archive</a> ，并运行安装。<br><img src="https://img-blog.csdnimg.cn/2019041122513930.JPG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ZmY2pqaHY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>#验证安装成功，输入<code>nvcc --version</code><br><img src="https://img-blog.csdnimg.cn/20190412102533535.JPG" alt="在这里插入图片描述"></p><h2 id="2、DirectX-SDK安装"><a href="#2、DirectX-SDK安装" class="headerlink" title="2、DirectX SDK安装"></a>2、DirectX SDK安装</h2><p>下载地址：<a href="http://download.microsoft.com/download/A/E/7/AE743F1F-632B-4809-87A9-AA1BB3458E31/DXSDK_Jun10.exe" target="_blank" rel="noopener">http://download.microsoft.com/download/A/E/7/AE743F1F-632B-4809-87A9-AA1BB3458E31/DXSDK_Jun10.exe</a> ，运行安装。</p><p>#若运行安装出现 错误 <code>ErrorCode:s1023</code><br>解决办法1：<br><img src="https://img-blog.csdnimg.cn/20190411225804404.JPG" alt="在这里插入图片描述"><br>控制面板卸载以上两项，再重新安装DXSDK_Jun10.exe即可。</p><p>大部分通过这个方法可以解决，如果以上两项不存在或者卸载后仍不能解决问题（比如我），可能Microsoft Visual C++ 运行库安装有问题，得<code>删除并重新安装 Microsoft Visual C++ 运行库</code>，步骤如下：</p><p>1、控制面板卸载名称包含“Microsoft Visual C++”和“Redistributable”的所有程序<br>2、下载并安装以下所有软件：</p><p> <a href="http://www.microsoft.com/download/en/details.aspx?id=5638" target="_blank" rel="noopener">Microsoft Visual C++ 2005 SP1 Redistributable (x86)</a><br>  <a href="http://www.microsoft.com/download/en/details.aspx?id=18471" target="_blank" rel="noopener">Microsoft Visual C++ 2005 SP1 Redistributable (x64)</a><br> <a href="http://www.microsoft.com/download/en/details.aspx?id=5582" target="_blank" rel="noopener">Microsoft Visual C++ 2008 SP1 Redistributable (x86)</a><br> <a href="http://www.microsoft.com/download/en/details.aspx?id=2092" target="_blank" rel="noopener">Microsoft Visual C++ 2008 SP1 Redistributable (x64)</a><br><a href="http://www.microsoft.com/download/en/details.aspx?id=8328" target="_blank" rel="noopener">Microsoft Visual C++ 2010 SP1 Redistributable (x86)</a><br><a href="http://www.microsoft.com/download/en/details.aspx?id=13523" target="_blank" rel="noopener">Microsoft Visual C++ 2010 SP1 Redistributable (x64)</a><br><a href="https://www.microsoft.com/en-us/download/details.aspx?id=30679" target="_blank" rel="noopener">Microsoft Visual C++ 2012 Update 4 Redistributable(x86 和 x64)</a><br><a href="https://support.microsoft.com/en-us/help/3179560/update-for-visual-c-2013-and-visual-c-redistributable-package" target="_blank" rel="noopener">Microsoft Visual C++ 2013 Update 5 Redistributable Package(x86 和 x64)</a><br><a href="https://www.microsoft.com/en-us/download/details.aspx?id=52685" target="_blank" rel="noopener">Microsoft Visual C++ 2015 Update 3 Redistributable(x86 和 x64)</a></p><p>注意：</p><ul><li>每个下载的文件名均相同，因此在安装它之前，请确保不覆盖之前的文件。下载一个安装一个，然后再下载下一个并安装，依此类推。<ul><li>64 位系统上需要 x86 和 x64 版本。32 位系统只需要 x86 版本。</li></ul></li></ul><p>3、重启后，控制面板卸载2010两项，再重新安装DXSDK_Jun10.exe，即可解决。</p><h1 id="二、vs2013代码生成"><a href="#二、vs2013代码生成" class="headerlink" title="二、vs2013代码生成"></a>二、vs2013代码生成</h1><p>BundleFusion GitHub地址：<a href="https://github.com/niessner/BundleFusion" target="_blank" rel="noopener">https://github.com/niessner/BundleFusion</a><br>配置过程主要参考<a href="https://bericht.neopostmodern.com/posts/artist-guide-to-bundlefusion" target="_blank" rel="noopener">这里</a></p><p>从GitHub上下载该BundleFusion，并解压，得到工程 <code>BundleFusioin-master</code></p><h2 id="1、mLib与-mLib-external配置"><a href="#1、mLib与-mLib-external配置" class="headerlink" title="1、mLib与 mLib external配置"></a>1、mLib与 mLib external配置</h2><h3 id="mLib"><a href="#mLib" class="headerlink" title="mLib"></a>mLib</h3><p>下载地址：<a href="https://github.com/niessner/mLib" target="_blank" rel="noopener">https://github.com/niessner/mLib</a>  ，解压后，替换掉目录 <code>BundleFusion-master\external\mLib</code></p><h3 id="mLib-external"><a href="#mLib-external" class="headerlink" title="mLib external"></a>mLib external</h3><p>下载地址：<a href="https://www.dropbox.com/s/fve3uen5mzonidx/mLibExternal.zip?dl=0" target="_blank" rel="noopener">https://www.dropbox.com/s/fve3uen5mzonidx/mLibExternal.zip?dl=0</a> ，解压后，放到 <code>BundleFusioin-master 同级目录</code>,网址访问不了的话可以用我传到网盘的mLibExternal.zip：链接：<a href="https://pan.baidu.com/s/1CJysQCHl4t7RPfvqliwfew" target="_blank" rel="noopener">https://pan.baidu.com/s/1CJysQCHl4t7RPfvqliwfew</a> 提取码：0x4t </p><p>最终目录结构：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">bundlefusion</span><br><span class="line">BundleFusion-master/</span><br><span class="line">  external/</span><br><span class="line">    mLib/ <span class="meta"># this is the submodule you replaced</span></span><br><span class="line">      data/</span><br><span class="line">      src/</span><br><span class="line">      [...]</span><br><span class="line">  FriedLiver/</span><br><span class="line">    [...]</span><br><span class="line">    FriedLiver.sln</span><br><span class="line">    [...]</span><br><span class="line">mLibExternal/ <span class="meta"># you downloaded this from Dropbox</span></span><br><span class="line">  include</span><br><span class="line">  libsWindows</span><br><span class="line">  [...]</span><br></pre></td></tr></table></figure><h2 id="2、cuda设置"><a href="#2、cuda设置" class="headerlink" title="2、cuda设置"></a>2、cuda设置</h2><h3 id="修改cuda版本"><a href="#修改cuda版本" class="headerlink" title="修改cuda版本"></a>修改cuda版本</h3><p>用VS2013打开 <code>BundleFusion-master\FriedLiver\FriedLiver.sln</code> 工程，如果cuda版本不是原代码设置的cuda7.0，就会出现如下错误：<br><img src="https://img-blog.csdnimg.cn/20190412093658412.JPG" alt="在这里插入图片描述"><br>修改 <code>BundleFusion-master\FriedLiver\FriedLiver.vcxproj</code> 文件，用vs code打开该文件，并修改如下两行：<br><img src="https://img-blog.csdnimg.cn/20190412094229611.JPG" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20190412094237754.JPG" alt="在这里插入图片描述"><br>再次打开就不会报错了。</p><h3 id="显卡计算能力设置"><a href="#显卡计算能力设置" class="headerlink" title="显卡计算能力设置"></a>显卡计算能力设置</h3><p>选择适合你显卡的compute能力，显卡计算能力在<a href="https://developer.nvidia.com/cuda-gpus" target="_blank" rel="noopener">这里</a>查询<br>我的笔记本显卡NVIDIA GeForce MX150，计算能力与GeForce 940M等同，为5.0，在工程的配置选项中设置如下：<br><img src="https://img-blog.csdnimg.cn/20190412101315737.JPG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ZmY2pqaHY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="3、相机类型设置（以apt0-sens离线数据为例）"><a href="#3、相机类型设置（以apt0-sens离线数据为例）" class="headerlink" title="3、相机类型设置（以apt0.sens离线数据为例）"></a>3、相机类型设置（以apt0.sens离线数据为例）</h2><h3 id="输入类型"><a href="#输入类型" class="headerlink" title="输入类型"></a>输入类型</h3><p>输入数据可以为Kinect v1，Kinect v2，PrimeSenseSensor，IntelSensor，RealSense，StructureSensor以及SensorDataReader（离线数据）<br>具体可以查看<code>FriedLiver.cpp</code>中7-103行的内容</p><p>没有深度相机的，以离线数据<code>office3.sens</code>为例，下载地址：<a href="http://graphics.stanford.edu/projects/bundlefusion/" target="_blank" rel="noopener">http://graphics.stanford.edu/projects/bundlefusion/</a> </p><h3 id="修改GlobalAppState-h"><a href="#修改GlobalAppState-h" class="headerlink" title="修改GlobalAppState.h"></a>修改GlobalAppState.h</h3><p>因为使用的是离线数据，将<code>GlobalAppState.h</code>中深度相机全部注释掉。<br><img src="https://img-blog.csdnimg.cn/20190412102815288.JPG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ZmY2pqaHY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>注：如果用深度相机（如：Kinect v1）实时运行，用哪个将哪个取消注释，并安装对应SDK。</p><h2 id="4、生成FriedLiver-exe"><a href="#4、生成FriedLiver-exe" class="headerlink" title="4、生成FriedLiver.exe"></a>4、生成FriedLiver.exe</h2><p>修改为 <code>Release</code> 版本，然后选择 <code>生成-&gt;生成解决方法</code><br>编译通过后，如下图：<br><img src="https://img-blog.csdnimg.cn/20190412104215614.JPG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ZmY2pqaHY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>在<code>BundleFusion-master\FriedLiver\x64\Release</code>中生成可执行文件<code>FriedLiver.exe</code></p><h1 id="三、运行与结果"><a href="#三、运行与结果" class="headerlink" title="三、运行与结果"></a>三、运行与结果</h1><h2 id="1、配置文件修改"><a href="#1、配置文件修改" class="headerlink" title="1、配置文件修改"></a>1、配置文件修改</h2><p>将<code>BundleFusion-master\FriedLiver</code> 目录下的 <code>zParametersBundlingDefault.txt</code> 和 <code>zParametersDefault.txt</code> 拷贝到 <code>BundleFusion-master\FriedLiver\x64\Release</code> </p><h3 id="修改zParametersDefault-txt"><a href="#修改zParametersDefault-txt" class="headerlink" title="修改zParametersDefault.txt"></a>修改zParametersDefault.txt</h3><p>用vs code打开 <code>zParametersDefault.txt</code> 配置文件，选择输入类型，这里使用离线数据，修改第2行，设置<code>s_sensorIdx = 8</code> 。如果用深度相机（如：Kinect v1）实时运行，修改为对应的序列号。<br><img src="https://img-blog.csdnimg.cn/20190412105005826.JPG" alt="在这里插入图片描述"><br>修改第49行，设置<code>s_hashNumSDFBlocks = 100000</code><br><img src="https://img-blog.csdnimg.cn/20190412105613837.JPG" alt="在这里插入图片描述"><br>修改第58行，设置输入路径<code>s_binaryDumpSensorFile = &quot;../data/office3.sens&quot;</code><br><img src="https://img-blog.csdnimg.cn/20190412110258422.JPG" alt="在这里插入图片描述"><br>将下载的<code>office3.sens</code>放置到<code>BundleFusion-master\FriedLiver\x64\data</code></p><h3 id="修改zParametersBundlingDefault-txt"><a href="#修改zParametersBundlingDefault-txt" class="headerlink" title="修改zParametersBundlingDefault.txt"></a>修改zParametersBundlingDefault.txt</h3><p>双击运行后，若出现窗口崩溃或者没有响应直接跳出，如下图：<br><img src="https://img-blog.csdnimg.cn/20190412105858577.JPG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ZmY2pqaHY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>用vs code打开 <code>zParametersBundlingDefault.txt</code> 配置文件，修改第30行，设置<code>s_maxNumImages = 400</code> </p><h2 id="2、运行结果"><a href="#2、运行结果" class="headerlink" title="2、运行结果"></a>2、运行结果</h2><p>配置修改后，双击运行FriedLiver.exe<br><img src="https://img-blog.csdnimg.cn/20190411222117900.gif" alt="在这里插入图片描述"><br>按下<code>tab键</code>，如下图所示，按照提示与软件进行交互，按下<code>ctrl+2</code>显示带颜色深度，按下<code>ctrl+3</code>显示彩色视频流，按下<code>ctrl+9</code>导出当前模型到<code>FriedLiver\x64\Release\scans\scan.ply</code> ，具体实现代码查看<code>FriedLiver\Source\DepthSensing\DepthSensing.cpp</code><br><img src="https://img-blog.csdnimg.cn/20190412113926745.JPG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ZmY2pqaHY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="3、模型生成"><a href="#3、模型生成" class="headerlink" title="3、模型生成"></a>3、模型生成</h2><p>运行结束后，<code>BundleFusion-master\FriedLiver\x64\data\office3.sens</code>同目录下生成office3.ply，用meshlab打开<br><img src="https://img-blog.csdnimg.cn/20190411224542285.gif" alt="在这里插入图片描述"></p><h2 id="4、在Kinect-v1上的实时运行"><a href="#4、在Kinect-v1上的实时运行" class="headerlink" title="4、在Kinect v1上的实时运行"></a>4、在Kinect v1上的实时运行</h2><h3 id="安装-Kinect-SDK-v1-8"><a href="#安装-Kinect-SDK-v1-8" class="headerlink" title="安装 Kinect  SDK v1.8"></a>安装 Kinect  SDK v1.8</h3><p> <a href="https://www.microsoft.com/en-us/download/details.aspx?id=40278" target="_blank" rel="noopener">Kinect for Windows SDK v1.8</a><br> <a href="https://www.microsoft.com/en-us/download/details.aspx?id=40276" target="_blank" rel="noopener">Kinect for Windows Developer Toolkit v1.8</a><br> 下载后默认安装</p><h3 id="设置Kinect-v1输入"><a href="#设置Kinect-v1输入" class="headerlink" title="设置Kinect v1输入"></a>设置Kinect v1输入</h3><p> 重新打开 <code>BundleFusion-master\FriedLiver\FriedLiver.sln</code> 工程，将<code>GlobalAppState.h</code>中第三行取消注释<br><img src="https://img-blog.csdnimg.cn/20190415110414701.JPG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ZmY2pqaHY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br> 选择 <code>生成-&gt;生成解决方法</code>，即可编译通过。</p><p> <code>zParametersDefault.txt</code> 配置文件，选择输入类型，这里使用Kinect v1，修改第2行，设置<code>s_sensorIdx = 0</code> </p><h3 id="实时运行"><a href="#实时运行" class="headerlink" title="实时运行"></a>实时运行</h3><p>插上Kinect v1，双击运行FriedLiver.exe<br><img src="https://img-blog.csdnimg.cn/20190415111035525.JPG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ZmY2pqaHY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h2&gt;&lt;p&gt;在深度相机室内实时稠密三维重建领域，BundleFusion是目前效果最好的开源算法框架。论文地址：&lt;a href=&quot;https://arxiv.org/pdf/1604.01093.pdf&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://arxiv.org/pdf/1604.01093.pdf&lt;/a&gt;&lt;br&gt;演示视频截取片断：&lt;/p&gt;
    
    </summary>
    
      <category term="三维重建" scheme="http://yoursite.com/categories/%E4%B8%89%E7%BB%B4%E9%87%8D%E5%BB%BA/"/>
    
      <category term="算法" scheme="http://yoursite.com/categories/%E4%B8%89%E7%BB%B4%E9%87%8D%E5%BB%BA/%E7%AE%97%E6%B3%95/"/>
    
      <category term="配置" scheme="http://yoursite.com/categories/%E4%B8%89%E7%BB%B4%E9%87%8D%E5%BB%BA/%E7%AE%97%E6%B3%95/%E9%85%8D%E7%BD%AE/"/>
    
    
      <category term="BundleFusion" scheme="http://yoursite.com/tags/BundleFusion/"/>
    
      <category term="win10" scheme="http://yoursite.com/tags/win10/"/>
    
      <category term="室内重建" scheme="http://yoursite.com/tags/%E5%AE%A4%E5%86%85%E9%87%8D%E5%BB%BA/"/>
    
  </entry>
  
  <entry>
    <title>DynamicFusion在ubuntu16.04+显卡GT740+cuda8.0上的实现</title>
    <link href="http://yoursite.com/2019/04/09/14/"/>
    <id>http://yoursite.com/2019/04/09/14/</id>
    <published>2019-04-09T10:10:06.000Z</published>
    <updated>2019-06-21T03:18:45.804Z</updated>
    
    <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p><img src="https://img-blog.csdnimg.cn/20190409152447293.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ZmY2pqaHY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>DynamicFusion构建了一个可以实时重建 非刚性变形 动态场景 的系统，随着新的数据融合进模型当中，模型得到降噪、细节更加精细。</p><a id="more"></a><p>论文地址：<a href="http://grail.cs.washington.edu/projects/dynamicfusion/papers/DynamicFusion.pdf" target="_blank" rel="noopener">http://grail.cs.washington.edu/projects/dynamicfusion/papers/DynamicFusion.pdf</a><br>GitHub地址：<a href="https://github.com/mihaibujanca/dynamicfusion" target="_blank" rel="noopener">https://github.com/mihaibujanca/dynamicfusion</a><br>注意：这个项目是对论文的复现，但是目前<code>尚未准确复现论文内容</code>，运行速度仍然有待优化，10s/frame不满足实时运行，建议转换成离线数据，再进行运行。</p><p>这里记录DynamicFusion在ubuntu16.04+显卡GT740+cuda8.0上的实现。（虽然可以实现，但是GT740真的是太慢慢慢慢了…电脑是刚重装完系统的机子）</p><h1 id="1、驱动与cuda安装"><a href="#1、驱动与cuda安装" class="headerlink" title="1、驱动与cuda安装"></a>1、驱动与cuda安装</h1><h2 id="（1）驱动安装"><a href="#（1）驱动安装" class="headerlink" title="（1）驱动安装"></a>（1）驱动安装</h2><h3 id="a-驱动下载"><a href="#a-驱动下载" class="headerlink" title="a.驱动下载"></a>a.驱动下载</h3><p>#查看显卡型号</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lspci | grep -i nvidia</span><br></pre></td></tr></table></figure><p>nvidia官网 <a href="https://www.geforce.cn/drivers" target="_blank" rel="noopener">https://www.geforce.cn/drivers</a> 搜索显卡型号对应的驱动，下载（别用最新的）后放到home文件夹<br><img src="https://img-blog.csdnimg.cn/20190409155616337.JPG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ZmY2pqaHY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h3 id="b-禁用nouveau驱动"><a href="#b-禁用nouveau驱动" class="headerlink" title="b.禁用nouveau驱动"></a>b.禁用nouveau驱动</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo gedit /etc/modprobe.d/blacklist.conf</span><br></pre></td></tr></table></figure><p>在文本最后添加：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">blacklist nouveau</span><br><span class="line">options nouveau modeset=<span class="number">0</span></span><br></pre></td></tr></table></figure><p>然后执行：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo update-initramfs -u</span><br></pre></td></tr></table></figure><p>重启后，屏幕分辨率可能不对不用管，命令行执行：<code>lsmod | grep nouveau</code> ，如果没有屏幕输出，说明禁用nouveau成功。</p><h3 id="c-禁用X-Window服务"><a href="#c-禁用X-Window服务" class="headerlink" title="c.禁用X-Window服务"></a>c.禁用X-Window服务</h3><p><code>#注意：这会关闭图形界面，提前用手机或者笔记本看下面的步骤</code></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo service lightdm stop</span><br></pre></td></tr></table></figure><p>按<code>Ctrl-Alt+F1</code>进入命令行界面，输入用户名和密码登录。</p><h3 id="d-命令行安装驱动"><a href="#d-命令行安装驱动" class="headerlink" title="d.命令行安装驱动"></a>d.命令行安装驱动</h3><p>#给驱动run文件赋予执行权限：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo chmod +x NVIDIA-Linux-x86_64<span class="number">-384.59</span>.run</span><br></pre></td></tr></table></figure><p>#后面的参数不可省略：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ./NVIDIA-Linux-x86_64<span class="number">-384.59</span>.run –no-opengl-files</span><br></pre></td></tr></table></figure><p>按照提示安装，回车确定，成功安装后在命令行输入：<code>sudo service lightdm start</code>，恢复到图形界面，此时屏幕分辨率恢复正常，重启。</p><h3 id="e-驱动测试"><a href="#e-驱动测试" class="headerlink" title="e.驱动测试"></a>e.驱动测试</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo nvidia-smi</span><br></pre></td></tr></table></figure><p>若列出GPU的信息列表，表示驱动安装成功。<br><img src="https://img-blog.csdnimg.cn/20190409161619534.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ZmY2pqaHY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="（2）cuda7-5安装"><a href="#（2）cuda7-5安装" class="headerlink" title="（2）cuda7.5安装"></a>（2）cuda7.5安装</h2><p>cuda7.5可以使用命令行安装，到了cuda8.0以及往上就不行了</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install nvidia-cuda-dev nvidia-cuda-toolkit nvidia-nsight nvidia-prime</span><br></pre></td></tr></table></figure><p>等待安装完成后，输入<code>nvcc -V</code>，检查是否安装成功。<br><img src="https://img-blog.csdnimg.cn/20190409162225446.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ZmY2pqaHY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h1 id="2、环境配置"><a href="#2、环境配置" class="headerlink" title="2、环境配置"></a>2、环境配置</h1><p>下载DynamicFusion代码：<a href="https://github.com/mihaibujanca/dynamicfusion" target="_blank" rel="noopener">https://github.com/mihaibujanca/dynamicfusion</a><br>整个配置过程参考dynamicfusion-master/build.sh 文件（不要直接运行build.sh会有各种报错）</p><h2 id="（1）apt-get-install-依赖安装"><a href="#（1）apt-get-install-依赖安装" class="headerlink" title="（1）apt-get install 依赖安装"></a>（1）apt-get install 依赖安装</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install cmake libvtk5-dev libsuitesparse-dev liblapack-dev --fix-missing</span><br><span class="line">sudo apt-get install libblas-dev libgtk2<span class="number">.0</span>-dev pkg-config libopenni-dev --fix-missing</span><br><span class="line">sudo apt-get install libusb<span class="number">-1.0</span><span class="number">-0</span>-dev wget zip clang --fix-missing</span><br></pre></td></tr></table></figure><h2 id="（2）安装gflags、glog、Eigen、Ceres"><a href="#（2）安装gflags、glog、Eigen、Ceres" class="headerlink" title="（2）安装gflags、glog、Eigen、Ceres"></a>（2）安装gflags、glog、Eigen、Ceres</h2><p>进入<code>dynamicfusion-master</code>文件夹的<code>上一目录</code></p><h3 id="安装gflags、glog、Eigen"><a href="#安装gflags、glog、Eigen" class="headerlink" title="安装gflags、glog、Eigen"></a>安装gflags、glog、Eigen</h3><p>#安装 gflags</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git clone https:<span class="comment">//github.com/gflags/gflags.git</span></span><br><span class="line">cd gflags</span><br><span class="line">mkdir -p build/ &amp;&amp; cd build</span><br><span class="line">cmake .. &amp;&amp; make </span><br><span class="line">cd ../../</span><br></pre></td></tr></table></figure><p>#安装 glog</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git clone https:<span class="comment">//github.com/google/glog.git</span></span><br><span class="line">cd glog</span><br><span class="line">mkdir -p build/ &amp;&amp; cd build/</span><br><span class="line">cmake .. &amp;&amp; make</span><br><span class="line">cd ../../</span><br></pre></td></tr></table></figure><p>#安装 Eigen 3.3.4</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">wget http:<span class="comment">//bitbucket.org/eigen/eigen/get/3.3.4.tar.gz</span></span><br><span class="line">tar -xf <span class="number">3.3</span><span class="number">.4</span>.tar.gz</span><br><span class="line">cd eigen-eigen<span class="number">-5</span>a0156e40feb</span><br><span class="line">mkdir -p build &amp;&amp; cd build</span><br><span class="line">cmake ..</span><br><span class="line">sudo make install</span><br><span class="line">cd ../../</span><br></pre></td></tr></table></figure><h3 id="配置ceres-solver"><a href="#配置ceres-solver" class="headerlink" title="配置ceres-solver"></a>配置ceres-solver</h3><p>#下载ceres-solver：<a href="https://github.com/ceres-solver/ceres-solver" target="_blank" rel="noopener">https://github.com/ceres-solver/ceres-solver</a> 并解压到<code>dynamicfusion-master文件夹的上一目录</code> ，将ceres-solver-master重命名为<code>ceres-solver</code></p><p>#配置 Ceres</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">cd ceres-solver</span><br><span class="line">mkdir -p build/ &amp;&amp; cd build/</span><br><span class="line">cmake ..</span><br><span class="line">make -j4</span><br><span class="line">sudo make install</span><br><span class="line">cd ../../</span><br></pre></td></tr></table></figure><h2 id="（3）安装OpenCV-2-4-13"><a href="#（3）安装OpenCV-2-4-13" class="headerlink" title="（3）安装OpenCV 2.4.13"></a>（3）安装OpenCV 2.4.13</h2><p>注：opencv的下载过程非常非常慢，建议前天晚上下载，第二天再接着配置</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">git clone https:<span class="comment">//github.com/opencv/opencv</span></span><br><span class="line">cd opencv/</span><br><span class="line">git checkout <span class="number">2.4</span><span class="number">.13</span><span class="number">.3</span></span><br><span class="line">mkdir -p build &amp;&amp; cd build</span><br><span class="line">cmake -DWITH_VTK=ON -DBUILD_opencv_calib3d=ON -DBUILD_opencv_imgproc=ON -DWITH_CUDA=OFF ..</span><br><span class="line">make -j4</span><br><span class="line">sudo make install</span><br><span class="line">cd ../../</span><br></pre></td></tr></table></figure><h2 id="（4）安装Boost"><a href="#（4）安装Boost" class="headerlink" title="（4）安装Boost"></a>（4）安装Boost</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">wget https:<span class="comment">//dl.bintray.com/boostorg/release/1.64.0/source/boost_1_64_0.tar.gz</span></span><br><span class="line">tar -xf boost_1_64_0.tar.gz</span><br><span class="line">cd boost_1_64_0</span><br><span class="line">sudo ./bootstrap.sh</span><br><span class="line">./b2</span><br><span class="line">sudo ./b2 install</span><br><span class="line">cd ..</span><br></pre></td></tr></table></figure><p>删除掉无用的压缩包，最终目录如图<br><img src="https://img-blog.csdnimg.cn/20190409171511176.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ZmY2pqaHY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h1 id="3、代码修改与dataset获取"><a href="#3、代码修改与dataset获取" class="headerlink" title="3、代码修改与dataset获取"></a>3、代码修改与dataset获取</h1><h2 id="（1）配置deps-terra"><a href="#（1）配置deps-terra" class="headerlink" title="（1）配置deps/terra"></a>（1）配置deps/terra</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cd dynamicfusion-master/deps</span><br><span class="line">wget https:<span class="comment">//github.com/zdevito/terra/releases/download/release-2016-03-25/terra-Linux-x86_64-332a506.zip</span></span><br><span class="line">unzip terra-Linux-x86_64<span class="number">-332</span>a506.zip</span><br><span class="line">rm terra-Linux-x86_64<span class="number">-332</span>a506.zip</span><br><span class="line">mv terra-Linux-x86_64<span class="number">-332</span>a506 terra</span><br></pre></td></tr></table></figure><h2 id="（2）配置deps-Opt"><a href="#（2）配置deps-Opt" class="headerlink" title="（2）配置deps/Opt"></a>（2）配置deps/Opt</h2><p>#下载Opt：<a href="https://github.com/niessner/Opt/tree/c6012e7e4c67fa3bea96161ba24fe88a2b79deed" target="_blank" rel="noopener">https://github.com/niessner/Opt/tree/c6012e7e4c67fa3bea96161ba24fe88a2b79deed</a> ，并解压到deps，重命名为Opt</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd Opt/API/</span><br><span class="line">make -j4</span><br></pre></td></tr></table></figure><h2 id="（3）修改kfusion-src-warp-field-cpp"><a href="#（3）修改kfusion-src-warp-field-cpp" class="headerlink" title="（3）修改kfusion/src/warp_field.cpp"></a>（3）修改kfusion/src/warp_field.cpp</h2><p>为了解决之后运行代码会出现的报错</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">.../dynamicfusion/kfusion/src/warp_field.cpp:<span class="number">158</span>:<span class="number">10</span>: error: ‘<span class="class"><span class="keyword">struct</span> <span class="title">ceres</span>:</span>:Solver::Options’ has no member named ‘num_threads_used’</span><br><span class="line">options.num_threads_used = <span class="number">8</span>;</span><br></pre></td></tr></table></figure><p>将第157行<code>options.num_linear_solver_threads = 8;</code>注释掉</p><h2 id="（4）dataset下载"><a href="#（4）dataset下载" class="headerlink" title="（4）dataset下载"></a>（4）dataset下载</h2><p>下载地址 <a href="https://www.dropbox.com/sh/qgy2n9bmioofqnj/AABUnT7pi2ECpxSi80EmXOXna?dl=0" target="_blank" rel="noopener">https://www.dropbox.com/sh/qgy2n9bmioofqnj/AABUnT7pi2ECpxSi80EmXOXna?dl=0</a> （给的数据挺多的，如果网站上不去可以下载我传到百度云的数据，只传了作为demo的umbrella_data.zip）</p><p>umbrella_data.zip下载链接：<a href="https://pan.baidu.com/s/1PRf7-xl5vgj2SUQVNiuk-g" target="_blank" rel="noopener">https://pan.baidu.com/s/1PRf7-xl5vgj2SUQVNiuk-g</a>  ，提取码：25s1<br>下载后放置到dynamicfusion-master文件夹中，运行</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p data/umbrella/depth</span><br><span class="line">mkdir -p data/umbrella/color</span><br><span class="line"></span><br><span class="line">mv umbrella_data.zip data/umbrella</span><br><span class="line">cd data/umbrella</span><br><span class="line">unzip umbrella_data.zip</span><br><span class="line">rm *.txt</span><br><span class="line">mv *color*.png color/</span><br><span class="line">mv *depth*.png depth/</span><br><span class="line">rm umbrella_data.zip</span><br></pre></td></tr></table></figure><h1 id="4、运行"><a href="#4、运行" class="headerlink" title="4、运行"></a>4、运行</h1><h2 id="（1）编译"><a href="#（1）编译" class="headerlink" title="（1）编译"></a>（1）编译</h2><p>进入dynamicfusion-master文件夹，运行</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p build &amp;&amp; cd build</span><br><span class="line">cmake -DOpenCV_DIR=~/opencv/build -DBOOST_ROOT=~/boost_1_64_0/ -DOPENNI_INCLUDE_DIR=/usr/include/ni -DOpenCV_FOUND=TRUE ..</span><br><span class="line">make -j4</span><br></pre></td></tr></table></figure><h2 id="（2）运行与报错"><a href="#（2）运行与报错" class="headerlink" title="（2）运行与报错"></a>（2）运行与报错</h2><p>进入dynamicfusion-master文件夹，运行</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./build/bin/dynamicfusion data/umbrella</span><br></pre></td></tr></table></figure><p>运行后报错 <code>llvm: No such file or directory</code> ,查看这里：<a href="https://github.com/mihaibujanca/dynamicfusion/issues/54" target="_blank" rel="noopener">https://github.com/mihaibujanca/dynamicfusion/issues/54</a><br>升级cuda7.5到8.0能够解决</p><h2 id="（3）升级cuda7-5到8-0"><a href="#（3）升级cuda7-5到8-0" class="headerlink" title="（3）升级cuda7.5到8.0"></a>（3）升级cuda7.5到8.0</h2><h3 id="卸载cuda7-5"><a href="#卸载cuda7-5" class="headerlink" title="卸载cuda7.5"></a>卸载cuda7.5</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get autoremove nvidia-cuda-toolkit</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20190409174954238.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ZmY2pqaHY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h3 id="安装cuda8-0"><a href="#安装cuda8-0" class="headerlink" title="安装cuda8.0"></a>安装cuda8.0</h3><p>#下载cuda8.0：<a href="https://developer.nvidia.com/cuda-80-ga2-download-archive" target="_blank" rel="noopener">https://developer.nvidia.com/cuda-80-ga2-download-archive</a><br><img src="https://img-blog.csdnimg.cn/20190409175454360.JPG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ZmY2pqaHY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>#安装依赖</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install freeglut3-dev build-essential libx11-dev libxmu-dev libxi-dev libgl1-mesa-glx libglu1-mesa libglu1-mesa-dev</span><br></pre></td></tr></table></figure><p>#安装cuda8.0</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo chmod <span class="number">777</span> cuda_8<span class="number">.0</span><span class="number">.61</span>_375<span class="number">.26</span>_linux.run </span><br><span class="line">sudo ./cuda_8<span class="number">.0</span><span class="number">.61</span>_375<span class="number">.26</span>_linux.run</span><br></pre></td></tr></table></figure><p>执行后会先出现一个声明，需要阅读到100%才会开始安装，直接ctr+c跳过<br>按照提示输入回答就行，位置全部选择默认，注：<code>第二个选择是否安装nvidia驱动时，一定要选择否</code><br>安装完依赖后，如果仍然提示</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Installing the CUDA Toolkit in /usr/local/cuda<span class="number">-8.0</span> … </span><br><span class="line">Missing recommended library: libXmu.so</span><br></pre></td></tr></table></figure><p>不用管</p><p>#添加环境变量</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo gedit ~/.bashrc</span><br></pre></td></tr></table></figure><p>将以下内容写入到~/.bashrc尾部：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> PATH=/usr/local/cuda<span class="number">-8.0</span>/bin$&#123;PATH:+:$&#123;PATH&#125;&#125;</span><br><span class="line"><span class="keyword">export</span> LD_LIBRARY_PATH=/usr/local/cuda<span class="number">-8.0</span>/lib64$&#123;LD_LIBRARY_PATH:+:$&#123;LD_LIBRARY_PATH&#125;&#125;</span><br></pre></td></tr></table></figure><p>重启后，输入<code>nvcc --version</code> 测试是否安装成功<br><img src="https://img-blog.csdnimg.cn/20190409180512255.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ZmY2pqaHY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="（4）运行与结果"><a href="#（4）运行与结果" class="headerlink" title="（4）运行与结果"></a>（4）运行与结果</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install nvidia-cuda-dev nvidia-cuda-toolkit nvidia-nsight nvidia-prime</span><br></pre></td></tr></table></figure><p>#编译<br>进入dynamicfusion-master文件夹，运行</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p build &amp;&amp; cd build</span><br><span class="line">cmake -DOpenCV_DIR=~/opencv/build -DBOOST_ROOT=~/boost_1_64_0/ -DOPENNI_INCLUDE_DIR=/usr/include/ni -DOpenCV_FOUND=TRUE ..</span><br><span class="line">make -j4</span><br></pre></td></tr></table></figure><p>#运行<br>进入dynamicfusion-master文件夹，运行</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./build/bin/dynamicfusion data/umbrella</span><br></pre></td></tr></table></figure><p>#结果<br><img src="https://img-blog.csdnimg.cn/20190409180742100.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ZmY2pqaHY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>DynamicFusion效果（项目视频）：<br><img src="https://img-blog.csdnimg.cn/20190409181625827.gif" alt="在这里插入图片描述"><br>视频地址：<a href="https://www.youtube.com/watch?v=i1eZekcc_lM" target="_blank" rel="noopener">https://www.youtube.com/watch?v=i1eZekcc_lM</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/20190409152447293.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ZmY2pqaHY=,size_16,color_FFFFFF,t_70&quot; alt=&quot;在这里插入图片描述&quot;&gt;&lt;br&gt;DynamicFusion构建了一个可以实时重建 非刚性变形 动态场景 的系统，随着新的数据融合进模型当中，模型得到降噪、细节更加精细。&lt;/p&gt;
    
    </summary>
    
      <category term="三维重建" scheme="http://yoursite.com/categories/%E4%B8%89%E7%BB%B4%E9%87%8D%E5%BB%BA/"/>
    
      <category term="算法" scheme="http://yoursite.com/categories/%E4%B8%89%E7%BB%B4%E9%87%8D%E5%BB%BA/%E7%AE%97%E6%B3%95/"/>
    
      <category term="配置" scheme="http://yoursite.com/categories/%E4%B8%89%E7%BB%B4%E9%87%8D%E5%BB%BA/%E7%AE%97%E6%B3%95/%E9%85%8D%E7%BD%AE/"/>
    
    
      <category term="三维重建" scheme="http://yoursite.com/tags/%E4%B8%89%E7%BB%B4%E9%87%8D%E5%BB%BA/"/>
    
      <category term="DynamicFusion" scheme="http://yoursite.com/tags/DynamicFusion/"/>
    
      <category term="非刚体" scheme="http://yoursite.com/tags/%E9%9D%9E%E5%88%9A%E4%BD%93/"/>
    
  </entry>
  
  <entry>
    <title>leetcode 精选50题 JavaScript答案汇总</title>
    <link href="http://yoursite.com/2019/03/11/13/"/>
    <id>http://yoursite.com/2019/03/11/13/</id>
    <published>2019-03-11T12:58:24.000Z</published>
    <updated>2019-06-21T03:01:27.345Z</updated>
    
    <content type="html"><![CDATA[<h3 id="题目来源"><a href="#题目来源" class="headerlink" title="题目来源"></a>题目来源</h3><p> <a href="https://leetcode-cn.com/problemset/50/" target="_blank" rel="noopener">腾讯精选练习（50 题）</a><br>信息更新时间：2019-3-11，因为要准备面前端，就用js做了遍来熟悉JavaScript这门语言，50道题均已提交通过。</p><a id="more"></a><p>GitHub地址：<a href="https://github.com/zj19941113/LeetCode-50-JavaScript-Answers" target="_blank" rel="noopener">https://github.com/zj19941113/LeetCode-50-JavaScript-Answers</a></p><h5 id="2两数相加-33-0-中等"><a href="#2两数相加-33-0-中等" class="headerlink" title="2两数相加-33.0%-中等"></a>2两数相加-33.0%-中等</h5><p><a href="https://leetcode-cn.com/problems/add-two-numbers/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/add-two-numbers/</a></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for singly-linked list.</span></span><br><span class="line"><span class="comment"> * function ListNode(val) &#123;</span></span><br><span class="line"><span class="comment"> *     this.val = val;</span></span><br><span class="line"><span class="comment"> *     this.next = null;</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @param &#123;ListNode&#125; l1</span></span><br><span class="line"><span class="comment"> * @param &#123;ListNode&#125; l2</span></span><br><span class="line"><span class="comment"> * @return &#123;ListNode&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> addTwoNumbers = <span class="function"><span class="keyword">function</span>(<span class="params">l1, l2</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> re = <span class="keyword">new</span> ListNode(<span class="number">0</span>); <span class="comment">//0随便取，不会用到，只为了初始化</span></span><br><span class="line">    <span class="keyword">var</span> r=re;  <span class="comment">//浅拷贝</span></span><br><span class="line">    <span class="keyword">var</span> carry=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(l1!=<span class="literal">null</span> || l2!=<span class="literal">null</span>)&#123;</span><br><span class="line">        <span class="keyword">var</span> x = l1==<span class="literal">null</span>? <span class="number">0</span>:l1.val;</span><br><span class="line">        <span class="keyword">var</span> y = l2==<span class="literal">null</span>? <span class="number">0</span>:l2.val;</span><br><span class="line">        r.next=<span class="keyword">new</span> ListNode((carry+x+y)%<span class="number">10</span>);</span><br><span class="line">        r=r.next;</span><br><span class="line">        <span class="keyword">if</span>(carry+x+y&gt;<span class="number">9</span>)&#123;</span><br><span class="line">            carry=<span class="number">1</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            carry=<span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(l1!=<span class="literal">null</span>)&#123;</span><br><span class="line">            l1=l1.next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(l2!=<span class="literal">null</span>)&#123;</span><br><span class="line">            l2=l2.next;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(carry&gt;<span class="number">0</span>)&#123;</span><br><span class="line">        r.next=<span class="keyword">new</span> ListNode(<span class="number">1</span>); <span class="comment">//最高位进1</span></span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">return</span> re.next;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h5 id="4寻找两个有序数组的中位数-33-8-困难"><a href="#4寻找两个有序数组的中位数-33-8-困难" class="headerlink" title="4寻找两个有序数组的中位数-33.8%-困难"></a>4寻找两个有序数组的中位数-33.8%-困难</h5><p><a href="https://leetcode-cn.com/problems/median-of-two-sorted-arrays/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/median-of-two-sorted-arrays/</a></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @param &#123;number[]&#125; nums1</span></span><br><span class="line"><span class="comment"> * @param &#123;number[]&#125; nums2</span></span><br><span class="line"><span class="comment"> * @return &#123;number&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> findMedianSortedArrays = <span class="function"><span class="keyword">function</span>(<span class="params">a, b</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 谁小谁移，移动k次，k中间</span></span><br><span class="line">    <span class="keyword">var</span> n = a.length;</span><br><span class="line">    <span class="keyword">var</span> m = b.length;</span><br><span class="line">    <span class="keyword">var</span> nm = n + m;</span><br><span class="line">    <span class="keyword">var</span> ni = <span class="number">0</span>,mi = <span class="number">0</span>,x,y; </span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(ni + mi &lt; nm )&#123;  </span><br><span class="line">        <span class="keyword">if</span>(ni &lt; n )&#123;</span><br><span class="line">            <span class="keyword">while</span>(mi == m || a[ni] &lt;= b[mi])&#123;</span><br><span class="line">                ni=ni+<span class="number">1</span>;</span><br><span class="line">                <span class="keyword">if</span>(ni+mi == (nm+<span class="number">1</span>)/<span class="number">2</span>)&#123; <span class="comment">//总长奇</span></span><br><span class="line">                    <span class="keyword">return</span> a[ni<span class="number">-1</span>];</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(ni+mi == nm/<span class="number">2</span>)&#123;<span class="comment">//总长偶</span></span><br><span class="line">                    x = a[ni<span class="number">-1</span>];</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(ni+mi == (nm/<span class="number">2</span> + <span class="number">1</span>))&#123; </span><br><span class="line">                    y = a[ni<span class="number">-1</span>];</span><br><span class="line">                    <span class="keyword">return</span> (x+y)/<span class="number">2</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(mi &lt; m)&#123;</span><br><span class="line">            <span class="keyword">while</span>(ni == n || b[mi] &lt;= a[ni])&#123;</span><br><span class="line">                mi = mi + <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">if</span>(ni+mi == (nm+<span class="number">1</span>)/<span class="number">2</span>)&#123;</span><br><span class="line">                    <span class="keyword">return</span> b[mi<span class="number">-1</span>];</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(ni+mi == nm/<span class="number">2</span>)&#123;</span><br><span class="line">                    x = b[mi<span class="number">-1</span>];</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(ni+mi == (nm/<span class="number">2</span> + <span class="number">1</span>))&#123; </span><br><span class="line">                    y = b[mi<span class="number">-1</span>];</span><br><span class="line">                    <span class="keyword">return</span> (x+y)/<span class="number">2</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h5 id="5最长回文子串-24-7-中等"><a href="#5最长回文子串-24-7-中等" class="headerlink" title="5最长回文子串-24.7%-中等"></a>5最长回文子串-24.7%-中等</h5><p><a href="https://leetcode-cn.com/problems/longest-palindromic-substring/submissions/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/longest-palindromic-substring/submissions/</a></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @param &#123;string&#125; s</span></span><br><span class="line"><span class="comment"> * @return &#123;string&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> longestPalindrome = <span class="function"><span class="keyword">function</span>(<span class="params">s</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (s==<span class="literal">null</span>&amp;&amp;s.length&lt;<span class="number">1</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">""</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> fir = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">var</span> las = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;s.length;i++)&#123;</span><br><span class="line">        <span class="keyword">var</span> lenl = getsub(s,i,i);</span><br><span class="line">        <span class="keyword">var</span> lenr = getsub(s,i,i+<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">var</span> len = <span class="built_in">Math</span>.max(lenl,lenr);</span><br><span class="line">        <span class="keyword">if</span>(len&gt;las-fir)&#123;</span><br><span class="line">            fir = i - <span class="built_in">Math</span>.floor((len<span class="number">-1</span>)/<span class="number">2</span>);</span><br><span class="line">            las = i + <span class="built_in">Math</span>.floor(len/<span class="number">2</span>);</span><br><span class="line">        &#125;     </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> s.slice(fir,las+<span class="number">1</span>);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getsub</span>(<span class="params">s,l,r</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(l&gt;=<span class="number">0</span>&amp;&amp;r&lt;=s.length<span class="number">-1</span>&amp;&amp;s.charAt(l)==s.charAt(r))&#123;</span><br><span class="line">        l--;</span><br><span class="line">        r++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> r-l<span class="number">-1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="7整数反转-31-8-简单"><a href="#7整数反转-31-8-简单" class="headerlink" title="7整数反转-31.8%-简单"></a>7整数反转-31.8%-简单</h5><p><a href="https://leetcode-cn.com/problems/reverse-integer/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/reverse-integer/</a></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @param &#123;number&#125; x</span></span><br><span class="line"><span class="comment"> * @return &#123;number&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> reverse = <span class="function"><span class="keyword">function</span>(<span class="params">x</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> result = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">var</span> strx;</span><br><span class="line">    <span class="keyword">var</span> mayAns;</span><br><span class="line">    <span class="keyword">if</span>(x&gt;<span class="number">0</span>)&#123;</span><br><span class="line">        strx = <span class="built_in">String</span>(x);</span><br><span class="line">        mayAns = <span class="built_in">Number</span>(strx.split(<span class="string">""</span>).reverse().join(<span class="string">""</span>));</span><br><span class="line">        <span class="keyword">return</span> mayAns&lt;=<span class="built_in">Math</span>.pow(<span class="number">2</span>,<span class="number">31</span>)<span class="number">-1</span>?mayAns:<span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        strx = <span class="built_in">String</span>(-x);</span><br><span class="line">        mayAns = -<span class="built_in">Number</span>(strx.split(<span class="string">""</span>).reverse().join(<span class="string">""</span>));</span><br><span class="line">        <span class="keyword">return</span> mayAns&gt;=-<span class="built_in">Math</span>.pow(<span class="number">2</span>,<span class="number">31</span>) ?mayAns:<span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h5 id="8字符串转换整数-atoi-16-6-中等"><a href="#8字符串转换整数-atoi-16-6-中等" class="headerlink" title="8字符串转换整数 (atoi)-16.6%-中等"></a>8字符串转换整数 (atoi)-16.6%-中等</h5><p><a href="https://leetcode-cn.com/problems/median-of-two-sorted-arrays" target="_blank" rel="noopener">https://leetcode-cn.com/problems/median-of-two-sorted-arrays</a></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @param &#123;string&#125; str</span></span><br><span class="line"><span class="comment"> * @return &#123;number&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> myAtoi = <span class="function"><span class="keyword">function</span>(<span class="params">str</span>) </span>&#123;</span><br><span class="line">    str = str.trim();</span><br><span class="line">    <span class="keyword">var</span> word = str.split(<span class="string">" "</span>)[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">parseInt</span>(word))&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">parseInt</span>(word)&gt;<span class="built_in">Math</span>.pow(<span class="number">2</span>,<span class="number">31</span>)<span class="number">-1</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">Math</span>.pow(<span class="number">2</span>,<span class="number">31</span>)<span class="number">-1</span>;</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">parseInt</span>(word)&lt;-<span class="built_in">Math</span>.pow(<span class="number">2</span>,<span class="number">31</span>))&#123;</span><br><span class="line">            <span class="keyword">return</span> -<span class="built_in">Math</span>.pow(<span class="number">2</span>,<span class="number">31</span>);</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">parseInt</span>(word);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h5 id="9回文数-56-0-简单"><a href="#9回文数-56-0-简单" class="headerlink" title="9回文数-56.0%-简单"></a>9回文数-56.0%-简单</h5><p><a href="https://leetcode-cn.com/problems/palindrome-number/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/palindrome-number/</a></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @param &#123;number&#125; x</span></span><br><span class="line"><span class="comment"> * @return &#123;boolean&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> isPalindrome = <span class="function"><span class="keyword">function</span>(<span class="params">x</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x &gt;= <span class="number">0</span>)&#123;</span><br><span class="line">       <span class="keyword">var</span> strx = <span class="built_in">String</span>(x); </span><br><span class="line">       <span class="keyword">return</span> strx == strx.split(<span class="string">""</span>).reverse().join(<span class="string">""</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h5 id="11盛最多水的容器-53-5-中等"><a href="#11盛最多水的容器-53-5-中等" class="headerlink" title="11盛最多水的容器-53.5%-中等"></a>11盛最多水的容器-53.5%-中等</h5><p><a href="https://leetcode-cn.com/problems/container-with-most-water/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/container-with-most-water/</a></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @param &#123;number[]&#125; height</span></span><br><span class="line"><span class="comment"> * @return &#123;number&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> maxArea = <span class="function"><span class="keyword">function</span>(<span class="params">height</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> maxs = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;height.length;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> j=i+<span class="number">1</span>;j&lt;height.length;j++)&#123;</span><br><span class="line">            <span class="keyword">var</span> tmp = <span class="built_in">Math</span>.min(height[i],height[j])*(j-i);</span><br><span class="line">            <span class="keyword">if</span>(tmp&gt;maxs)&#123;</span><br><span class="line">                maxs = tmp;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> maxs;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h5 id="14最长公共前缀-32-2-简单"><a href="#14最长公共前缀-32-2-简单" class="headerlink" title="14最长公共前缀-32.2%-简单"></a>14最长公共前缀-32.2%-简单</h5><p><a href="https://leetcode-cn.com/problems/longest-common-prefix/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/longest-common-prefix/</a></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @param &#123;string[]&#125; strs</span></span><br><span class="line"><span class="comment"> * @return &#123;string&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> longestCommonPrefix = <span class="function"><span class="keyword">function</span>(<span class="params">strs</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(strs.length == <span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">""</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> mini = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">1</span>;i&lt;strs.length;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span> (strs[i].length&lt;strs[mini].length)&#123;</span><br><span class="line">            mini = i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> result = <span class="string">""</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> j=<span class="number">0</span>;j&lt;strs[mini].length;j++)&#123;</span><br><span class="line">        <span class="keyword">for</span>( i=<span class="number">0</span>;i&lt;strs.length;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(strs[mini].slice(<span class="number">0</span>,j+<span class="number">1</span>) != strs[i].slice(<span class="number">0</span>,j+<span class="number">1</span>))&#123;</span><br><span class="line">                <span class="keyword">return</span> result;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        result =  strs[mini].slice(<span class="number">0</span>,j+<span class="number">1</span>); </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h5 id="15三数之和-21-2-中等"><a href="#15三数之和-21-2-中等" class="headerlink" title="15三数之和-21.2%-中等"></a>15三数之和-21.2%-中等</h5><p><a href="https://leetcode-cn.com/problems/3sum" target="_blank" rel="noopener">https://leetcode-cn.com/problems/3sum</a></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @param &#123;number[]&#125; nums</span></span><br><span class="line"><span class="comment"> * @return &#123;number[][]&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> threeSum = <span class="function"><span class="keyword">function</span>(<span class="params">nums</span>) </span>&#123;</span><br><span class="line">    nums.sort(<span class="function"><span class="keyword">function</span>(<span class="params">a,b</span>)</span>&#123;<span class="keyword">return</span> a-b&#125;);</span><br><span class="line">    <span class="keyword">var</span> ls = [];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;nums.length<span class="number">-2</span>;i++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(nums[i]==nums[i<span class="number">-1</span>])&#123; <span class="comment">//i和前面一样，跳过</span></span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> j=i+<span class="number">1</span>;j&lt;nums.length<span class="number">-1</span>;j++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(nums[j]==nums[j<span class="number">-1</span>]&amp;&amp;j!=i+<span class="number">1</span>)&#123; <span class="comment">//j和前面一样，且前面不是i，跳过</span></span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> k=j+<span class="number">1</span>;k&lt;nums.length;k++) &#123;</span><br><span class="line">                <span class="keyword">if</span>(nums[k]+nums[j]+nums[i] == <span class="number">0</span>)&#123;</span><br><span class="line">                    ls.push([nums[i],nums[j],nums[k]]); <span class="comment">//找到k跳出，不再往后</span></span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ls;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h5 id="16最接近的三数之和-39-0-中等"><a href="#16最接近的三数之和-39-0-中等" class="headerlink" title="16最接近的三数之和-39.0%-中等"></a>16最接近的三数之和-39.0%-中等</h5><p><a href="https://leetcode-cn.com/problems/3sum-closest/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/3sum-closest/</a></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @param &#123;number[]&#125; nums</span></span><br><span class="line"><span class="comment"> * @param &#123;number&#125; target</span></span><br><span class="line"><span class="comment"> * @return &#123;number&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> threeSumClosest = <span class="function"><span class="keyword">function</span>(<span class="params">nums, target</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> len = nums.length;</span><br><span class="line">    <span class="keyword">var</span> minl = nums[<span class="number">0</span>]+nums[<span class="number">1</span>]+nums[<span class="number">2</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;len<span class="number">-2</span>;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">var</span> j=i+<span class="number">1</span>;j&lt;len<span class="number">-1</span>;j++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">var</span> k=j+<span class="number">1</span>;k&lt;len;k++)&#123;</span><br><span class="line">                <span class="keyword">var</span> tmp = nums[i]+nums[j]+nums[k];</span><br><span class="line">                <span class="keyword">if</span>(<span class="built_in">Math</span>.abs(tmp-target)&lt;<span class="built_in">Math</span>.abs(minl-target))&#123;</span><br><span class="line">                    minl = tmp;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> minl;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h5 id="20有效的括号-36-7-简单"><a href="#20有效的括号-36-7-简单" class="headerlink" title="20有效的括号-36.7%-简单"></a>20有效的括号-36.7%-简单</h5><p><a href="https://leetcode-cn.com/problems/valid-parentheses/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/valid-parentheses/</a></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @param &#123;string&#125; s</span></span><br><span class="line"><span class="comment"> * @return &#123;boolean&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> isValid = <span class="function"><span class="keyword">function</span>(<span class="params">s</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(s == <span class="literal">null</span>||s.length &lt;<span class="number">1</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> stack = [];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;s.length;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(s[i] == <span class="string">""</span>)&#123;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(stack.leng&lt;<span class="number">1</span>)&#123;</span><br><span class="line">            stack.push(s[i]);</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(stack[stack.length<span class="number">-1</span>]==<span class="string">"("</span>&amp;&amp;s[i]==<span class="string">")"</span> ||stack[stack.length<span class="number">-1</span>]==<span class="string">"&#123;"</span>&amp;&amp;s[i]==<span class="string">"&#125;"</span> ||stack[stack.length<span class="number">-1</span>]==<span class="string">"["</span>&amp;&amp;s[i]==<span class="string">"]"</span>)&#123;</span><br><span class="line">            stack.pop();</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            stack.push(s[i]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> stack.length&lt;<span class="number">1</span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h5 id="21合并两个有序链表-52-9-简单"><a href="#21合并两个有序链表-52-9-简单" class="headerlink" title="21合并两个有序链表-52.9%-简单"></a>21合并两个有序链表-52.9%-简单</h5><p><a href="https://leetcode-cn.com/problems/merge-two-sorted-lists/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/merge-two-sorted-lists/</a></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for singly-linked list.</span></span><br><span class="line"><span class="comment"> * function ListNode(val) &#123;</span></span><br><span class="line"><span class="comment"> *     this.val = val;</span></span><br><span class="line"><span class="comment"> *     this.next = null;</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @param &#123;ListNode&#125; l1</span></span><br><span class="line"><span class="comment"> * @param &#123;ListNode&#125; l2</span></span><br><span class="line"><span class="comment"> * @return &#123;ListNode&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> mergeTwoLists = <span class="function"><span class="keyword">function</span>(<span class="params">l1, l2</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> l3 = <span class="keyword">new</span> ListNode(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">var</span> l4 = l3;</span><br><span class="line">    <span class="keyword">while</span>(l1!=<span class="literal">null</span> &amp;&amp; l2!=<span class="literal">null</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(l1.val&lt;l2.val)&#123;</span><br><span class="line">            l4.next = l1;</span><br><span class="line">            l1 = l1.next;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            l4.next = l2;</span><br><span class="line">            l2 = l2.next;</span><br><span class="line">        &#125;</span><br><span class="line">        l4 = l4.next;</span><br><span class="line">    &#125;</span><br><span class="line">    l4.next = l1==<span class="literal">null</span>?l2:l1;</span><br><span class="line">    <span class="keyword">return</span> l3.next;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h5 id="23合并K个排序链表-43-8-困难"><a href="#23合并K个排序链表-43-8-困难" class="headerlink" title="23合并K个排序链表-43.8%-困难"></a>23合并K个排序链表-43.8%-困难</h5><p><a href="https://leetcode-cn.com/problems/merge-k-sorted-lists/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/merge-k-sorted-lists/</a></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for singly-linked list.</span></span><br><span class="line"><span class="comment"> * function ListNode(val) &#123;</span></span><br><span class="line"><span class="comment"> *     this.val = val;</span></span><br><span class="line"><span class="comment"> *     this.next = null;</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @param &#123;ListNode[]&#125; lists</span></span><br><span class="line"><span class="comment"> * @return &#123;ListNode&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> mergeKLists = <span class="function"><span class="keyword">function</span>(<span class="params">lists</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> rl = <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;lists.length;i++)&#123;</span><br><span class="line">        rl = mergeTwoLists(lists[i],rl);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> rl;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> mergeTwoLists = <span class="function"><span class="keyword">function</span>(<span class="params">l1, l2</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> l3 = <span class="keyword">new</span> ListNode(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">var</span> l4 = l3;</span><br><span class="line">    <span class="keyword">while</span>(l1!=<span class="literal">null</span> &amp;&amp; l2!=<span class="literal">null</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(l1.val&lt;l2.val)&#123;</span><br><span class="line">            l4.next = l1;</span><br><span class="line">            l1 = l1.next;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            l4.next = l2;</span><br><span class="line">            l2 = l2.next;</span><br><span class="line">        &#125;</span><br><span class="line">        l4 = l4.next;</span><br><span class="line">    &#125;</span><br><span class="line">    l4.next = l1==<span class="literal">null</span>?l2:l1;</span><br><span class="line">    <span class="keyword">return</span> l3.next;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h5 id="26删除排序数组中的重复项-42-9-简单"><a href="#26删除排序数组中的重复项-42-9-简单" class="headerlink" title="26删除排序数组中的重复项-42.9%-简单"></a>26删除排序数组中的重复项-42.9%-简单</h5><p><a href="https://leetcode-cn.com/problems/remove-duplicates-from-sorted-array/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/remove-duplicates-from-sorted-array/</a></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @param &#123;number[]&#125; nums</span></span><br><span class="line"><span class="comment"> * @return &#123;number&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> removeDuplicates = <span class="function"><span class="keyword">function</span>(<span class="params">nums</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;nums.length;i++)&#123;</span><br><span class="line">        <span class="keyword">var</span> j=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span>(nums[i] == nums[i+j])&#123;</span><br><span class="line">            ++j;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(j!=<span class="number">1</span>)&#123;</span><br><span class="line">            nums.splice(i,j<span class="number">-1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> nums.length;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h5 id="33搜索旋转排序数组-35-8-中等"><a href="#33搜索旋转排序数组-35-8-中等" class="headerlink" title="33搜索旋转排序数组-35.8%-中等"></a>33搜索旋转排序数组-35.8%-中等</h5><p><a href="https://leetcode-cn.com/problems/search-in-rotated-sorted-array/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/search-in-rotated-sorted-array/</a></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @param &#123;number[]&#125; nums</span></span><br><span class="line"><span class="comment"> * @param &#123;number&#125; target</span></span><br><span class="line"><span class="comment"> * @return &#123;number&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> search = <span class="function"><span class="keyword">function</span>(<span class="params">nums, target</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> searchs(nums, <span class="number">0</span>, nums.length<span class="number">-1</span>, target);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">searchs</span>(<span class="params">nums,l,h,target</span>)</span>&#123;</span><br><span class="line">    <span class="comment">//搜不到返回-1，搜到了返回target</span></span><br><span class="line">    <span class="keyword">if</span> (l &gt; h)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">var</span> mid = <span class="built_in">Math</span>.floor((l + h)/<span class="number">2</span>);<span class="comment">//[0,1,2,4,5,6,7]</span></span><br><span class="line">    <span class="keyword">if</span>(nums[mid] == target)&#123;</span><br><span class="line">        <span class="keyword">return</span> mid;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(nums[mid] &lt; nums[h])&#123; <span class="comment">//旋转在左 [6,7,0,1,2,4,5]</span></span><br><span class="line">        <span class="keyword">if</span>(nums[mid]&lt;target&amp;&amp;target&lt;=nums[h])&#123; </span><br><span class="line">            <span class="keyword">return</span> searchs(nums,mid+<span class="number">1</span>,h,target);<span class="comment">//在右，右顺序</span></span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> searchs(nums,l,mid<span class="number">-1</span>,target);<span class="comment">//不在右</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123; <span class="comment">//旋转在右 [2,4,5,6,7,0,1]</span></span><br><span class="line">        <span class="keyword">if</span>(nums[l]&lt;=target&amp;&amp;target&lt;nums[mid])&#123; </span><br><span class="line">            <span class="keyword">return</span> searchs(nums,l,mid<span class="number">-1</span>,target);<span class="comment">//在左，左顺序</span></span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> searchs(nums,mid+<span class="number">1</span>,h,target);<span class="comment">//不在右</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="43字符串相乘-37-9-中等"><a href="#43字符串相乘-37-9-中等" class="headerlink" title="43字符串相乘-37.9%-中等"></a>43字符串相乘-37.9%-中等</h5><p><a href="https://leetcode-cn.com/problems/multiply-strings/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/multiply-strings/</a></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @param &#123;string&#125; num1</span></span><br><span class="line"><span class="comment"> * @param &#123;string&#125; num2</span></span><br><span class="line"><span class="comment"> * @return &#123;string&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> multiply = <span class="function"><span class="keyword">function</span>(<span class="params">num1, num2</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> res = <span class="string">""</span>;</span><br><span class="line">    <span class="keyword">var</span> len1 = num1.length;</span><br><span class="line">    <span class="keyword">var</span> len2 = num2.length;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;len1;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">var</span> j=<span class="number">0</span>;j&lt;len2;j++)&#123;</span><br><span class="line">            <span class="keyword">var</span> base = <span class="built_in">Array</span>(i+j+<span class="number">1</span>).join(<span class="number">0</span>);<span class="comment">//i+j个0  eg:"00"  //逐位相乘</span></span><br><span class="line">            <span class="keyword">var</span> tmp = <span class="built_in">String</span>(<span class="built_in">Number</span>(num1[len1<span class="number">-1</span>-i])*<span class="built_in">Number</span>(num2[len2<span class="number">-1</span>-j])) + base;</span><br><span class="line">            res = addstr(res,tmp);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(res[<span class="number">0</span>] == <span class="number">0</span> &amp;&amp; res.length &gt; <span class="number">1</span>)&#123;<span class="comment">//"002" -&gt; "2"</span></span><br><span class="line">        res = res.slice(<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">addstr</span>(<span class="params">s1, s2</span>) </span>&#123; <span class="comment">//字符串相加</span></span><br><span class="line">    <span class="keyword">var</span> re = <span class="string">""</span>;</span><br><span class="line">    <span class="keyword">if</span>(s1.length&gt;=s2.length)&#123;</span><br><span class="line">        s2 =  <span class="built_in">Array</span>(s1.length-s2.length+<span class="number">1</span>).join(<span class="number">0</span>) + s2;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        s1 = <span class="built_in">Array</span>(s2.length-s1.length+<span class="number">1</span>).join(<span class="number">0</span>) + s1;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> flag = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> i=<span class="number">0</span>;i&lt;s1.length;i++)&#123;</span><br><span class="line">        <span class="keyword">var</span> t = <span class="built_in">Number</span>(s1[s1.length - <span class="number">1</span> - i]) + <span class="built_in">Number</span>(s2[s1.length - <span class="number">1</span> - i]) + flag;</span><br><span class="line">        <span class="keyword">if</span>(t &lt; <span class="number">10</span>)&#123;</span><br><span class="line">            re = <span class="built_in">String</span>(t).concat(re);</span><br><span class="line">            flag = <span class="number">0</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            re = <span class="built_in">String</span>(t<span class="number">-10</span>).concat(re);</span><br><span class="line">            flag = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> flag == <span class="number">0</span>? re:<span class="string">"1"</span>+re;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h5 id="46全排列-66-7-中等"><a href="#46全排列-66-7-中等" class="headerlink" title="46全排列-66.7%-中等"></a>46全排列-66.7%-中等</h5><p><a href="https://leetcode-cn.com/problems/permutations/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/permutations/</a></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @param &#123;number[]&#125; nums</span></span><br><span class="line"><span class="comment"> * @return &#123;number[][]&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> permute = <span class="function"><span class="keyword">function</span>(<span class="params">nums</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(nums.length == <span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> [[]];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(nums.length == <span class="number">1</span>)&#123;</span><br><span class="line">        <span class="keyword">var</span> re = [];</span><br><span class="line">        re.push(nums);</span><br><span class="line">        <span class="keyword">return</span> re;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> nums1 = permute(nums.slice(<span class="number">1</span>));</span><br><span class="line">    <span class="keyword">var</span> num0 = nums[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">var</span> result = [];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;nums1.length;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">var</span> j=<span class="number">0</span>;j&lt;nums1[i].length+<span class="number">1</span>;j++)&#123;</span><br><span class="line">            <span class="keyword">var</span> tmp = nums1[i].concat();</span><br><span class="line">            tmp.splice(j,<span class="number">0</span>,num0);</span><br><span class="line">            result.push(tmp);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h5 id="53最大子序和-42-9-简单"><a href="#53最大子序和-42-9-简单" class="headerlink" title="53最大子序和-42.9%-简单"></a>53最大子序和-42.9%-简单</h5><p><a href="https://leetcode-cn.com/problems/maximum-subarray/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/maximum-subarray/</a></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @param &#123;number[]&#125; nums</span></span><br><span class="line"><span class="comment"> * @return &#123;number&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> maxSubArray = <span class="function"><span class="keyword">function</span>(<span class="params">nums</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> sum = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">var</span> maxsum = nums[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;nums.length;i++)&#123;</span><br><span class="line">        sum +=nums[i];</span><br><span class="line">        <span class="keyword">if</span>(sum &gt; maxsum)&#123;</span><br><span class="line">            maxsum = sum;</span><br><span class="line">        &#125; </span><br><span class="line">        <span class="keyword">if</span>(sum &lt; <span class="number">0</span>)&#123;</span><br><span class="line">            sum = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> maxsum;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h5 id="54螺旋矩阵-34-0-中等"><a href="#54螺旋矩阵-34-0-中等" class="headerlink" title="54螺旋矩阵-34.0%-中等"></a>54螺旋矩阵-34.0%-中等</h5><p><a href="https://leetcode-cn.com/problems/spiral-matrix/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/spiral-matrix/</a></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @param &#123;number[][]&#125; matrix</span></span><br><span class="line"><span class="comment"> * @return &#123;number[]&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> spiralOrder = <span class="function"><span class="keyword">function</span>(<span class="params">matrix</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> arr = [];</span><br><span class="line">    <span class="keyword">while</span>(!(matrix.length == <span class="number">0</span>||matrix[<span class="number">0</span>].length == <span class="number">0</span>))&#123;</span><br><span class="line">        <span class="keyword">var</span> tmp = matrix.shift(); <span class="comment">//剪第一行</span></span><br><span class="line">        arr = arr.concat(tmp);</span><br><span class="line">        <span class="keyword">if</span>(matrix.length == <span class="number">0</span>||matrix[<span class="number">0</span>].length == <span class="number">0</span>)&#123; <span class="comment">//[]   [[],[]]</span></span><br><span class="line">            <span class="keyword">return</span> arr;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;matrix.length;i++)&#123;<span class="comment">//剪最后一列</span></span><br><span class="line">            <span class="keyword">var</span> tmp = matrix[i].pop();</span><br><span class="line">            arr.push(tmp);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(matrix.length == <span class="number">0</span>||matrix[<span class="number">0</span>].length == <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> arr;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">var</span> tmp = matrix.pop().reverse();<span class="comment">//剪最后一行</span></span><br><span class="line">        arr = arr.concat(tmp);</span><br><span class="line">        <span class="keyword">if</span>(matrix.length == <span class="number">0</span>||matrix[<span class="number">0</span>].length == <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> arr;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;matrix.length;i++)&#123;<span class="comment">//剪第一列</span></span><br><span class="line">            <span class="keyword">var</span> tmp = matrix[matrix.length<span class="number">-1</span>-i].shift();</span><br><span class="line">            arr.push(tmp);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> arr;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h5 id="59螺旋矩阵II-71-1-中等"><a href="#59螺旋矩阵II-71-1-中等" class="headerlink" title="59螺旋矩阵II-71.1%-中等"></a>59螺旋矩阵II-71.1%-中等</h5><p><a href="https://leetcode-cn.com/problems/spiral-matrix-ii/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/spiral-matrix-ii/</a></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @param &#123;number&#125; n</span></span><br><span class="line"><span class="comment"> * @return &#123;number[][]&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> generateMatrix = <span class="function"><span class="keyword">function</span>(<span class="params">n</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> arr = [];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        arr.push(<span class="keyword">new</span> <span class="built_in">Array</span>(n).fill(<span class="number">0</span>));<span class="comment">//创建n*n零矩阵</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> c = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">var</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(c &lt;= n*n)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">var</span> j=i;j&lt;n-i;j++)&#123;<span class="comment">//第一行</span></span><br><span class="line">            arr[i][j] = c++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">var</span> j=i+<span class="number">1</span>;j&lt;n-i;j++)&#123;<span class="comment">//最后一列</span></span><br><span class="line">            arr[j][n-i<span class="number">-1</span>] = c++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">var</span> j=i+<span class="number">1</span>;j&lt;n-i;j++)&#123;<span class="comment">//最后一行</span></span><br><span class="line">            arr[n-i<span class="number">-1</span>][n-j<span class="number">-1</span>] = c++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">var</span> j=i+<span class="number">1</span>;j&lt;n-i<span class="number">-1</span>;j++)&#123;<span class="comment">//第一列</span></span><br><span class="line">            arr[n-j<span class="number">-1</span>][i] = c++;</span><br><span class="line">        &#125;</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> arr;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h5 id="61旋转链表-37-5-中等"><a href="#61旋转链表-37-5-中等" class="headerlink" title="61旋转链表-37.5%-中等"></a>61旋转链表-37.5%-中等</h5><p><a href="https://leetcode-cn.com/problems/rotate-list/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/rotate-list/</a></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for singly-linked list.</span></span><br><span class="line"><span class="comment"> * function ListNode(val) &#123;</span></span><br><span class="line"><span class="comment"> *     this.val = val;</span></span><br><span class="line"><span class="comment"> *     this.next = null;</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @param &#123;ListNode&#125; head</span></span><br><span class="line"><span class="comment"> * @param &#123;number&#125; k</span></span><br><span class="line"><span class="comment"> * @return &#123;ListNode&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> rotateRight = <span class="function"><span class="keyword">function</span>(<span class="params">head, k</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(head == <span class="literal">null</span>||k==<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> head;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> h = head;</span><br><span class="line">    <span class="keyword">var</span> len = <span class="number">1</span>;<span class="comment">//总长</span></span><br><span class="line">    <span class="keyword">while</span>(h.next !=<span class="literal">null</span> )&#123;</span><br><span class="line">        ++len;</span><br><span class="line">        h = h.next;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(k % len == <span class="number">0</span>)&#123;<span class="comment">//不用旋转 head本身</span></span><br><span class="line">        <span class="keyword">return</span> head;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(k &gt; len)&#123;<span class="comment">//需旋转</span></span><br><span class="line">        k = k % len;</span><br><span class="line">    &#125;</span><br><span class="line">    len = len - k;</span><br><span class="line">    <span class="keyword">var</span> ln = <span class="keyword">new</span> ListNode(<span class="number">0</span>);<span class="comment">//0-&gt;1-&gt;2-&gt;3-&gt;NULL</span></span><br><span class="line">    <span class="keyword">var</span> n = ln; </span><br><span class="line">    <span class="keyword">while</span>(len != <span class="number">0</span>)&#123;</span><br><span class="line">        n.next = head;</span><br><span class="line">        n = n.next;</span><br><span class="line">        head = head.next;</span><br><span class="line">        --len;</span><br><span class="line">    &#125;</span><br><span class="line">    n.next = <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">var</span> r = head;</span><br><span class="line">    <span class="keyword">var</span> lr = r;</span><br><span class="line">    <span class="keyword">while</span>(head.next != <span class="literal">null</span>)&#123;</span><br><span class="line">        lr = head;</span><br><span class="line">        head = head.next;</span><br><span class="line">        lr = lr.next;</span><br><span class="line">    &#125;</span><br><span class="line">    lr.next = ln.next</span><br><span class="line">    <span class="keyword">return</span> r;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h5 id="62不同路径-52-6-中等"><a href="#62不同路径-52-6-中等" class="headerlink" title="62不同路径-52.6%-中等"></a>62不同路径-52.6%-中等</h5><p><a href="https://leetcode-cn.com/problems/unique-paths/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/unique-paths/</a></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @param &#123;number&#125; m</span></span><br><span class="line"><span class="comment"> * @param &#123;number&#125; n</span></span><br><span class="line"><span class="comment"> * @return &#123;number&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> uniquePaths = <span class="function"><span class="keyword">function</span>(<span class="params">m, n</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> dp = [];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;m;i++)&#123; <span class="comment">//创建m*n零矩阵</span></span><br><span class="line">        dp.push(<span class="keyword">new</span> <span class="built_in">Array</span>(n).fill(<span class="number">0</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;m;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">var</span> j=<span class="number">0</span>;j&lt;n;j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(i==<span class="number">0</span>||j==<span class="number">0</span>)&#123;</span><br><span class="line">                dp[i][j] = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                dp[i][j] = dp[i<span class="number">-1</span>][j]+dp[i][j<span class="number">-1</span>]</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> dp[m<span class="number">-1</span>][n<span class="number">-1</span>];</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h5 id="70爬楼梯-44-5-简单"><a href="#70爬楼梯-44-5-简单" class="headerlink" title="70爬楼梯-44.5%-简单"></a>70爬楼梯-44.5%-简单</h5><p><a href="https://leetcode-cn.com/problems/climbing-stairs/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/climbing-stairs/</a></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @param &#123;number&#125; n</span></span><br><span class="line"><span class="comment"> * @return &#123;number&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> climbStairs = <span class="function"><span class="keyword">function</span>(<span class="params">n</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(n==<span class="number">1</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(n==<span class="number">2</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> i = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">var</span> j = <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> k=<span class="number">0</span>;k&lt;n<span class="number">-2</span>;k++)&#123;</span><br><span class="line">        <span class="keyword">var</span> tmp = i + j;</span><br><span class="line">        i = j;</span><br><span class="line">        j = tmp;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> j;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h5 id="78子集-71-6-中等"><a href="#78子集-71-6-中等" class="headerlink" title="78子集-71.6%-中等"></a>78子集-71.6%-中等</h5><p><a href="https://leetcode-cn.com/problems/subsets/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/subsets/</a></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @param &#123;number[]&#125; nums</span></span><br><span class="line"><span class="comment"> * @return &#123;number[][]&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> subsets = <span class="function"><span class="keyword">function</span>(<span class="params">nums</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> arr = [];</span><br><span class="line">    arr.push([]);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;nums.length;i++)&#123;</span><br><span class="line">        <span class="keyword">var</span> tmp = []; <span class="comment">//tmp深拷贝arr</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">var</span> k=<span class="number">0</span>;k&lt;arr.length;k++)&#123;</span><br><span class="line">            tmp[k] = arr[k].slice(<span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">var</span> j=<span class="number">0</span>;j&lt;tmp.length;j++)&#123;</span><br><span class="line">            tmp[j].push(nums[i]);</span><br><span class="line">            arr.push(tmp[j]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> arr;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h5 id="88合并两个有序数组-43-0-简单"><a href="#88合并两个有序数组-43-0-简单" class="headerlink" title="88合并两个有序数组-43.0%-简单"></a>88合并两个有序数组-43.0%-简单</h5><p><a href="https://leetcode-cn.com/problems/merge-two-sorted-lists/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/merge-two-sorted-lists/</a></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for singly-linked list.</span></span><br><span class="line"><span class="comment"> * function ListNode(val) &#123;</span></span><br><span class="line"><span class="comment"> *     this.val = val;</span></span><br><span class="line"><span class="comment"> *     this.next = null;</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @param &#123;ListNode&#125; l1</span></span><br><span class="line"><span class="comment"> * @param &#123;ListNode&#125; l2</span></span><br><span class="line"><span class="comment"> * @return &#123;ListNode&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> mergeTwoLists = <span class="function"><span class="keyword">function</span>(<span class="params">l1, l2</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> l3 = <span class="keyword">new</span> ListNode(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">var</span> l4 = l3;</span><br><span class="line">    <span class="keyword">while</span>(l1!=<span class="literal">null</span> &amp;&amp; l2!=<span class="literal">null</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(l1.val&lt;l2.val)&#123;</span><br><span class="line">            l4.next = l1;</span><br><span class="line">            l1 = l1.next;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            l4.next = l2;</span><br><span class="line">            l2 = l2.next;</span><br><span class="line">        &#125;</span><br><span class="line">        l4 = l4.next;</span><br><span class="line">    &#125;</span><br><span class="line">    l4.next = l1==<span class="literal">null</span>?l2:l1;</span><br><span class="line">    <span class="keyword">return</span> l3.next;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h5 id="89格雷编码-62-7-中等"><a href="#89格雷编码-62-7-中等" class="headerlink" title="89格雷编码-62.7%-中等"></a>89格雷编码-62.7%-中等</h5><p><a href="https://leetcode-cn.com/problems/gray-code/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/gray-code/</a></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @param &#123;number&#125; n</span></span><br><span class="line"><span class="comment"> * @return &#123;number[]&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">// 000 001 011 010  ——</span></span><br><span class="line"><span class="comment">//                    |</span></span><br><span class="line"><span class="comment">// 100 101 111 110 &lt;——</span></span><br><span class="line"><span class="keyword">var</span> grayCode = <span class="function"><span class="keyword">function</span>(<span class="params">n</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(n == <span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> [<span class="number">0</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> tmp = grayCode(n<span class="number">-1</span>).concat();<span class="comment">//深拷贝</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;tmp.length;i++)&#123;</span><br><span class="line">        tmp[i] += <span class="built_in">Math</span>.pow(<span class="number">2</span>,n<span class="number">-1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    tmp.reverse();</span><br><span class="line">    <span class="keyword">return</span> grayCode(n<span class="number">-1</span>).concat(tmp);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h5 id="104二叉树的最大深度-67-4-简单"><a href="#104二叉树的最大深度-67-4-简单" class="headerlink" title="104二叉树的最大深度-67.4%-简单"></a>104二叉树的最大深度-67.4%-简单</h5><p><a href="https://leetcode-cn.com/problems/maximum-depth-of-binary-tree/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/maximum-depth-of-binary-tree/</a></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for a binary tree node.</span></span><br><span class="line"><span class="comment"> * function TreeNode(val) &#123;</span></span><br><span class="line"><span class="comment"> *     this.val = val;</span></span><br><span class="line"><span class="comment"> *     this.left = this.right = null;</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @param &#123;TreeNode&#125; root</span></span><br><span class="line"><span class="comment"> * @return &#123;number&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> maxDepth = <span class="function"><span class="keyword">function</span>(<span class="params">root</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(root == <span class="literal">null</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> l_height = maxDepth(root.left);</span><br><span class="line">    <span class="keyword">var</span> r_height = maxDepth(root.right);</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">Math</span>.max(l_height,r_height) + <span class="number">1</span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h5 id="121买卖股票的最佳时机-48-5-简单"><a href="#121买卖股票的最佳时机-48-5-简单" class="headerlink" title="121买卖股票的最佳时机-48.5%-简单"></a>121买卖股票的最佳时机-48.5%-简单</h5><p><a href="https://leetcode-cn.com/problems/best-time-to-buy-and-sell-stock/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/best-time-to-buy-and-sell-stock/</a></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @param &#123;number[]&#125; prices</span></span><br><span class="line"><span class="comment"> * @return &#123;number&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> maxProfit = <span class="function"><span class="keyword">function</span>(<span class="params">prices</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> maxtmp = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;prices.length;i++)&#123;  </span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">var</span> j=i+<span class="number">1</span>;j&lt;prices.length;j++)&#123; </span><br><span class="line">            <span class="keyword">if</span>(prices[j]-prices[i]&gt;maxtmp)&#123;</span><br><span class="line">                maxtmp = prices[j]-prices[i];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;   </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> maxtmp;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h5 id="122买卖股票的最佳时机II-51-6-简单"><a href="#122买卖股票的最佳时机II-51-6-简单" class="headerlink" title="122买卖股票的最佳时机II-51.6%-简单"></a>122买卖股票的最佳时机II-51.6%-简单</h5><p><a href="https://leetcode-cn.com/problems/best-time-to-buy-and-sell-stock-ii/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/best-time-to-buy-and-sell-stock-ii/</a></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @param &#123;number[]&#125; prices</span></span><br><span class="line"><span class="comment"> * @return &#123;number&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> maxProfit = <span class="function"><span class="keyword">function</span>(<span class="params">prices</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> maxtmp = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;prices.length<span class="number">-1</span>;i++)&#123;  </span><br><span class="line">        <span class="keyword">if</span> (prices[i]&lt;prices[i+<span class="number">1</span>])&#123;</span><br><span class="line">            maxtmp += prices[i+<span class="number">1</span>]-prices[i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> maxtmp;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h5 id="124二叉树中的最大路径和-33-8-困难"><a href="#124二叉树中的最大路径和-33-8-困难" class="headerlink" title="124二叉树中的最大路径和-33.8%-困难"></a>124二叉树中的最大路径和-33.8%-困难</h5><p><a href="https://leetcode-cn.com/problems/binary-tree-maximum-path-sum/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/binary-tree-maximum-path-sum/</a></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for a binary tree node.</span></span><br><span class="line"><span class="comment"> * function TreeNode(val) &#123;</span></span><br><span class="line"><span class="comment"> *     this.val = val;</span></span><br><span class="line"><span class="comment"> *     this.left = this.right = null;</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @param &#123;TreeNode&#125; root</span></span><br><span class="line"><span class="comment"> * @return &#123;number&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> maxPathSum = <span class="function"><span class="keyword">function</span>(<span class="params">root</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> len = -<span class="built_in">Number</span>.MAX_VALUE;</span><br><span class="line">    submax(root);</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">submax</span>(<span class="params">t</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(t == <span class="literal">null</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">var</span> l = <span class="built_in">Math</span>.max(submax(t.left),<span class="number">0</span>);</span><br><span class="line">        <span class="keyword">var</span> r = <span class="built_in">Math</span>.max(submax(t.right),<span class="number">0</span>);</span><br><span class="line">        <span class="keyword">if</span>(t.val + l + r &gt; len)&#123;</span><br><span class="line">            len = t.val + l + r;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">Math</span>.max(l,r) + t.val;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> len;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h5 id="136只出现一次的数字-59-1-简单"><a href="#136只出现一次的数字-59-1-简单" class="headerlink" title="136只出现一次的数字-59.1%-简单"></a>136只出现一次的数字-59.1%-简单</h5><p><a href="https://leetcode-cn.com/problems/single-number/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/single-number/</a></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @param &#123;number[]&#125; nums</span></span><br><span class="line"><span class="comment"> * @return &#123;number&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> singleNumber = <span class="function"><span class="keyword">function</span>(<span class="params">nums</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 交换律：a ^ b ^ c  &lt;=&gt; a ^ c ^ b,俩两相同的移到一起</span></span><br><span class="line">    <span class="comment">// 相同的数异或为0: n ^ n =&gt; 0,只剩下单个的了</span></span><br><span class="line">    <span class="comment">// 任何数于0异或为任何数 0 ^ n =&gt; n</span></span><br><span class="line">    <span class="keyword">var</span> s = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;nums.length;i++)&#123;</span><br><span class="line">        s = s^nums[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> s;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h5 id="141环形链表-35-5-简单"><a href="#141环形链表-35-5-简单" class="headerlink" title="141环形链表-35.5%-简单"></a>141环形链表-35.5%-简单</h5><p><a href="https://leetcode-cn.com/problems/linked-list-cycle" target="_blank" rel="noopener">https://leetcode-cn.com/problems/linked-list-cycle</a></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for singly-linked list.</span></span><br><span class="line"><span class="comment"> * function ListNode(val) &#123;</span></span><br><span class="line"><span class="comment"> *     this.val = val;</span></span><br><span class="line"><span class="comment"> *     this.next = null;</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @param &#123;ListNode&#125; head</span></span><br><span class="line"><span class="comment"> * @return &#123;boolean&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> hasCycle = <span class="function"><span class="keyword">function</span>(<span class="params">head</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> slow = head, fast = head;</span><br><span class="line">    <span class="keyword">while</span>(fast &amp;&amp; fast.next)&#123;</span><br><span class="line">        slow = slow.next;</span><br><span class="line">        fast = fast.next.next;</span><br><span class="line">        <span class="keyword">if</span>(slow == fast)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h5 id="142环形链表II-34-8-中等"><a href="#142环形链表II-34-8-中等" class="headerlink" title="142环形链表II-34.8%-中等"></a>142环形链表II-34.8%-中等</h5><p><a href="https://leetcode-cn.com/problems/linked-list-cycle-ii/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/linked-list-cycle-ii/</a></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for singly-linked list.</span></span><br><span class="line"><span class="comment"> * function ListNode(val) &#123;</span></span><br><span class="line"><span class="comment"> *     this.val = val;</span></span><br><span class="line"><span class="comment"> *     this.next = null;</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @param &#123;ListNode&#125; head</span></span><br><span class="line"><span class="comment"> * @return &#123;ListNode&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> detectCycle = <span class="function"><span class="keyword">function</span>(<span class="params">head</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> slow = head,fast = head;</span><br><span class="line">    <span class="keyword">var</span> isloop = <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">while</span>(fast &amp;&amp; fast.next)&#123;</span><br><span class="line">        slow  = slow.next;</span><br><span class="line">        fast = fast.next.next;</span><br><span class="line">        <span class="keyword">if</span>(slow == fast)&#123;<span class="comment">//相遇</span></span><br><span class="line">            isloop = <span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(isloop)&#123;</span><br><span class="line">        <span class="keyword">var</span> l  = head;</span><br><span class="line">        <span class="keyword">while</span>(l != slow)&#123;</span><br><span class="line">            l = l.next;</span><br><span class="line">            slow = slow.next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> slow;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h5 id="146LRU缓存机制-39-0-困难"><a href="#146LRU缓存机制-39-0-困难" class="headerlink" title="146LRU缓存机制-39.0%-困难"></a>146LRU缓存机制-39.0%-困难</h5><p><a href="https://leetcode-cn.com/problems/lru-cache/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/lru-cache/</a></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @param &#123;number&#125; capacity</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">1.新加入的数据</span></span><br><span class="line"><span class="comment">            ————&gt; ___ 头 &lt;—————</span></span><br><span class="line"><span class="comment">                  ___          |</span></span><br><span class="line"><span class="comment">                  ___          |2.被访问的数据</span></span><br><span class="line"><span class="comment">                  ___     —————</span></span><br><span class="line"><span class="comment">                  ___</span></span><br><span class="line"><span class="comment">                  ___</span></span><br><span class="line"><span class="comment">            &lt;———— ___ 尾</span></span><br><span class="line"><span class="comment">3.淘汰的数据</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> LRUCache = <span class="function"><span class="keyword">function</span>(<span class="params">capacity</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.size = capacity;</span><br><span class="line">    <span class="keyword">this</span>.map = &#123;&#125;;</span><br><span class="line">    <span class="keyword">this</span>.list = []; </span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** </span></span><br><span class="line"><span class="comment"> * @param &#123;number&#125; key</span></span><br><span class="line"><span class="comment"> * @return &#123;number&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">LRUCache.prototype.get = <span class="function"><span class="keyword">function</span>(<span class="params">key</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">this</span>.map[key] != <span class="literal">null</span>)&#123;</span><br><span class="line">        <span class="keyword">this</span>.list.splice(<span class="keyword">this</span>.list.indexOf(key),<span class="number">1</span>);<span class="comment">//更新list</span></span><br><span class="line">        <span class="keyword">this</span>.list.unshift(key);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.map[key];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** </span></span><br><span class="line"><span class="comment"> * @param &#123;number&#125; key </span></span><br><span class="line"><span class="comment"> * @param &#123;number&#125; value</span></span><br><span class="line"><span class="comment"> * @return &#123;void&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">LRUCache.prototype.put = <span class="function"><span class="keyword">function</span>(<span class="params">key, value</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> tmp = <span class="keyword">this</span>.list.indexOf(key);</span><br><span class="line">    <span class="keyword">if</span>(tmp != <span class="number">-1</span>)&#123; <span class="comment">//key已存在，更新list</span></span><br><span class="line">        <span class="keyword">this</span>.list.splice(tmp,<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123; <span class="comment">//key不存在</span></span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">this</span>.list.length == <span class="keyword">this</span>.size)&#123; <span class="comment">//栈满</span></span><br><span class="line">            <span class="keyword">var</span> d = <span class="keyword">this</span>.list.pop();</span><br><span class="line">            <span class="keyword">this</span>.map[d] = <span class="literal">null</span>;</span><br><span class="line">        &#125;   </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">this</span>.list.unshift(key);</span><br><span class="line">    <span class="keyword">this</span>.map[key] = value;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** </span></span><br><span class="line"><span class="comment"> * Your LRUCache object will be instantiated and called as such:</span></span><br><span class="line"><span class="comment"> * var obj = Object.create(LRUCache).createNew(capacity)</span></span><br><span class="line"><span class="comment"> * var param_1 = obj.get(key)</span></span><br><span class="line"><span class="comment"> * obj.put(key,value)</span></span><br><span class="line"><span class="comment"> */</span></span><br></pre></td></tr></table></figure><h5 id="148排序链表-58-6-中等"><a href="#148排序链表-58-6-中等" class="headerlink" title="148排序链表-58.6%-中等"></a>148排序链表-58.6%-中等</h5><p><a href="https://leetcode-cn.com/problems/sort-list/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/sort-list/</a></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for singly-linked list.</span></span><br><span class="line"><span class="comment"> * function ListNode(val) &#123;</span></span><br><span class="line"><span class="comment"> *     this.val = val;</span></span><br><span class="line"><span class="comment"> *     this.next = null;</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @param &#123;ListNode&#125; head</span></span><br><span class="line"><span class="comment"> * @return &#123;ListNode&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> sortList = <span class="function"><span class="keyword">function</span>(<span class="params">head</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!head || !head.next)&#123;</span><br><span class="line">        <span class="keyword">return</span> head;</span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">var</span> slow = head,bk = head,fast = head;</span><br><span class="line">    <span class="keyword">while</span>(fast &amp;&amp; fast.next )&#123;</span><br><span class="line">        bk = slow;</span><br><span class="line">        slow = slow.next;</span><br><span class="line">        fast = fast.next.next;</span><br><span class="line">    &#125;</span><br><span class="line">    bk.next = <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">var</span> l1 = sortList(head);<span class="comment">//中分，归并</span></span><br><span class="line">    <span class="keyword">var</span> l2 = sortList(slow);</span><br><span class="line">    <span class="keyword">return</span> merge(l1,l2);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">merge</span>(<span class="params">l1,l2</span>)</span>&#123;<span class="comment">//合并有序链表</span></span><br><span class="line">    <span class="keyword">var</span> l = <span class="keyword">new</span> ListNode(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">var</span> rl = l;</span><br><span class="line">    <span class="keyword">while</span>(l1 &amp;&amp; l2)&#123;</span><br><span class="line">        <span class="keyword">if</span>(l1.val &lt; l2.val)&#123;</span><br><span class="line">            rl.next = l1;</span><br><span class="line">            l1 = l1.next;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            rl.next = l2;</span><br><span class="line">            l2 = l2.next;</span><br><span class="line">        &#125;</span><br><span class="line">        rl = rl.next;</span><br><span class="line">    &#125;</span><br><span class="line">    rl.next = l1==<span class="literal">null</span>?l2:l1;</span><br><span class="line">    <span class="keyword">return</span> l.next;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="155最小栈-47-7-简单"><a href="#155最小栈-47-7-简单" class="headerlink" title="155最小栈-47.7%-简单"></a>155最小栈-47.7%-简单</h5><p><a href="https://leetcode-cn.com/problems/min-stack/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/min-stack/</a></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * initialize your data structure here.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> MinStack = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.arr = [];</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** </span></span><br><span class="line"><span class="comment"> * @param &#123;number&#125; x</span></span><br><span class="line"><span class="comment"> * @return &#123;void&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">MinStack.prototype.push = <span class="function"><span class="keyword">function</span>(<span class="params">x</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.arr.push(x);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @return &#123;void&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">MinStack.prototype.pop = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.arr.pop();</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @return &#123;number&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">MinStack.prototype.top = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>.arr[<span class="keyword">this</span>.arr.length<span class="number">-1</span>];</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @return &#123;number&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">MinStack.prototype.getMin = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">Math</span>.min.apply( &#123;&#125;, <span class="keyword">this</span>.arr );</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** </span></span><br><span class="line"><span class="comment"> * Your MinStack object will be instantiated and called as such:</span></span><br><span class="line"><span class="comment"> * var obj = Object.create(MinStack).createNew()</span></span><br><span class="line"><span class="comment"> * obj.push(x)</span></span><br><span class="line"><span class="comment"> * obj.pop()</span></span><br><span class="line"><span class="comment"> * var param_3 = obj.top()</span></span><br><span class="line"><span class="comment"> * var param_4 = obj.getMin()</span></span><br><span class="line"><span class="comment"> */</span></span><br></pre></td></tr></table></figure><h5 id="160相交链表-37-2-简单"><a href="#160相交链表-37-2-简单" class="headerlink" title="160相交链表-37.2%-简单"></a>160相交链表-37.2%-简单</h5><p><a href="https://leetcode-cn.com/problems/intersection-of-two-linked-lists/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/intersection-of-two-linked-lists/</a></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for singly-linked list.</span></span><br><span class="line"><span class="comment"> * function ListNode(val) &#123;</span></span><br><span class="line"><span class="comment"> *     this.val = val;</span></span><br><span class="line"><span class="comment"> *     this.next = null;</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @param &#123;ListNode&#125; headA</span></span><br><span class="line"><span class="comment"> * @param &#123;ListNode&#125; headB</span></span><br><span class="line"><span class="comment"> * @return &#123;ListNode&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> getIntersectionNode = <span class="function"><span class="keyword">function</span>(<span class="params">headA, headB</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(headA == <span class="literal">null</span> || headB == <span class="literal">null</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> pA = headA;</span><br><span class="line">    <span class="keyword">var</span> pB = headB;</span><br><span class="line">    <span class="keyword">while</span>(pA != pB) &#123;</span><br><span class="line">        pA = pA == <span class="literal">null</span> ? headB : pA.next;</span><br><span class="line">        pB = pB == <span class="literal">null</span> ? headA : pB.next;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> pA;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h5 id="169求众数-58-0-简单"><a href="#169求众数-58-0-简单" class="headerlink" title="169求众数-58.0%-简单"></a>169求众数-58.0%-简单</h5><p><a href="https://leetcode-cn.com/problems/majority-element/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/majority-element/</a></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @param &#123;number[]&#125; nums</span></span><br><span class="line"><span class="comment"> * @return &#123;number&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> majorityElement = <span class="function"><span class="keyword">function</span>(<span class="params">nums</span>) </span>&#123;</span><br><span class="line">    nums.sort();</span><br><span class="line">    <span class="keyword">return</span> nums[<span class="built_in">Math</span>.floor(nums.length/<span class="number">2</span>)];</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h5 id="206反转链表-58-6-简单"><a href="#206反转链表-58-6-简单" class="headerlink" title="206反转链表-58.6%-简单"></a>206反转链表-58.6%-简单</h5><p><a href="https://leetcode-cn.com/problems/reverse-linked-list/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/reverse-linked-list/</a></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for singly-linked list.</span></span><br><span class="line"><span class="comment"> * function ListNode(val) &#123;</span></span><br><span class="line"><span class="comment"> *     this.val = val;</span></span><br><span class="line"><span class="comment"> *     this.next = null;</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @param &#123;ListNode&#125; head</span></span><br><span class="line"><span class="comment"> * @return &#123;ListNode&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> reverseList = <span class="function"><span class="keyword">function</span>(<span class="params">head</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> l  = <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">while</span>(head != <span class="literal">null</span>)&#123;</span><br><span class="line">        <span class="keyword">var</span> newl = <span class="keyword">new</span> ListNode(head.val);</span><br><span class="line">        <span class="keyword">var</span> tmp = l;</span><br><span class="line">        l = newl;</span><br><span class="line">        l.next = tmp;</span><br><span class="line">        head = head.next;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> l;   </span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h5 id="215数组中的第K个最大元素-56-6-中等"><a href="#215数组中的第K个最大元素-56-6-中等" class="headerlink" title="215数组中的第K个最大元素-56.6%-中等"></a>215数组中的第K个最大元素-56.6%-中等</h5><p><a href="https://leetcode-cn.com/problems/kth-largest-element-in-an-array/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/kth-largest-element-in-an-array/</a></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @param &#123;number[]&#125; nums</span></span><br><span class="line"><span class="comment"> * @param &#123;number&#125; k</span></span><br><span class="line"><span class="comment"> * @return &#123;number&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> findKthLargest = <span class="function"><span class="keyword">function</span>(<span class="params">nums, k</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> fastkmax(nums,<span class="number">0</span>,nums.length<span class="number">-1</span>,k);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fastkmax</span>(<span class="params">n,l,r,k</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> mid = partiton(n,l,r);<span class="comment">//排序 左边都是比mid小的，右边都是比mid大的</span></span><br><span class="line">    <span class="keyword">var</span> rk = r - mid + <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(rk == k)&#123;</span><br><span class="line">        <span class="keyword">return</span> n[mid];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(rk &gt; k)&#123;</span><br><span class="line">        <span class="keyword">return</span> fastkmax(n,mid + <span class="number">1</span>,r,k);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> fastkmax(n,l,mid - <span class="number">1</span>,k -rk );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">partiton</span>(<span class="params">n,l,r</span>)</span>&#123;<span class="comment">//一次快排</span></span><br><span class="line">    <span class="keyword">var</span> base = n[l];</span><br><span class="line">    <span class="keyword">var</span> i = l,j = r,tmp;</span><br><span class="line">    <span class="keyword">while</span>(i &lt; j)&#123;</span><br><span class="line">        <span class="keyword">while</span>(n[j] &gt;= base &amp;&amp; i &lt; j)&#123;</span><br><span class="line">            j--;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span>(n[i] &lt;= base &amp;&amp; i &lt; j)&#123;</span><br><span class="line">            i++;</span><br><span class="line">        &#125;</span><br><span class="line">            tmp = n[i];</span><br><span class="line">            n[i] = n[j];</span><br><span class="line">            n[j] = tmp;</span><br><span class="line">    &#125;</span><br><span class="line">    n[l] = n[i];</span><br><span class="line">    n[i] = base;</span><br><span class="line">    <span class="keyword">return</span> i;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h5 id="217存在重复元素-47-0-简单"><a href="#217存在重复元素-47-0-简单" class="headerlink" title="217存在重复元素-47.0%-简单"></a>217存在重复元素-47.0%-简单</h5><p><a href="https://leetcode-cn.com/problems/contains-duplicate/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/contains-duplicate/</a></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @param &#123;number[]&#125; nums</span></span><br><span class="line"><span class="comment"> * @return &#123;boolean&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> containsDuplicate = <span class="function"><span class="keyword">function</span>(<span class="params">nums</span>) </span>&#123;</span><br><span class="line">    nums.sort();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;nums.length<span class="number">-1</span>;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(nums[i]==nums[i+<span class="number">1</span>])&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h5 id="230二叉搜索树中第K小的元素-62-0-中等"><a href="#230二叉搜索树中第K小的元素-62-0-中等" class="headerlink" title="230二叉搜索树中第K小的元素-62.0%-中等"></a>230二叉搜索树中第K小的元素-62.0%-中等</h5><p><a href="https://leetcode-cn.com/problems/kth-smallest-element-in-a-bst/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/kth-smallest-element-in-a-bst/</a></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for a binary tree node.</span></span><br><span class="line"><span class="comment"> * function TreeNode(val) &#123;</span></span><br><span class="line"><span class="comment"> *     this.val = val;</span></span><br><span class="line"><span class="comment"> *     this.left = this.right = null;</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @param &#123;TreeNode&#125; root</span></span><br><span class="line"><span class="comment"> * @param &#123;number&#125; k</span></span><br><span class="line"><span class="comment"> * @return &#123;number&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> kthSmallest = <span class="function"><span class="keyword">function</span>(<span class="params">root, k</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> list = [];</span><br><span class="line">    order(root,list);</span><br><span class="line">    <span class="keyword">return</span> list[k<span class="number">-1</span>];</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">order</span>(<span class="params">root,list</span>)</span>&#123;<span class="comment">//中序遍历</span></span><br><span class="line">    <span class="keyword">if</span>(!root)&#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    order(root.left,list);</span><br><span class="line">    list.push(root.val);</span><br><span class="line">    order(root.right,list);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="231-2的幂-44-3-简单"><a href="#231-2的幂-44-3-简单" class="headerlink" title="231 2的幂-44.3%-简单"></a>231 2的幂-44.3%-简单</h5><p><a href="https://leetcode-cn.com/problems/power-of-two/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/power-of-two/</a></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @param &#123;number&#125; n</span></span><br><span class="line"><span class="comment"> * @return &#123;boolean&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> isPowerOfTwo = <span class="function"><span class="keyword">function</span>(<span class="params">n</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(n == <span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(n == <span class="number">1</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> n%<span class="number">2</span>==<span class="number">0</span>?isPowerOfTwo(n/<span class="number">2</span>):<span class="literal">false</span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h5 id="235二叉搜索树的最近公共祖先-56-9-简单"><a href="#235二叉搜索树的最近公共祖先-56-9-简单" class="headerlink" title="235二叉搜索树的最近公共祖先-56.9%-简单"></a>235二叉搜索树的最近公共祖先-56.9%-简单</h5><p><a href="https://leetcode-cn.com/problems/lowest-common-ancestor-of-a-binary-search-tree/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/lowest-common-ancestor-of-a-binary-search-tree/</a></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for a binary tree node.</span></span><br><span class="line"><span class="comment"> * function TreeNode(val) &#123;</span></span><br><span class="line"><span class="comment"> *     this.val = val;</span></span><br><span class="line"><span class="comment"> *     this.left = this.right = null;</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @param &#123;TreeNode&#125; root</span></span><br><span class="line"><span class="comment"> * @param &#123;TreeNode&#125; p</span></span><br><span class="line"><span class="comment"> * @param &#123;TreeNode&#125; q</span></span><br><span class="line"><span class="comment"> * @return &#123;TreeNode&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> lowestCommonAncestor = <span class="function"><span class="keyword">function</span>(<span class="params">root, p, q</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 二叉搜索树(二叉排序树):若它的左子树不空，则左子树上所有结点的值均小于它的根结点的值;</span></span><br><span class="line">    <span class="keyword">var</span> res = <span class="literal">null</span>;</span><br><span class="line">    lca(root, p , q);</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">lca</span>(<span class="params">root, p, q</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>((root.val - p.val)*(root.val - q.val) &lt;= <span class="number">0</span>)&#123; <span class="comment">//root为p、q根节点</span></span><br><span class="line">            res = root;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(root.val &lt; p.val &amp;&amp; root.val &lt; q.val)&#123; <span class="comment">//都在右子树</span></span><br><span class="line">            lca(root.right, p , q);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            lca(root.left, p , q);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h5 id="236二叉树的最近公共祖先-50-4-中等"><a href="#236二叉树的最近公共祖先-50-4-中等" class="headerlink" title="236二叉树的最近公共祖先-50.4%-中等"></a>236二叉树的最近公共祖先-50.4%-中等</h5><p><a href="https://leetcode-cn.com/problems/lowest-common-ancestor-of-a-binary-tree/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/lowest-common-ancestor-of-a-binary-tree/</a></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for a binary tree node.</span></span><br><span class="line"><span class="comment"> * function TreeNode(val) &#123;</span></span><br><span class="line"><span class="comment"> *     this.val = val;</span></span><br><span class="line"><span class="comment"> *     this.left = this.right = null;</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @param &#123;TreeNode&#125; root</span></span><br><span class="line"><span class="comment"> * @param &#123;TreeNode&#125; p</span></span><br><span class="line"><span class="comment"> * @param &#123;TreeNode&#125; q</span></span><br><span class="line"><span class="comment"> * @return &#123;TreeNode&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> lowestCommonAncestor = <span class="function"><span class="keyword">function</span>(<span class="params">root, p, q</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(!root)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(root == p || root == q)&#123;</span><br><span class="line">        <span class="keyword">return</span> root;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> l = lowestCommonAncestor(root.left,p,q)<span class="comment">//左支存在一个的位置</span></span><br><span class="line">    <span class="keyword">var</span> r = lowestCommonAncestor(root.right,p,q)</span><br><span class="line">    <span class="keyword">if</span>(l &amp;&amp; r)&#123;<span class="comment">//左支有一个，右支有一个</span></span><br><span class="line">        <span class="keyword">return</span> root;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(l)&#123;<span class="comment">//右没有，都在左，先找到的即为根节点</span></span><br><span class="line">        <span class="keyword">return</span> l;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(r)&#123;</span><br><span class="line">        <span class="keyword">return</span> r;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h5 id="237删除链表中的节点-69-4-简单"><a href="#237删除链表中的节点-69-4-简单" class="headerlink" title="237删除链表中的节点-69.4%-简单"></a>237删除链表中的节点-69.4%-简单</h5><p><a href="https://leetcode-cn.com/problems/delete-node-in-a-linked-list/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/delete-node-in-a-linked-list/</a></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for singly-linked list.</span></span><br><span class="line"><span class="comment"> * function ListNode(val) &#123;</span></span><br><span class="line"><span class="comment"> *     this.val = val;</span></span><br><span class="line"><span class="comment"> *     this.next = null;</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @param &#123;ListNode&#125; node</span></span><br><span class="line"><span class="comment"> * @return &#123;void&#125; Do not return anything, modify node in-place instead.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> deleteNode = <span class="function"><span class="keyword">function</span>(<span class="params">node</span>) </span>&#123;</span><br><span class="line">    node.val = node.next.val;</span><br><span class="line">    node.next = node.next.next;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h5 id="238除自身以外数组的乘积-58-8-中等"><a href="#238除自身以外数组的乘积-58-8-中等" class="headerlink" title="238除自身以外数组的乘积-58.8%-中等"></a>238除自身以外数组的乘积-58.8%-中等</h5><p><a href="https://leetcode-cn.com/problems/product-of-array-except-self/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/product-of-array-except-self/</a></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @param &#123;number[]&#125; nums</span></span><br><span class="line"><span class="comment"> * @return &#123;number[]&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> productExceptSelf = <span class="function"><span class="keyword">function</span>(<span class="params">nums</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> arr = [];</span><br><span class="line">    <span class="keyword">var</span> l = <span class="number">1</span>, r = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;nums.length;i++)&#123;<span class="comment">//arr[i] i左边数乘积</span></span><br><span class="line">        arr[i] = l;</span><br><span class="line">        l *= nums[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> j=nums.length<span class="number">-1</span>;j&gt;=<span class="number">0</span>;j--)&#123;</span><br><span class="line">        arr[j] *= r;</span><br><span class="line">        r *= nums[j];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> arr;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h5 id="292Nim游戏-66-4-简单"><a href="#292Nim游戏-66-4-简单" class="headerlink" title="292Nim游戏-66.4%-简单"></a>292Nim游戏-66.4%-简单</h5><p><a href="https://leetcode-cn.com/problems/nim-game/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/nim-game/</a></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @param &#123;number&#125; n</span></span><br><span class="line"><span class="comment"> * @return &#123;boolean&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> canWinNim = <span class="function"><span class="keyword">function</span>(<span class="params">n</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> n%<span class="number">4</span> == <span class="number">0</span>?<span class="literal">false</span>:<span class="literal">true</span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h5 id="344反转字符串-65-1-简单"><a href="#344反转字符串-65-1-简单" class="headerlink" title="344反转字符串-65.1%-简单"></a>344反转字符串-65.1%-简单</h5><p><a href="https://leetcode-cn.com/problems/reverse-string/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/reverse-string/</a></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @param &#123;character[]&#125; s</span></span><br><span class="line"><span class="comment"> * @return &#123;void&#125; Do not return anything, modify s in-place instead.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> reverseString = <span class="function"><span class="keyword">function</span>(<span class="params">s</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">1</span>;i&lt;s.length;i++)&#123;</span><br><span class="line">        <span class="keyword">var</span> tmp = s.splice(i,<span class="number">1</span>)[<span class="number">0</span>];</span><br><span class="line">        s.unshift(tmp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h5 id="557反转字符串中的单词III-63-5-简单"><a href="#557反转字符串中的单词III-63-5-简单" class="headerlink" title="557反转字符串中的单词III-63.5%-简单"></a>557反转字符串中的单词III-63.5%-简单</h5><p><a href="https://leetcode-cn.com/problems/reverse-words-in-a-string-iii/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/reverse-words-in-a-string-iii/</a></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @param &#123;string&#125; s</span></span><br><span class="line"><span class="comment"> * @return &#123;string&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> reverseWords = <span class="function"><span class="keyword">function</span>(<span class="params">s</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> arr = s.split(<span class="string">" "</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;arr.length;i++)&#123;</span><br><span class="line">        arr[i] = arr[i].split(<span class="string">""</span>).reverse().join(<span class="string">""</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> arr.join(<span class="string">" "</span>);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;题目来源&quot;&gt;&lt;a href=&quot;#题目来源&quot; class=&quot;headerlink&quot; title=&quot;题目来源&quot;&gt;&lt;/a&gt;题目来源&lt;/h3&gt;&lt;p&gt; &lt;a href=&quot;https://leetcode-cn.com/problemset/50/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;腾讯精选练习（50 题）&lt;/a&gt;&lt;br&gt;信息更新时间：2019-3-11，因为要准备面前端，就用js做了遍来熟悉JavaScript这门语言，50道题均已提交通过。&lt;/p&gt;
    
    </summary>
    
      <category term="算法" scheme="http://yoursite.com/categories/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="leetcode" scheme="http://yoursite.com/tags/leetcode/"/>
    
      <category term="JavaScript" scheme="http://yoursite.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>setTimeout、Promise、Async/Await 异步机制 事件循环</title>
    <link href="http://yoursite.com/2019/02/22/12/"/>
    <id>http://yoursite.com/2019/02/22/12/</id>
    <published>2019-02-22T12:48:32.000Z</published>
    <updated>2019-06-21T02:59:38.936Z</updated>
    
    <content type="html"><![CDATA[<p><strong>javascript是一门单线程语言</strong> </p><p>将任务分为两类：</p><ul><li>同步任务</li><li>异步任务</li></ul><p>打开网站时，网页的渲染过程就是一大堆同步任务，比如页面骨架和页面元素的渲染。而像加载图片音乐之类占用资源大耗时久的任务，就是异步任务。</p><a id="more"></a><p>同步的进入<strong>主线程</strong>，异步的进入<strong>Event Table并注册函数</strong>。当指定的事情完成时，Event Table会将这个函数移入Event Queue。主线程内的任务执行完毕为空，会去Event Queue读取对应的函数，进入主线程执行。上述过程会不断重复，也就是常说的Event Loop(事件循环)。<br><img src="https://img-blog.csdnimg.cn/20190222200045901.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ZmY2pqaHY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>js引擎存在monitoring process进程，会持续不断的检查主线程执行栈是否为空，一旦为空，就会去Event Queue那里检查是否有等待被调用的函数。</p><p>举些例子：</p><h5 id="1、setTimeout"><a href="#1、setTimeout" class="headerlink" title="1、setTimeout"></a>1、setTimeout</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="string">'script start'</span>)<span class="comment">//1. 打印 script start</span></span><br><span class="line">setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'settimeout'</span>)<span class="comment">// 3. 打印 settimeout</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'script end'</span>)<span class="comment">//2. 打印 script start</span></span><br></pre></td></tr></table></figure><p> 输出顺序：script start-&gt;script end-&gt;settimeout</p><h5 id="2、Promise"><a href="#2、Promise" class="headerlink" title="2、Promise"></a>2、Promise</h5><p>Promise本身是同步的立即执行函数， 当在executor中执行resolve或者reject的时候, 此时是异步操作， 会先执行then/catch等，当主栈完成后，才会去调用resolve/reject中存放的方法执行，打印p的时候，是打印的返回结果，一个Promise实例。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="string">'script start'</span>)  <span class="comment">//1. 打印 script start</span></span><br><span class="line"><span class="keyword">let</span> promise1 = <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="keyword">function</span> (<span class="params">resolve</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'promise1'</span>)  <span class="comment">//2. 打印 promise1</span></span><br><span class="line">    resolve()</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'promise1 end'</span>)  <span class="comment">//3. 打印 promise1 end</span></span><br><span class="line">&#125;).then(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'promise2'</span>)  <span class="comment">//5. 打印 promise2</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'script end'</span>)  <span class="comment">//4. 打印 script end</span></span><br></pre></td></tr></table></figure><p>// 输出顺序: script start-&gt;promise1-&gt;promise1 end-&gt;script end-&gt;promise2-&gt;settimeout</p><h5 id="3、async-await"><a href="#3、async-await" class="headerlink" title="3、async await"></a>3、async await</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">async1</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">   <span class="built_in">console</span>.log(<span class="string">'async1 start'</span>);  <span class="comment">//2. 打印 async1 start</span></span><br><span class="line">   <span class="keyword">await</span> async2();</span><br><span class="line">   <span class="built_in">console</span>.log(<span class="string">'async1 end'</span>)  <span class="comment">//5. 打印 async1 end</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">async2</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">   <span class="built_in">console</span>.log(<span class="string">'async2'</span>)  <span class="comment">//3. 打印 async2</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'script start'</span>);  <span class="comment">//1. 打印 script start</span></span><br><span class="line">async1();</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'script end'</span>)  <span class="comment">//4. 打印 script end</span></span><br></pre></td></tr></table></figure><p>// 输出顺序：script start-&gt;async1 start-&gt;async2-&gt;script end-&gt;async1 end</p><h2 id="同时有setTimeout、Promise、Async-Await-，执行顺序又是什么？引入"><a href="#同时有setTimeout、Promise、Async-Await-，执行顺序又是什么？引入" class="headerlink" title="同时有setTimeout、Promise、Async/Await ，执行顺序又是什么？引入"></a>同时有setTimeout、Promise、Async/Await ，执行顺序又是什么？引入</h2><ul><li>macro-task(宏任务)：包括整体代码script，setTimeout，setInterval</li><li>micro-task(微任务)：Promise，process.nextTick</li></ul><p>进入整体代码(宏任务)后，开始第一次循环。接着执行所有的微任务。然后再次从宏任务开始，找到其中一个任务队列执行完毕，再执行所有的微任务。<br><img src="https://img-blog.csdnimg.cn/20190222202120577.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ZmY2pqaHY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'setTimeout'</span>);  <span class="comment">//4. 打印 setTimeout</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="keyword">function</span>(<span class="params">resolve</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'promise'</span>);  <span class="comment">//1. 打印 promise</span></span><br><span class="line">&#125;).then(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'then'</span>);  <span class="comment">//3. 打印 then</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'console'</span>);  <span class="comment">//2. 打印 console</span></span><br></pre></td></tr></table></figure><p>// 输出顺序：promise-&gt;console-&gt;then-&gt;setTimeout</p><ul><li>先遇到setTimeout，那么将其回调函数注册后分发到宏任务Event Queue。</li><li>接下来遇到了Promise，new Promise立即执行，then函数分发到微任务Event Queue。</li><li>遇到console.log()，立即执行。</li><li>整体代码script作为第一个宏任务执行结束，发现了then在微任务Event Queue里面，执行。</li><li>第一轮事件循环结束了，从宏任务Event Queue开始第二轮循环。发现了宏任务EventQueue中setTimeout对应的回调函数，立即执行。</li><li>结束。</li></ul><p>再来分析两个案例：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="string">'1'</span>);  <span class="comment">//1. 打印 1</span></span><br><span class="line"> </span><br><span class="line">setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'2'</span>);  <span class="comment">//5. 打印 2</span></span><br><span class="line">    process.nextTick(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'3'</span>);  <span class="comment">//7. 打印 3</span></span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="keyword">function</span>(<span class="params">resolve</span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'4'</span>);  <span class="comment">//6. 打印 4</span></span><br><span class="line">        resolve();</span><br><span class="line">    &#125;).then(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'5'</span>)  <span class="comment">//8. 打印 5</span></span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">process.nextTick(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'6'</span>);  <span class="comment">//3. 打印 6</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="keyword">function</span>(<span class="params">resolve</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'7'</span>);  <span class="comment">//2. 打印 7</span></span><br><span class="line">    resolve();</span><br><span class="line">&#125;).then(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'8'</span>)  <span class="comment">//4. 打印 8</span></span><br><span class="line">&#125;)</span><br><span class="line"> </span><br><span class="line">setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'9'</span>);  <span class="comment">//9. 打印 9</span></span><br><span class="line">    process.nextTick(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'10'</span>);  <span class="comment">//11. 打印 10</span></span><br><span class="line">    &#125;)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="keyword">function</span>(<span class="params">resolve</span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'11'</span>);  <span class="comment">//10. 打印 11</span></span><br><span class="line">        resolve(); </span><br><span class="line">    &#125;).then(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'12'</span>)  <span class="comment">//12. 打印 12</span></span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>// 输出顺序：1，7，6，8，2，4，3，5，9，11，10，12</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">async1</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'async1 start'</span>)  <span class="comment">//2. 打印 async1 start</span></span><br><span class="line">    <span class="keyword">await</span> async2()</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'async1 end'</span>)  <span class="comment">//7. 打印 async1 end</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">async2</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'async2'</span>)  <span class="comment">//3. 打印 async2</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'script start'</span>)  <span class="comment">//1. 打印 script start</span></span><br><span class="line">setTimeout(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'settimeout'</span>)  <span class="comment">//8. 打印 settimeout</span></span><br><span class="line">&#125;)</span><br><span class="line">async1()</span><br><span class="line"><span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="keyword">function</span> (<span class="params">resolve</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'promise1'</span>)  <span class="comment">//4. 打印 promise1</span></span><br><span class="line">    resolve()</span><br><span class="line">&#125;).then(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'promise2'</span>)  <span class="comment">//6. 打印 promise2</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'script end'</span>)  <span class="comment">//5. 打印 script end</span></span><br></pre></td></tr></table></figure><p>// 输出顺序：script start-&gt;async1 start-&gt;async2-&gt;promise1-&gt;script end-&gt;promise2-&gt;async1 end-&gt;settimeout</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;javascript是一门单线程语言&lt;/strong&gt; &lt;/p&gt;
&lt;p&gt;将任务分为两类：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;同步任务&lt;/li&gt;
&lt;li&gt;异步任务&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;打开网站时，网页的渲染过程就是一大堆同步任务，比如页面骨架和页面元素的渲染。而像加载图片音乐之类占用资源大耗时久的任务，就是异步任务。&lt;/p&gt;
    
    </summary>
    
      <category term="前端" scheme="http://yoursite.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="js" scheme="http://yoursite.com/tags/js/"/>
    
      <category term="Promise" scheme="http://yoursite.com/tags/Promise/"/>
    
      <category term="异步机制" scheme="http://yoursite.com/tags/%E5%BC%82%E6%AD%A5%E6%9C%BA%E5%88%B6/"/>
    
      <category term="事件循环" scheme="http://yoursite.com/tags/%E4%BA%8B%E4%BB%B6%E5%BE%AA%E7%8E%AF/"/>
    
  </entry>
  
  <entry>
    <title>Three.js+tween.js 基础(一)</title>
    <link href="http://yoursite.com/2019/01/26/20/"/>
    <id>http://yoursite.com/2019/01/26/20/</id>
    <published>2019-01-26T03:08:36.000Z</published>
    <updated>2019-06-21T03:14:41.267Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Three-js"><a href="#Three-js" class="headerlink" title="Three.js"></a>Three.js</h3><h4 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h4><p>Three.js是众多WebGL三维引擎框架其中之一，源自github的一个开源项目,项目地址：<a href="https://github.com/mrdoob/three.js" target="_blank" rel="noopener">https://github.com/mrdoob/three.js</a> 。可以利用three.js进行网页上的三维场景（机械、建筑、游戏等）创建，能写出在浏览器上流畅运行的3D程序。如果没有前端基础，最好预先学习一点HTML/JavaScript方面的知识。</p><a id="more"></a><p>官方文档：<a href="https://threejs.org/docs/index.html#manual/en/introduction/Creating-a-scene" target="_blank" rel="noopener">https://threejs.org/docs/index.html#manual/en/introduction/Creating-a-scene</a></p><h4 id="一、基本概念篇：第一个three-js三维场景"><a href="#一、基本概念篇：第一个three-js三维场景" class="headerlink" title="一、基本概念篇：第一个three.js三维场景"></a>一、基本概念篇：第一个three.js三维场景</h4><p>在Three.js中，要渲染物体到网页中，需要3个基本对象： </p><ul><li>场景（scene）</li><li>相机（camera）</li><li>渲染器（renderer）</li></ul><p>场景对应于整个布景空间，相机是拍摄镜头，渲染器用来把拍摄好的场景转换成胶卷。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> scene = <span class="keyword">new</span> THREE.Scene();</span><br><span class="line"><span class="keyword">var</span> camera = <span class="keyword">new</span> THREE.PerspectiveCamera( <span class="number">75</span>, <span class="built_in">window</span>.innerWidth / <span class="built_in">window</span>.innerHeight, <span class="number">0.1</span>, <span class="number">1000</span> );</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> renderer = <span class="keyword">new</span> THREE.WebGLRenderer();</span><br><span class="line">renderer.setSize( <span class="built_in">window</span>.innerWidth, <span class="built_in">window</span>.innerHeight );</span><br><span class="line"><span class="built_in">document</span>.body.appendChild( renderer.domElement );</span><br></pre></td></tr></table></figure><h5 id="1、场景（scene）"><a href="#1、场景（scene）" class="headerlink" title="1、场景（scene）"></a>1、场景（scene）</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">var scene = new THREE.Scene();</span><br></pre></td></tr></table></figure><p>场景对应于整个布景空间，在Threejs中场景就只有一种，用THREE.Scene来表示。</p><h5 id="2、相机（camera）"><a href="#2、相机（camera）" class="headerlink" title="2、相机（camera）"></a>2、相机（camera）</h5><p>在Threejs中最常用的相机有两种</p><ul><li>正投影相机THREE.OrthographicCamera</li><li>透视投影相机THREE.PerspectiveCamera</li></ul><p><img src="http://www.hewebgl.com/attached/image/20130530/20130530145454_509.png" alt="在这里插入图片描述"><br>(1) 正投影相机THREE.OrthographicCamera</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> camera = <span class="keyword">new</span> THREE.OrthographicCamera( width / - <span class="number">2</span>, width / <span class="number">2</span>, height / <span class="number">2</span>, height / - <span class="number">2</span>, <span class="number">1</span>, <span class="number">1000</span> );</span><br><span class="line">scene.add( camera );</span><br></pre></td></tr></table></figure><p>函数构造：OrthographicCamera( left : Number, right : Number, top : Number, bottom : Number, near : Number, far : Number )<br>参考：<a href="https://threejs.org/docs/index.html#api/zh/cameras/OrthographicCamera" target="_blank" rel="noopener">https://threejs.org/docs/index.html#api/zh/cameras/OrthographicCamera</a></p><p>正交投影相机示意图如下：<br><img src="http://techbrood.com/threejs/docs/images/ortho.jpg" alt="在这里插入图片描述"><br>(2) 透视投影相机THREE.PerspectiveCamera</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> camera = <span class="keyword">new</span> THREE.PerspectiveCamera( <span class="number">45</span>, width / height, <span class="number">1</span>, <span class="number">1000</span> );</span><br><span class="line">scene.add( camera );</span><br></pre></td></tr></table></figure><p>函数构造：PerspectiveCamera( fov : Number, aspect : Number, near : Number, far : Number )<br>参考：<a href="https://threejs.org/docs/index.html#api/zh/cameras/PerspectiveCamera" target="_blank" rel="noopener">https://threejs.org/docs/index.html#api/zh/cameras/PerspectiveCamera</a></p><p>透视投影相机示意图如下：<br><img src="http://techbrood.com/ueditor/php/upload/image/20160525/1464141326848754.png" alt="在这里插入图片描述"></p><h5 id="3、-渲染器（renderer）"><a href="#3、-渲染器（renderer）" class="headerlink" title="3、 渲染器（renderer）"></a>3、 渲染器（renderer）</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> renderer = <span class="keyword">new</span> THREE.WebGLRenderer();</span><br><span class="line">renderer.setSize( <span class="built_in">window</span>.innerWidth, <span class="built_in">window</span>.innerHeight );</span><br><span class="line"><span class="built_in">document</span>.body.appendChild( renderer.domElement );</span><br></pre></td></tr></table></figure><p>除了创建renderer实例，还需要设置渲染空间的尺寸，一般使用目标屏幕的宽高（window.innerWidth和window.innerHeight），也可以给定一个尺寸。<br>渲染器renderer的domElement元素，表示渲染器中的画布，所有的渲染都是画在domElement上的，所以这里的appendChild表示将这个domElement挂接在body下面，这样渲染的结果就能够在页面中显示了。</p><h5 id="4、-添加对象"><a href="#4、-添加对象" class="headerlink" title="4、 添加对象"></a>4、 添加对象</h5><p>现在的场景中是空的，我们向场景中加入最简单的立方体。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> geometry = <span class="keyword">new</span> THREE.BoxGeometry( <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span> ); </span><br><span class="line"><span class="keyword">var</span> material= <span class="keyword">new</span> THREE.MeshBasicMaterial( &#123; <span class="attr">color</span>: <span class="number">0x4ca7c1</span> &#125; ); </span><br><span class="line"><span class="keyword">var</span> cube = <span class="keyword">new</span> THREE.Mesh( geometry, material ); </span><br><span class="line">scene.add( cube );</span><br><span class="line"></span><br><span class="line">camera.position.z = <span class="number">5</span>;</span><br></pre></td></tr></table></figure><p>创建几何体，创建材质，利用几何体和材质创建对象，将对象加入场景scene中。<br>默认情况下，当我们调用scene.add()的时候，物体将会被添加到坐标为(0,0,0)的位置。但这可能会使得摄像机的位置和立方体相互重叠（摄像机位于立方体中）。为了防止这种情况的发生，需要将摄像机稍微向外移动一些。</p><h5 id="5、-渲染场景"><a href="#5、-渲染场景" class="headerlink" title="5、 渲染场景"></a>5、 渲染场景</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">animate</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">requestAnimationFrame( animate );</span><br><span class="line">renderer.render( scene, camera );</span><br><span class="line">&#125;</span><br><span class="line">animate();</span><br></pre></td></tr></table></figure><p>在这里我们创建了一个循环——这使得渲染器能够在每次屏幕刷新时对场景进行绘制（在大多数屏幕上，刷新率一般是60次/秒）。<br>requestAnimationFrame函数就是让浏览器去执行一次参数中的函数，这样通过上面render中调用requestAnimationFrame()函数，requestAnimationFrame()函数又让rander()再执行一次，就形成了我们通常所说的游戏循环了。</p><h5 id="6、使立方体动起来"><a href="#6、使立方体动起来" class="headerlink" title="6、使立方体动起来"></a>6、使立方体动起来</h5><p>在animate()函数中添加</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cube.rotation.x += <span class="number">0.01</span>;</span><br><span class="line">cube.rotation.y += <span class="number">0.01</span>;</span><br></pre></td></tr></table></figure><p>这一段代码将在每一帧时被渲染时调用（正常情况下是60次/秒），这就让立方体有了一个看起来很不错的旋转动画。<br>除了改变立方体的旋转角度、位置，也可以通过改变相机位置角度达到同样动起来的效果。</p><h6 id="完整代码（附详细备注）"><a href="#完整代码（附详细备注）" class="headerlink" title="完整代码（附详细备注）"></a>完整代码（附详细备注）</h6><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;title&gt;My first three.js app&lt;<span class="regexp">/title&gt;</span></span><br><span class="line"><span class="regexp">&lt;style&gt;</span></span><br><span class="line"><span class="regexp">body &#123; margin: 0; &#125;</span></span><br><span class="line"><span class="regexp">canvas &#123; width: 100%; height: 100% &#125;</span></span><br><span class="line"><span class="regexp">&lt;/</span>style&gt;</span><br><span class="line">&lt;<span class="regexp">/head&gt;</span></span><br><span class="line"><span class="regexp">&lt;body&gt;</span></span><br><span class="line"><span class="regexp">&lt;script src="build/</span>three.js<span class="string">"&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="string">&lt;script&gt;</span></span><br><span class="line"><span class="string">    // 场景（scene）</span></span><br><span class="line"><span class="string">var scene = new THREE.Scene();</span></span><br><span class="line"><span class="string">// 相机（camera）</span></span><br><span class="line"><span class="string">var camera = new THREE.PerspectiveCamera( 75, window.innerWidth/window.innerHeight, 0.1, 1000 );</span></span><br><span class="line"><span class="string">// 渲染器（renderer）</span></span><br><span class="line"><span class="string">var renderer = new THREE.WebGLRenderer(); // 创建renderer实例</span></span><br><span class="line"><span class="string">renderer.setSize( window.innerWidth, window.innerHeight ); // 设置渲染空间的尺寸</span></span><br><span class="line"><span class="string">document.body.appendChild( renderer.domElement ); // 渲染出的画布加入页面</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">// 添加对象</span></span><br><span class="line"><span class="string">var geometry = new THREE.BoxGeometry( 1, 1, 1 ); // 创建几何体</span></span><br><span class="line"><span class="string">var material = new THREE.MeshBasicMaterial( &#123; color: 0x4ca7c1 &#125; ); //创建材质</span></span><br><span class="line"><span class="string">var cube = new THREE.Mesh( geometry, material ); // 用几何体和材质创建对象</span></span><br><span class="line"><span class="string">scene.add( cube ); // 对象加入场景scene中</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">camera.position.z = 5;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">// 渲染场景</span></span><br><span class="line"><span class="string">var animate = function () &#123;</span></span><br><span class="line"><span class="string">requestAnimationFrame( animate );</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">cube.rotation.x += 0.01;</span></span><br><span class="line"><span class="string">cube.rotation.y += 0.01;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">renderer.render( scene, camera );</span></span><br><span class="line"><span class="string">&#125;;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">animate();</span></span><br><span class="line"><span class="string">&lt;/script&gt;</span></span><br><span class="line"><span class="string">&lt;/body&gt;</span></span><br><span class="line"><span class="string">&lt;/html&gt;</span></span><br></pre></td></tr></table></figure><p>在浏览器中的效果：<br><img src="https://img-blog.csdnimg.cn/20190125173638101.gif" alt="在这里插入图片描述"></p><h4 id="二、实际应用篇：跳一跳（You-Jump-I-Jump）"><a href="#二、实际应用篇：跳一跳（You-Jump-I-Jump）" class="headerlink" title="二、实际应用篇：跳一跳（You_Jump_I_Jump）"></a>二、实际应用篇：跳一跳（You_Jump_I_Jump）</h4><p>有了基本概念后，我们来一步步实现跳一跳的代码复原，GitHub地址：<a href="https://github.com/zj19941113/You_Jump_I_Jump" target="_blank" rel="noopener">https://github.com/zj19941113/You_Jump_I_Jump</a><br>最终效果图：<br><img src="https://img-blog.csdnimg.cn/20190125181809956.gif" alt="在这里插入图片描述"></p><h5 id="1、创建场景与第一个盒子"><a href="#1、创建场景与第一个盒子" class="headerlink" title="1、创建场景与第一个盒子"></a>1、创建场景与第一个盒子</h5><h6 id="（1）基本元素"><a href="#（1）基本元素" class="headerlink" title="（1）基本元素"></a>（1）基本元素</h6><p>场景：设置背景颜色</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">scene = <span class="keyword">new</span> THREE.Scene();</span><br><span class="line">scene.background = <span class="keyword">new</span> THREE.Color( <span class="number">0x8797a4</span> );</span><br></pre></td></tr></table></figure><p>渲染器：渲染空间尺寸设置为屏幕的宽高</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">renderer = <span class="keyword">new</span> THREE.WebGLRenderer(&#123; <span class="attr">antialias</span>: <span class="literal">true</span> &#125; );</span><br><span class="line">renderer.setSize( <span class="built_in">window</span>.innerWidth, <span class="built_in">window</span>.innerHeight );</span><br><span class="line"><span class="built_in">document</span>.body.appendChild( renderer.domElement );</span><br></pre></td></tr></table></figure><p>相机：选择正交投影相机，设置相机位置与朝向</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">camera = <span class="keyword">new</span> THREE.OrthographicCamera( <span class="built_in">window</span>.innerWidth / - <span class="number">2</span>, <span class="built_in">window</span>.innerWidth / <span class="number">2</span>, <span class="built_in">window</span>.innerHeight / <span class="number">2</span>, <span class="built_in">window</span>.innerHeight / - <span class="number">2</span>, <span class="number">-1000</span>, <span class="number">2000</span> );</span><br><span class="line">camera.position.set( <span class="number">200</span> , <span class="number">180</span> , <span class="number">200</span> );</span><br><span class="line">camera.lookAt(<span class="keyword">new</span> THREE.Vector3(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>));</span><br></pre></td></tr></table></figure><p>光源：添加平行光与环境光，平行光让几何体更层次分明，环境光提升整体亮度</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">light = <span class="keyword">new</span> THREE.AmbientLight( <span class="number">0xFFFFFF</span>,<span class="number">0.4</span> );</span><br><span class="line">scene.add( light );</span><br><span class="line"></span><br><span class="line">light2 = <span class="keyword">new</span> THREE.DirectionalLight(<span class="number">0xFFFFFF</span>,<span class="number">1</span>);</span><br><span class="line">light2.position.set(<span class="number">3</span>,<span class="number">4</span>,<span class="number">2</span>);</span><br><span class="line">scene.add(light2);</span><br></pre></td></tr></table></figure><p>环境光 函数构造：AmbientLight( color : Integer, intensity : Float )<br>color - (参数可选）颜色的rgb数值。缺省值为 0xffffff(白色)。<br>intensity - (参数可选)光照的强度。缺省值为 1。<br>参考：<a href="https://threejs.org/docs/index.html#api/zh/lights/AmbientLight" target="_blank" rel="noopener">https://threejs.org/docs/index.html#api/zh/lights/AmbientLight</a></p><p>平行光 函数构造：DirectionalLight( color : Integer, intensity : Float )<br>参考：<a href="https://threejs.org/docs/index.html#api/zh/lights/DirectionalLight" target="_blank" rel="noopener">https://threejs.org/docs/index.html#api/zh/lights/DirectionalLight</a></p><h6 id="（2）创建地面与盒子"><a href="#（2）创建地面与盒子" class="headerlink" title="（2）创建地面与盒子"></a>（2）创建地面与盒子</h6><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ground = creatGround(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0x8797a4</span>)</span><br><span class="line">cube01 = creatcube01(<span class="number">0</span>,<span class="number">0</span>);</span><br></pre></td></tr></table></figure><p> 函数 creatGround（），创建5000*5000大小，颜色为#8797a4的地面<br> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"> <span class="function"><span class="keyword">function</span> <span class="title">creatGround</span>(<span class="params">x,z,color</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> geometry = <span class="keyword">new</span> THREE.PlaneGeometry( <span class="number">5000</span>, <span class="number">5000</span>, <span class="number">1</span>, <span class="number">1</span> );</span><br><span class="line">    <span class="keyword">var</span> material = <span class="keyword">new</span> THREE.MeshLambertMaterial(&#123; <span class="attr">color</span>:color&#125;);</span><br><span class="line">    mesh = <span class="keyword">new</span> THREE.Mesh( geometry,material );</span><br><span class="line">    mesh.rotation.x =  -<span class="built_in">Math</span>.PI / <span class="number">2</span>;</span><br><span class="line">    mesh.position.set(x,<span class="number">-0.01</span>,z);</span><br><span class="line">    scene.add(mesh);</span><br><span class="line">    <span class="keyword">return</span> mesh;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>  函数 creatcube01（），创建一个其中一面有纹理的盒子</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">creatcube01</span>(<span class="params">x,z</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 绘制纹理</span></span><br><span class="line">    <span class="keyword">var</span> canvas = <span class="built_in">document</span>.createElement(<span class="string">'canvas'</span>);</span><br><span class="line">    canvas.width=<span class="number">100</span>;</span><br><span class="line">    canvas.height=<span class="number">50</span>;</span><br><span class="line">    <span class="keyword">var</span> ctx = canvas.getContext(<span class="string">'2d'</span>);</span><br><span class="line">    ctx.rect(<span class="number">0</span>,<span class="number">0</span>,<span class="number">100</span>,<span class="number">50</span>);</span><br><span class="line">    ctx.fillStyle=<span class="string">"#e86014"</span>;</span><br><span class="line">    ctx.fill();</span><br><span class="line">    ctx.beginPath();</span><br><span class="line">    ctx.arc(<span class="number">40</span>,<span class="number">25</span>,<span class="number">18</span>,<span class="number">0</span>,<span class="number">2</span>*<span class="built_in">Math</span>.PI);</span><br><span class="line">    ctx.fillStyle=<span class="string">"#ffffff"</span>;</span><br><span class="line">    ctx.fill();           </span><br><span class="line">    ctx.beginPath();</span><br><span class="line">    ctx.arc(<span class="number">45</span>,<span class="number">20</span>,<span class="number">6</span>,<span class="number">0</span>,<span class="number">2</span>*<span class="built_in">Math</span>.PI);</span><br><span class="line">    ctx.fillStyle=<span class="string">"#e86014"</span>;</span><br><span class="line">    ctx.fill();</span><br><span class="line">    ctx.beginPath();</span><br><span class="line">    ctx.arc(<span class="number">65</span>,<span class="number">10</span>,<span class="number">6</span>,<span class="number">0</span>,<span class="number">2</span>*<span class="built_in">Math</span>.PI);</span><br><span class="line">    ctx.fillStyle=<span class="string">"#ffffff"</span>;</span><br><span class="line">    ctx.fill();</span><br><span class="line">    <span class="keyword">var</span> texture = <span class="keyword">new</span> THREE.Texture(canvas);       </span><br><span class="line">    group = canvasOneFace(x,z,texture,<span class="number">0xe86014</span>);</span><br><span class="line">    <span class="keyword">return</span> group;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建一个纯色盒子，将纹理贴在平面上覆盖在盒子一面</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">canvasOneFace</span>(<span class="params">x,z,texture,color</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 创建纯色盒子，高50，长宽100</span></span><br><span class="line">    <span class="keyword">var</span> geometry = <span class="keyword">new</span> THREE.CubeGeometry( <span class="number">100</span>, <span class="number">50</span>, <span class="number">100</span>);</span><br><span class="line">    <span class="keyword">var</span> material = <span class="keyword">new</span> THREE.MeshLambertMaterial( &#123; <span class="attr">color</span>:color&#125; );</span><br><span class="line">    mesh = <span class="keyword">new</span> THREE.Mesh( geometry,material);</span><br><span class="line">    mesh.position.set(x,<span class="number">25</span>,z); <span class="comment">// 默认中心在(0,0,0)向上抬25，使盒子在地面上</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 创建100*50的平面，和盒子侧面一样大，材料使用刚绘制的画布作纹理，而不是颜色</span></span><br><span class="line">    <span class="keyword">var</span> geometry = <span class="keyword">new</span> THREE.PlaneGeometry( <span class="number">100</span>,<span class="number">50</span> );</span><br><span class="line">    <span class="keyword">var</span> material = <span class="keyword">new</span> THREE.MeshLambertMaterial(&#123;<span class="attr">map</span>:texture&#125;);</span><br><span class="line">    texture.needsUpdate = <span class="literal">true</span>;</span><br><span class="line">    mesh1 = <span class="keyword">new</span> THREE.Mesh( geometry,material);</span><br><span class="line">    <span class="comment">// 使平面和盒子侧面基本重合，差了0.01的距离，纹理能遮盖住盒子本身颜色</span></span><br><span class="line">    mesh1.rotation.y =  <span class="built_in">Math</span>.PI / <span class="number">2</span>;</span><br><span class="line">    mesh1.position.set(x+<span class="number">50.01</span>,<span class="number">25</span>,z);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 创建阴影</span></span><br><span class="line">    Shadow =  makeShadow();</span><br><span class="line">    Shadow.position.set( x<span class="number">-30</span> , <span class="number">0</span> , z+<span class="number">8</span> );</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 组合起来方便使用</span></span><br><span class="line">    group = <span class="keyword">new</span> THREE.Object3D(); </span><br><span class="line">    group.add(mesh,mesh1,Shadow);</span><br><span class="line">    scene.add(group);</span><br><span class="line">    <span class="keyword">return</span> group;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建阴影</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">makeShadow</span>(<span class="params">x,z</span>)</span>&#123;</span><br><span class="line">    <span class="comment">// 创建平面，贴上图片作为纹理</span></span><br><span class="line">    vargeometry = <span class="keyword">new</span> THREE.PlaneGeometry( <span class="number">116</span>, <span class="number">160</span>, <span class="number">1</span>, <span class="number">1</span> );</span><br><span class="line">    <span class="comment">// 加载图片作为纹理</span></span><br><span class="line">    <span class="keyword">var</span> texture = <span class="keyword">new</span> THREE.TextureLoader().load( <span class="string">"source/shadow.png"</span> );</span><br><span class="line">    <span class="keyword">var</span> material = <span class="keyword">new</span> THREE.MeshBasicMaterial(&#123;<span class="attr">map</span>:texture&#125;);</span><br><span class="line">    material.transparent = <span class="literal">true</span>; <span class="comment">// 材质透明</span></span><br><span class="line">    meshShadow = <span class="keyword">new</span> THREE.Mesh( geometry,material);</span><br><span class="line">    <span class="comment">// 调整阴影位置</span></span><br><span class="line">    meshShadow.rotation.x =  -<span class="built_in">Math</span>.PI / <span class="number">2</span>;</span><br><span class="line">    meshShadow.rotation.z =  <span class="built_in">Math</span>.PI / <span class="number">2</span> ;</span><br><span class="line">    meshShadow.position.set( x<span class="number">-30</span> , <span class="number">0</span> , z+<span class="number">6</span> );</span><br><span class="line">    <span class="keyword">return</span> meshShadow;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>效果：<br><img src="https://img-blog.csdnimg.cn/201901260944530.JPG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ZmY2pqaHY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br> 因为之后要创建各种盒子，所以这里用了函数，方便之后调用。用画布绘制右侧面的纹理，创建橙色的纯色盒子，将纹理贴在平面上覆盖在盒子侧面，最后再创建阴影，同样是创建平面贴上阴影图片作为纹理。</p><p> 画布作为纹理：<br> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> canvas = <span class="built_in">document</span>.createElement(<span class="string">'canvas'</span>);</span><br><span class="line">canvas.width=<span class="number">100</span>;</span><br><span class="line">canvas.height=<span class="number">50</span>;</span><br><span class="line"><span class="keyword">var</span> ctx = canvas.getContext(<span class="string">'2d'</span>);</span><br><span class="line"><span class="comment">// 画布的绘制</span></span><br><span class="line"><span class="comment">// ……</span></span><br><span class="line"><span class="comment">// 画布的绘制</span></span><br><span class="line"><span class="keyword">var</span> texture = <span class="keyword">new</span> THREE.Texture(canvas);</span><br><span class="line"><span class="keyword">var</span> material = <span class="keyword">new</span> THREE.MeshLambertMaterial(&#123;<span class="attr">map</span>:texture&#125;);</span><br><span class="line">texture.needsUpdate = <span class="literal">true</span>;</span><br></pre></td></tr></table></figure></p><p> png图片作为纹理：<br>  <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">var</span> texture = <span class="keyword">new</span> THREE.TextureLoader().load( <span class="string">"source/shadow.png"</span> );</span><br><span class="line"> <span class="keyword">var</span> material = <span class="keyword">new</span> THREE.MeshBasicMaterial(&#123;<span class="attr">map</span>:texture&#125;);</span><br><span class="line">material.transparent = <span class="literal">true</span>; <span class="comment">// 材质透明</span></span><br></pre></td></tr></table></figure></p><p> 注：尽量重用geometry，material，使性能优化。</p><h6 id="（3）窗口自适应"><a href="#（3）窗口自适应" class="headerlink" title="（3）窗口自适应"></a>（3）窗口自适应</h6><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">window</span>.addEventListener( <span class="string">'resize'</span>, onWindowResize, <span class="literal">false</span> );</span><br></pre></td></tr></table></figure><p>当窗口大小改变时，触发函数 onWindowResize()，实时改变相机参数。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">onWindowResize</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    width = <span class="built_in">document</span>.body.clientWidth;</span><br><span class="line">    height = <span class="built_in">document</span>.body.clientHeight;</span><br><span class="line">    camera.left = width / - <span class="number">2</span>;</span><br><span class="line">    camera.right = width /  <span class="number">2</span>;</span><br><span class="line">    camera.top = height / <span class="number">2</span>;</span><br><span class="line">    camera.bottom = height /  <span class="number">-2</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 更新相机投影矩阵，在相机任何参数被改变以后必须被调用</span></span><br><span class="line">    camera.updateProjectionMatrix(); </span><br><span class="line">    renderer.setSize( width,height );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>效果：<br><img src="https://img-blog.csdnimg.cn/20190126100807556.gif" alt="在这里插入图片描述"><br>完整代码：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"en"</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;<span class="xml"><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span></span><br><span class="line">    &lt;meta charset=<span class="string">"utf-8"</span>&gt;</span><br><span class="line">&lt;<span class="regexp">/head&gt;</span></span><br><span class="line"><span class="regexp">&lt;body&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">&lt;script src="build/</span>three.js<span class="string">"&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&lt;script&gt;</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    var camera, scene, renderer;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    init();</span></span><br><span class="line"><span class="string">    animate();</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    function init() &#123;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        scene = new THREE.Scene();</span></span><br><span class="line"><span class="string">        scene.background = new THREE.Color( 0x8797a4 );</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        renderer = new THREE.WebGLRenderer(&#123; antialias: true &#125; );</span></span><br><span class="line"><span class="string">        renderer.setSize( window.innerWidth, window.innerHeight );</span></span><br><span class="line"><span class="string">        document.body.appendChild( renderer.domElement );</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        camera = new THREE.OrthographicCamera( window.innerWidth / - 2, window.innerWidth / 2, window.innerHeight / 2, window.innerHeight / - 2, -1000, 2000 );</span></span><br><span class="line"><span class="string">        camera.position.set( 200 , 180 , 200 );</span></span><br><span class="line"><span class="string">        camera.lookAt(new THREE.Vector3(0,0,0));</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        light = new THREE.AmbientLight( 0xFFFFFF,0.4 );</span></span><br><span class="line"><span class="string">        scene.add( light );</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        light2 = new THREE.DirectionalLight(0xFFFFFF,1);</span></span><br><span class="line"><span class="string">        light2.position.set(3,4,2);</span></span><br><span class="line"><span class="string">        scene.add(light2);</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        ground = creatGround(0,0,0x8797a4)</span></span><br><span class="line"><span class="string">        cube01 = creatcube01(0,0);</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        window.addEventListener( 'resize', onWindowResize, false );</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">function creatGround(x,z,color)&#123;</span></span><br><span class="line"><span class="string">        var geometry = new THREE.PlaneGeometry( 5000, 5000, 1, 1 );</span></span><br><span class="line"><span class="string">        var material = new THREE.MeshLambertMaterial(&#123; color:color&#125;);</span></span><br><span class="line"><span class="string">        mesh = new THREE.Mesh( geometry,material );</span></span><br><span class="line"><span class="string">        mesh.rotation.x =  -Math.PI / 2;</span></span><br><span class="line"><span class="string">        mesh.position.set(x,-0.01,z);</span></span><br><span class="line"><span class="string">        scene.add(mesh);</span></span><br><span class="line"><span class="string">        return mesh;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    function creatcube01(x,z) &#123;</span></span><br><span class="line"><span class="string">// 绘制纹理</span></span><br><span class="line"><span class="string">        var canvas = document.createElement('canvas');</span></span><br><span class="line"><span class="string">        canvas.width=100;</span></span><br><span class="line"><span class="string">        canvas.height=50;</span></span><br><span class="line"><span class="string">        var ctx = canvas.getContext('2d');</span></span><br><span class="line"><span class="string">        ctx.rect(0,0,100,50);</span></span><br><span class="line">        ctx.fillStyle="#e86014";</span><br><span class="line">        ctx.fill();</span><br><span class="line">        ctx.beginPath();</span><br><span class="line">        ctx.arc(<span class="number">40</span>,<span class="number">25</span>,<span class="number">18</span>,<span class="number">0</span>,<span class="number">2</span>*<span class="built_in">Math</span>.PI);</span><br><span class="line">        ctx.fillStyle=<span class="string">"#ffffff"</span>;</span><br><span class="line">        ctx.fill();           </span><br><span class="line">        ctx.beginPath();</span><br><span class="line">        ctx.arc(<span class="number">45</span>,<span class="number">20</span>,<span class="number">6</span>,<span class="number">0</span>,<span class="number">2</span>*<span class="built_in">Math</span>.PI);</span><br><span class="line">        ctx.fillStyle=<span class="string">"#e86014"</span>;</span><br><span class="line">        ctx.fill();</span><br><span class="line">        ctx.beginPath();</span><br><span class="line">        ctx.arc(<span class="number">65</span>,<span class="number">10</span>,<span class="number">6</span>,<span class="number">0</span>,<span class="number">2</span>*<span class="built_in">Math</span>.PI);</span><br><span class="line">        ctx.fillStyle=<span class="string">"#ffffff"</span>;</span><br><span class="line">        ctx.fill();</span><br><span class="line">        <span class="keyword">var</span> texture = <span class="keyword">new</span> THREE.Texture(canvas);       </span><br><span class="line">        group = canvasOneFace(x,z,texture,<span class="number">0xe86014</span>);</span><br><span class="line">        <span class="keyword">return</span> group;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建一个纯色盒子，将纹理贴在平面上覆盖在盒子一面</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">canvasOneFace</span>(<span class="params">x,z,texture,color</span>) </span>&#123;</span><br><span class="line"><span class="comment">// 创建纯色盒子，高50，长宽100</span></span><br><span class="line">        <span class="keyword">var</span> geometry = <span class="keyword">new</span> THREE.CubeGeometry( <span class="number">100</span>, <span class="number">50</span>, <span class="number">100</span>);</span><br><span class="line">        <span class="keyword">var</span> material = <span class="keyword">new</span> THREE.MeshLambertMaterial( &#123; <span class="attr">color</span>:color&#125; );</span><br><span class="line">        mesh = <span class="keyword">new</span> THREE.Mesh( geometry,material);</span><br><span class="line">mesh.position.set(x,<span class="number">25</span>,z); <span class="comment">// 默认中心在(0,0,0)向上抬25，使盒子在地面上</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建100*50的平面，和盒子侧面一样大，材料使用刚绘制的画布作纹理，而不是颜色</span></span><br><span class="line"><span class="keyword">var</span> geometry = <span class="keyword">new</span> THREE.PlaneGeometry( <span class="number">100</span>,<span class="number">50</span> );</span><br><span class="line">        <span class="keyword">var</span> material = <span class="keyword">new</span> THREE.MeshLambertMaterial(&#123;<span class="attr">map</span>:texture&#125;);</span><br><span class="line">        texture.needsUpdate = <span class="literal">true</span>;</span><br><span class="line">mesh1 = <span class="keyword">new</span> THREE.Mesh( geometry,material);</span><br><span class="line"><span class="comment">// 使平面和盒子侧面基本重合，差了0.01的距离，纹理能遮盖住盒子本身颜色</span></span><br><span class="line">        mesh1.rotation.y =  <span class="built_in">Math</span>.PI / <span class="number">2</span>;</span><br><span class="line">mesh1.position.set(x+<span class="number">50.01</span>,<span class="number">25</span>,z);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建阴影</span></span><br><span class="line">        Shadow =  makeShadow();</span><br><span class="line">Shadow.position.set( x<span class="number">-30</span> , <span class="number">0</span> , z+<span class="number">8</span> );</span><br><span class="line"></span><br><span class="line"><span class="comment">// 组合起来方便使用</span></span><br><span class="line">        group = <span class="keyword">new</span> THREE.Object3D();</span><br><span class="line">        group.add(mesh,mesh1,Shadow);</span><br><span class="line">        scene.add(group);</span><br><span class="line">        <span class="keyword">return</span> group;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建阴影</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">makeShadow</span>(<span class="params">x,z</span>)</span>&#123;</span><br><span class="line"><span class="comment">// 创建平面，贴上图片作为纹理</span></span><br><span class="line"><span class="keyword">var</span> geometry = <span class="keyword">new</span> THREE.PlaneGeometry( <span class="number">116</span>, <span class="number">160</span>, <span class="number">1</span>, <span class="number">1</span> );</span><br><span class="line"><span class="comment">// 加载图片作为纹理</span></span><br><span class="line">        <span class="keyword">var</span> texture = <span class="keyword">new</span> THREE.TextureLoader().load( <span class="string">"source/shadow.png"</span> );</span><br><span class="line">        <span class="keyword">var</span> material = <span class="keyword">new</span> THREE.MeshBasicMaterial(&#123;<span class="attr">map</span>:texture&#125;);</span><br><span class="line">        material.transparent = <span class="literal">true</span>; <span class="comment">// 材质透明</span></span><br><span class="line">meshShadow = <span class="keyword">new</span> THREE.Mesh( geometry,material);</span><br><span class="line"><span class="comment">// 调整阴影位置</span></span><br><span class="line">        meshShadow.rotation.x =  -<span class="built_in">Math</span>.PI / <span class="number">2</span>;</span><br><span class="line">        meshShadow.rotation.z =  <span class="built_in">Math</span>.PI / <span class="number">2</span> ;</span><br><span class="line">        meshShadow.position.set( x<span class="number">-30</span> , <span class="number">0</span> , z+<span class="number">6</span> );</span><br><span class="line">        <span class="keyword">return</span> meshShadow;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">onWindowResize</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        width = <span class="built_in">document</span>.body.clientWidth;</span><br><span class="line">        height = <span class="built_in">document</span>.body.clientHeight;</span><br><span class="line">        camera.left = width / - <span class="number">2</span>;</span><br><span class="line">        camera.right = width /  <span class="number">2</span>;</span><br><span class="line">        camera.top = height / <span class="number">2</span>;</span><br><span class="line">camera.bottom = height /  <span class="number">-2</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 更新相机投影矩阵，在相机任何参数被改变以后必须被调用</span></span><br><span class="line">        camera.updateProjectionMatrix();</span><br><span class="line">        renderer.setSize( width,height );</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">animate</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        requestAnimationFrame( animate );</span><br><span class="line">        renderer.render( scene, camera );</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>body&gt;</span><br><span class="line">&lt;<span class="regexp">/html&gt;</span></span><br></pre></td></tr></table></figure><h5 id="2、更多盒子的生成"><a href="#2、更多盒子的生成" class="headerlink" title="2、更多盒子的生成"></a>2、更多盒子的生成</h5><p>所有盒子的生成函数，见 <a href="https://github.com/zj19941113/You_Jump_I_Jump/blob/master/zjFirstStep.html" target="_blank" rel="noopener">https://github.com/zj19941113/You_Jump_I_Jump/blob/master/zjFirstStep.html</a><br>boxs大合照：<br><img src="https://img-blog.csdnimg.cn/20190126101927363.JPG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ZmY2pqaHY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h5 id="3、性能与调试"><a href="#3、性能与调试" class="headerlink" title="3、性能与调试"></a>3、性能与调试</h5><h6 id="创建stats对象进行性能监控"><a href="#创建stats对象进行性能监控" class="headerlink" title="创建stats对象进行性能监控"></a>创建stats对象进行性能监控</h6><p>帧数：图形处理器每秒钟能够刷新几次，通常用fps（Frames Per Second）来表示。帧数越高，画面的感觉就会越好。所以大多数游戏都会有超过30的FPS。我们设置性能监视器来监视FPS。<br>（1）引入Stats.js文件，官方文档：<a href="https://github.com/mrdoob/stats.js" target="_blank" rel="noopener">https://github.com/mrdoob/stats.js</a> </p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=<span class="string">"js/Stats.js"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>（2）将stats对象加入到html网页中</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> stats;</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">stats = <span class="keyword">new</span> Stats();</span><br><span class="line">stats.domElement.style.position = <span class="string">'absolute'</span>;</span><br><span class="line">stats.domElement.style.right = <span class="string">'8px'</span>;</span><br><span class="line">stats.domElement.style.top = <span class="string">'8px'</span>;</span><br><span class="line"><span class="built_in">document</span>.body.appendChild( stats.domElement );</span><br></pre></td></tr></table></figure><p>（3）在 animate() 中调用stats.update()统计时间和帧数</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">animate</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">requestAnimationFrame( animate );</span><br><span class="line">stats.update(); <span class="comment">// 调用stats.update()统计时间和帧数</span></span><br><span class="line">renderer.render( scene, camera );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中FPS表示：上一秒的帧数，这个值越大越好，一般都为60左右。点击后变成另一个视图。MS表示渲染一帧需要的毫秒数，这个数字是越小越好，再次点击又可以回到FPS视图中。<br>效果：<br><img src="https://img-blog.csdnimg.cn/20190126103456297.gif" alt="在这里插入图片描述"></p><h6 id="OrbitControls控制器辅助调试"><a href="#OrbitControls控制器辅助调试" class="headerlink" title="OrbitControls控制器辅助调试"></a>OrbitControls控制器辅助调试</h6><p>（1）引入controls/OrbitControls.js文件，官方文档：<a href="https://github.com/mrdoob/three.js/blob/017f2a9eb17820772359b1e1dbca2b626c9f32b1/examples/jsm/controls/OrbitControls.js" target="_blank" rel="noopener">https://github.com/mrdoob/three.js/blob/017f2a9eb17820772359b1e1dbca2b626c9f32b1/examples/jsm/controls/OrbitControls.js</a> </p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=<span class="string">"js/controls/OrbitControls.js"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>（2）controls控制器设置</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> controls;</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">controls = <span class="keyword">new</span> THREE.OrbitControls( camera, renderer.domElement );</span><br><span class="line">controls.enableDamping = <span class="literal">true</span>; </span><br><span class="line">controls.dampingFactor = <span class="number">0.25</span>;</span><br><span class="line">controls.screenSpacePanning = <span class="literal">false</span>;</span><br><span class="line">controls.minDistance = <span class="number">100</span>;</span><br><span class="line">controls.maxDistance = <span class="number">500</span>;</span><br><span class="line">controls.maxPolarAngle = <span class="built_in">Math</span>.PI / <span class="number">2</span>;</span><br></pre></td></tr></table></figure><p>（3）在 animate() 中调用controls.update()</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">animate</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">requestAnimationFrame( animate );</span><br><span class="line">stats.update(); <span class="comment">// 调用stats.update()统计时间和帧数</span></span><br><span class="line">controls.update(); <span class="comment">// 调用controls.update()</span></span><br><span class="line">renderer.render( scene, camera );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>OrbitControls控制器的作用是，鼠标左键进行视角的旋转，右键控制平移，滚轮控制缩放。<br>效果：<br><img src="https://img-blog.csdnimg.cn/20190126105456623.gif" alt="在这里插入图片描述"><br>完整代码：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"en"</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;<span class="xml"><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span></span><br><span class="line">    &lt;meta charset=<span class="string">"utf-8"</span>&gt;</span><br><span class="line">&lt;<span class="regexp">/head&gt;</span></span><br><span class="line"><span class="regexp">&lt;body&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">&lt;script src="build/</span>three.js<span class="string">"&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="string">&lt;script src="</span>js/Stats.js<span class="string">"&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="string">&lt;script src="</span>js/controls/OrbitControls.js<span class="string">"&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&lt;script&gt;</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">var camera, scene, renderer;</span></span><br><span class="line"><span class="string">var stats, controls;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    init();</span></span><br><span class="line"><span class="string">    animate();</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    function init() &#123;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        scene = new THREE.Scene();</span></span><br><span class="line"><span class="string">        scene.background = new THREE.Color( 0x8797a4 );</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        renderer = new THREE.WebGLRenderer(&#123; antialias: true &#125; );</span></span><br><span class="line"><span class="string">        renderer.setSize( window.innerWidth, window.innerHeight );</span></span><br><span class="line"><span class="string">document.body.appendChild( renderer.domElement );</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">stats = new Stats();</span></span><br><span class="line"><span class="string">        stats.domElement.style.position = 'absolute';</span></span><br><span class="line"><span class="string">        stats.domElement.style.right = '8px';</span></span><br><span class="line"><span class="string">stats.domElement.style.top = '8px';</span></span><br><span class="line"><span class="string">document.body.appendChild( stats.domElement );</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        camera = new THREE.OrthographicCamera( window.innerWidth / - 2, window.innerWidth / 2, window.innerHeight / 2, window.innerHeight / - 2, -1000, 2000 );</span></span><br><span class="line"><span class="string">        camera.position.set( 200 , 180 , 200 );</span></span><br><span class="line"><span class="string">camera.lookAt(new THREE.Vector3(0,0,0));</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">controls = new THREE.OrbitControls( camera, renderer.domElement );</span></span><br><span class="line"><span class="string">controls.enableDamping = true;  </span></span><br><span class="line"><span class="string">controls.dampingFactor = 0.25;</span></span><br><span class="line"><span class="string">        controls.screenSpacePanning = false;</span></span><br><span class="line"><span class="string">        controls.minDistance = 100;</span></span><br><span class="line"><span class="string">        controls.maxDistance = 500;</span></span><br><span class="line"><span class="string">        controls.maxPolarAngle = Math.PI / 2;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        light = new THREE.AmbientLight( 0xFFFFFF,0.4 );</span></span><br><span class="line"><span class="string">        scene.add( light );</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        light2 = new THREE.DirectionalLight(0xFFFFFF,1);</span></span><br><span class="line"><span class="string">        light2.position.set(3,4,2);</span></span><br><span class="line"><span class="string">        scene.add(light2);</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        ground = creatGround(0,0,0x8797a4)</span></span><br><span class="line"><span class="string">        cube01 = creatcube01(0,0);</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        window.addEventListener( 'resize', onWindowResize, false );</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">function creatGround(x,z,color)&#123;</span></span><br><span class="line"><span class="string">        // 地面创建函数</span></span><br><span class="line"><span class="string">// ……</span></span><br><span class="line"><span class="string">// 地面创建函数</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">function creatcube01(x,z) &#123;</span></span><br><span class="line"><span class="string">// 盒子创建函数</span></span><br><span class="line"><span class="string">// ……</span></span><br><span class="line"><span class="string">// 盒子创建函数</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    function onWindowResize() &#123;</span></span><br><span class="line"><span class="string">        // 窗口自适应函数</span></span><br><span class="line"><span class="string">// ……</span></span><br><span class="line"><span class="string">// 窗口自适应函数</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    function animate() &#123;</span></span><br><span class="line"><span class="string">requestAnimationFrame( animate );</span></span><br><span class="line"><span class="string">stats.update();</span></span><br><span class="line"><span class="string">controls.update();</span></span><br><span class="line"><span class="string">        renderer.render( scene, camera );</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&lt;/script&gt;</span></span><br><span class="line"><span class="string">&lt;/body&gt;</span></span><br><span class="line"><span class="string">&lt;/html&gt;</span></span><br></pre></td></tr></table></figure><p>有效利用Controls和Helper能使视图展示更加出色，从而方便代码的编写。<br>这里有官方提供的一些实例（包括模型加载、控制器、动画等相关内容）：<br><a href="https://github.com/mrdoob/three.js/tree/017f2a9eb17820772359b1e1dbca2b626c9f32b1/examples" target="_blank" rel="noopener">https://github.com/mrdoob/three.js/tree/017f2a9eb17820772359b1e1dbca2b626c9f32b1/examples</a></p><p>下一篇：Three.js+tween.js 基础(二) 将介绍tween.js 相关知识，完成player的跳动动画，盒子的随机生成，分数统计等功能。</p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;Three-js&quot;&gt;&lt;a href=&quot;#Three-js&quot; class=&quot;headerlink&quot; title=&quot;Three.js&quot;&gt;&lt;/a&gt;Three.js&lt;/h3&gt;&lt;h4 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h4&gt;&lt;p&gt;Three.js是众多WebGL三维引擎框架其中之一，源自github的一个开源项目,项目地址：&lt;a href=&quot;https://github.com/mrdoob/three.js&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/mrdoob/three.js&lt;/a&gt; 。可以利用three.js进行网页上的三维场景（机械、建筑、游戏等）创建，能写出在浏览器上流畅运行的3D程序。如果没有前端基础，最好预先学习一点HTML/JavaScript方面的知识。&lt;/p&gt;
    
    </summary>
    
      <category term="Three" scheme="http://yoursite.com/categories/Three/"/>
    
    
      <category term="tween" scheme="http://yoursite.com/tags/tween/"/>
    
      <category term="Three" scheme="http://yoursite.com/tags/Three/"/>
    
  </entry>
  
  <entry>
    <title>利用浏览器本地存储localStorage进行换肤，改变页面字体颜色样式</title>
    <link href="http://yoursite.com/2019/01/24/11/"/>
    <id>http://yoursite.com/2019/01/24/11/</id>
    <published>2019-01-24T04:21:02.000Z</published>
    <updated>2019-06-21T02:56:35.737Z</updated>
    
    <content type="html"><![CDATA[<h4 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h4><p><img src="https://img-blog.csdnimg.cn/20190124120507960.gif" alt="在这里插入图片描述"><br>刷新页面，界面效果依然不会改变。</p><a id="more"></a><h4 id="相关代码"><a href="#相关代码" class="headerlink" title="相关代码"></a>相关代码</h4><p>html:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"setting_tool iconfont"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"back2top"</span> <span class="attr">style</span>=<span class="string">"display:none;"</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"czs-arrow-up-l"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"socolor"</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"czs-clothes-l"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"c"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"color undefined"</span>&gt;</span>默认<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"color sepia"</span>&gt;</span>护眼<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"color night"</span>&gt;</span>夜晚<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"hr"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"font serif"</span>&gt;</span>Serif<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"font sans"</span>&gt;</span>Sans<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>javascrip:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">"li.undefined"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        localStorage.removeItem(<span class="string">'color_style'</span>);</span><br><span class="line">        $(<span class="string">'.color-style'</span>).remove();</span><br><span class="line">        <span class="keyword">if</span>(localStorage.color_style) $(<span class="string">'head'</span>).append(<span class="string">"&lt;style class='color-style'&gt;"</span> + localStorage.color_style + <span class="string">"&lt;/style&gt;"</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">    $(<span class="string">"li.sepia"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        localStorage.setItem(<span class="string">"color_style"</span>, <span class="string">".menu .menu-item a.current-menu-item &#123;color:#704214;&#125;.article-title h2:hover&#123;color:#361e07&#125;【写你需要的改之后的样式】"</span>)</span><br><span class="line">        $(<span class="string">'.color-style'</span>).remove();</span><br><span class="line">        <span class="keyword">if</span>(localStorage.color_style) $(<span class="string">'head'</span>).append(<span class="string">"&lt;style class='color-style'&gt;"</span> + localStorage.color_style + <span class="string">"&lt;/style&gt;"</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">    $(<span class="string">"li.night"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        localStorage.setItem(<span class="string">"color_style"</span>, <span class="string">".menu .menu-item a.current-menu-item &#123;color:#bdcadb;&#125;.article-title h2:hover&#123;color:white&#125;【写你需要的改之后的样式】"</span>)</span><br><span class="line">        $(<span class="string">'.color-style'</span>).remove();</span><br><span class="line">        <span class="keyword">if</span>(localStorage.color_style) $(<span class="string">'head'</span>).append(<span class="string">"&lt;style class='color-style'&gt;"</span> + localStorage.color_style + <span class="string">"&lt;/style&gt;"</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">    $(<span class="string">"li.serif"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        localStorage.setItem(<span class="string">"font_style"</span>,<span class="string">"body&#123;font-family:serif;&#125;"</span>)</span><br><span class="line">        $(<span class="string">'.font-style'</span>).remove();</span><br><span class="line">        <span class="keyword">if</span>(localStorage.font_style) $(<span class="string">'head'</span>).append(<span class="string">"&lt;style class='font-style'&gt;"</span> + localStorage.font_style + <span class="string">"&lt;/style&gt;"</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">    $(<span class="string">"li.sans"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        localStorage.removeItem(<span class="string">'font_style'</span>);</span><br><span class="line">        $(<span class="string">'.font-style'</span>).remove();</span><br><span class="line">        <span class="keyword">if</span>(localStorage.font_style) $(<span class="string">'head'</span>).append(<span class="string">"&lt;style class='font-style'&gt;"</span> + localStorage.font_style + <span class="string">"&lt;/style&gt;"</span>);</span><br><span class="line">    &#125;);</span><br></pre></td></tr></table></figure><p>在页面头部添加</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt; </span><br><span class="line">        <span class="keyword">if</span>(localStorage.color_style) $(<span class="string">'head'</span>).append(<span class="string">"&lt;style class='color-style'&gt;"</span> + localStorage.color_style + <span class="string">"&lt;/style&gt;"</span>);</span><br><span class="line">        <span class="keyword">if</span>(localStorage.font_style) $(<span class="string">'head'</span>).append(<span class="string">"&lt;style class='font-style'&gt;"</span> + localStorage.font_style + <span class="string">"&lt;/style&gt;"</span>); </span><br><span class="line">    &lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><h4 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h4><p>点击选择相应的颜色，字体后，添加本地存储localStorage.color_style和localStorage.font_style，用添加的本地存储样式覆盖掉现有的样式，在页面头部添加的js保证刷新跳转后页面样式不变。</p><h6 id="本地存储localStorage-相关知识"><a href="#本地存储localStorage-相关知识" class="headerlink" title="本地存储localStorage 相关知识"></a>本地存储localStorage 相关知识</h6><p>1、简介<br>localStorage会可以将数据直接存储到本地，相当于一个5M大小的针对于前端页面的数据库。在IE8以上的IE版本才支持localStorage这个属性。localStorage属于永久性存储，如果存储内容多的话会消耗内存空间，会导致页面变卡。<br>注意：存入的数据只能以<code>字符串</code>形式存入。</p><p>2、存储与清除<br>// 存储<br>localStorage.setItem(“font_style”,”body{font-family:serif;}”)</p><p>// 清除键值对<br>localStorage.removeItem(‘color_style’);</p><p>// 清空localStorage<br>localStorage.clear();</p><p>3、处理JSON数据<br>var obj = {“a”: 1,”b”: 2};</p><p>// 转化为JSON字符串<br>obj = JSON.stringify(obj);  </p><p>//保存<br>localStorage.setItem(“temp2”, obj);</p><p>//JSON字符串转JSON对象<br>obj=JSON.parse(localStorage.getItem(“temp2”));</p>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;效果&quot;&gt;&lt;a href=&quot;#效果&quot; class=&quot;headerlink&quot; title=&quot;效果&quot;&gt;&lt;/a&gt;效果&lt;/h4&gt;&lt;p&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/20190124120507960.gif&quot; alt=&quot;在这里插入图片描述&quot;&gt;&lt;br&gt;刷新页面，界面效果依然不会改变。&lt;/p&gt;
    
    </summary>
    
      <category term="前端" scheme="http://yoursite.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="localStorage" scheme="http://yoursite.com/tags/localStorage/"/>
    
      <category term="换肤" scheme="http://yoursite.com/tags/%E6%8D%A2%E8%82%A4/"/>
    
      <category term="前端" scheme="http://yoursite.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="web" scheme="http://yoursite.com/tags/web/"/>
    
  </entry>
  
  <entry>
    <title>c++ 实现红外图与深度图结合的人脸识别+活体检测（Ubuntu +dlib）</title>
    <link href="http://yoursite.com/2019/01/23/19/"/>
    <id>http://yoursite.com/2019/01/23/19/</id>
    <published>2019-01-23T04:00:20.000Z</published>
    <updated>2019-06-21T03:12:31.194Z</updated>
    
    <content type="html"><![CDATA[<h4 id="准备"><a href="#准备" class="headerlink" title="准备:"></a>准备:</h4><h5 id="1、Ubuntu-C-编译dlib库"><a href="#1、Ubuntu-C-编译dlib库" class="headerlink" title="1、Ubuntu C++ 编译dlib库"></a>1、Ubuntu C++ 编译dlib库</h5><p><a href="https://blog.csdn.net/ffcjjhv/article/details/84660869" target="_blank" rel="noopener">https://blog.csdn.net/ffcjjhv/article/details/84660869</a></p><h5 id="2、数据-模型下载"><a href="#2、数据-模型下载" class="headerlink" title="2、数据+模型下载"></a>2、数据+模型下载</h5><p><a href="https://pan.baidu.com/s/1jIoW6BSa5nkGWNipL7sxVQ" target="_blank" rel="noopener">https://pan.baidu.com/s/1jIoW6BSa5nkGWNipL7sxVQ</a></p><a id="more"></a><p>其中包括：</p><ul><li>candidate-face.zip（人脸库：包含29个正面人脸红外图）</li><li>allface.zip（测试人脸集：包括29个人，每人13种脸部姿态下的红外图与深度图）</li><li>shape_predictor_68_face_landmarks.dat（人脸68关键点检测器）</li><li>dlib_face_recognition_resnet_model_v1.dat（人脸识别模型）<br><img src="https://img-blog.csdnimg.cn/20190123122918821.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ZmY2pqaHY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li></ul><h4 id="代码分析"><a href="#代码分析" class="headerlink" title="代码分析:"></a>代码分析:</h4><p>主要包含3个函数：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 函数声明 */</span></span><br><span class="line"><span class="comment">/* 人脸库训练 */</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">candidates_train</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span> *facesFile,<span class="built_in">std</span>::<span class="built_in">vector</span>&lt;matrix&lt;<span class="keyword">float</span>,<span class="number">0</span>,<span class="number">1</span>&gt;&gt;&amp;candidates_descriptors,<span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="built_in">string</span>&gt;&amp;candidates)</span></span>;</span><br></pre></td></tr></table></figure><p>运行candidates_train，遍历人脸库candidate-face文件夹，将候选人名单存入candidates，将候选人人脸特征存入candidates_descriptors。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 输出人脸位置 返回识别结果 */</span></span><br><span class="line"><span class="function"><span class="built_in">string</span> <span class="title">face_location</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span> *imgFile,<span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp;locates, <span class="built_in">std</span>::<span class="built_in">vector</span>&lt;matrix&lt;<span class="keyword">float</span>,<span class="number">0</span>,<span class="number">1</span>&gt;&gt;&amp;candidates_descriptors,<span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="built_in">string</span>&gt;&amp;candidates)</span></span>;</span><br></pre></td></tr></table></figure><p>运行face_location，得到要测试图片的人脸特征，计算与每个候选人人脸特征的欧式距离，得到距离最小值的编号，从而在candidates中得到识别结果。在函数运行过程中，将人脸位置信息传入locates，进行活体检测。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 判断是否为活体 */</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">liveness_detection</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span> *DeepFile,<span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp;locates)</span></span>;</span><br></pre></td></tr></table></figure><p>运行liveness_detection，利用深度图与人脸位置信息进行活体检测，主要利用了RANSAC算法。</p><h4 id="运行结果："><a href="#运行结果：" class="headerlink" title="运行结果："></a>运行结果：</h4><p><img src="https://img-blog.csdnimg.cn/2019012311254755.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ZmY2pqaHY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>补充：<br>python版的看这里 <a href="https://blog.csdn.net/ffcjjhv/article/details/84637986" target="_blank" rel="noopener">https://blog.csdn.net/ffcjjhv/article/details/84637986</a><br>python版的在allface文件夹共375张图片上的识别精度为99.469%，出错的两张是allleft姿态，侧转角度很大。模型算法和这篇c++版是一样的，只是语言不一样。可以看出识别效果还是很好的。<br>this_is_who.py在test-face文件夹中的批量测试结果：<br><img src="https://img-blog.csdnimg.cn/20181129184737604.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ZmY2pqaHY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h4 id="完整代码："><a href="#完整代码：" class="headerlink" title="完整代码："></a>完整代码：</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;dlib/dnn.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;dlib/image_processing/frontal_face_detector.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;dlib/image_processing.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;dlib/gui_widgets.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;dlib/image_io.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;dirent.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> dlib;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 函数声明 */</span></span><br><span class="line"><span class="comment">/* 人脸库训练 */</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">candidates_train</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span> *facesFile,<span class="built_in">std</span>::<span class="built_in">vector</span>&lt;matrix&lt;<span class="keyword">float</span>,<span class="number">0</span>,<span class="number">1</span>&gt;&gt;&amp;candidates_descriptors,<span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="built_in">string</span>&gt;&amp;candidates)</span></span>;</span><br><span class="line"><span class="comment">/* 输出人脸位置 返回识别结果 */</span></span><br><span class="line"><span class="function"><span class="built_in">string</span> <span class="title">face_location</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span> *imgFile,<span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp;locates, <span class="built_in">std</span>::<span class="built_in">vector</span>&lt;matrix&lt;<span class="keyword">float</span>,<span class="number">0</span>,<span class="number">1</span>&gt;&gt;&amp;candidates_descriptors,<span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="built_in">string</span>&gt;&amp;candidates)</span></span>;</span><br><span class="line"><span class="comment">/* 判断是否为活体 */</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">liveness_detection</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span> *DeepFile,<span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp;locates)</span></span>;  </span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> IMG_HEIGHT =  <span class="number">720</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> IMG_WIDTH =  <span class="number">1280</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">template</span> &lt;<span class="keyword">int</span>,<span class="keyword">template</span>&lt;<span class="keyword">typename</span>&gt;<span class="class"><span class="keyword">class</span>,<span class="title">int</span>,<span class="title">typename</span>&gt; <span class="title">class</span> <span class="title">block</span>, <span class="title">int</span> <span class="title">N</span>, <span class="title">template</span>&lt;typename&gt;<span class="title">class</span> <span class="title">BN</span>, <span class="title">typename</span> <span class="title">SUBNET</span>&gt;</span></span><br><span class="line"><span class="class"><span class="title">using</span> <span class="title">residual</span> = <span class="title">add_prev1</span>&lt;block&lt;N,BN,1,tag1&lt;SUBNET&gt;&gt;&gt;;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">template</span> &lt;<span class="keyword">int</span>,<span class="keyword">template</span>&lt;<span class="keyword">typename</span>&gt;<span class="class"><span class="keyword">class</span>,<span class="title">int</span>,<span class="title">typename</span>&gt; <span class="title">class</span> <span class="title">block</span>, <span class="title">int</span> <span class="title">N</span>, <span class="title">template</span>&lt;typename&gt;<span class="title">class</span> <span class="title">BN</span>, <span class="title">typename</span> <span class="title">SUBNET</span>&gt;</span></span><br><span class="line"><span class="class"><span class="title">using</span> <span class="title">residual_down</span> = <span class="title">add_prev2</span>&lt;avg_pool&lt;2,2,2,2,skip1&lt;tag2&lt;block&lt;N,BN,2,tag1&lt;SUBNET&gt;&gt;&gt;&gt;&gt;&gt;;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">int</span> N, <span class="keyword">template</span> &lt;<span class="keyword">typename</span>&gt; <span class="class"><span class="keyword">class</span> <span class="title">BN</span>, <span class="title">int</span> <span class="title">stride</span>, <span class="title">typename</span> <span class="title">SUBNET</span>&gt; </span></span><br><span class="line"><span class="class"><span class="title">using</span> <span class="title">block</span>  = <span class="title">BN</span>&lt;con&lt;N,3,3,1,1,relu&lt;BN&lt;con&lt;N,3,3,stride,stride,SUBNET&gt;&gt;&gt;&gt;&gt;;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">int</span> N, <span class="keyword">typename</span> SUBNET&gt; <span class="keyword">using</span> ares      = relu&lt;residual&lt;block,N,affine,SUBNET&gt;&gt;;</span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">int</span> N, <span class="keyword">typename</span> SUBNET&gt; <span class="keyword">using</span> ares_down = relu&lt;residual_down&lt;block,N,affine,SUBNET&gt;&gt;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> SUBNET&gt; <span class="keyword">using</span> alevel0 = ares_down&lt;<span class="number">256</span>,SUBNET&gt;;</span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> SUBNET&gt; <span class="keyword">using</span> alevel1 = ares&lt;<span class="number">256</span>,ares&lt;<span class="number">256</span>,ares_down&lt;<span class="number">256</span>,SUBNET&gt;&gt;&gt;;</span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> SUBNET&gt; <span class="keyword">using</span> alevel2 = ares&lt;<span class="number">128</span>,ares&lt;<span class="number">128</span>,ares_down&lt;<span class="number">128</span>,SUBNET&gt;&gt;&gt;;</span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> SUBNET&gt; <span class="keyword">using</span> alevel3 = ares&lt;<span class="number">64</span>,ares&lt;<span class="number">64</span>,ares&lt;<span class="number">64</span>,ares_down&lt;<span class="number">64</span>,SUBNET&gt;&gt;&gt;&gt;;</span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> SUBNET&gt; <span class="keyword">using</span> alevel4 = ares&lt;<span class="number">32</span>,ares&lt;<span class="number">32</span>,ares&lt;<span class="number">32</span>,SUBNET&gt;&gt;&gt;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> anet_type = loss_metric&lt;fc_no_bias&lt;<span class="number">128</span>,avg_pool_everything&lt;</span><br><span class="line">alevel0&lt;</span><br><span class="line">alevel1&lt;</span><br><span class="line">alevel2&lt;</span><br><span class="line">alevel3&lt;</span><br><span class="line">alevel4&lt;</span><br><span class="line">max_pool&lt;<span class="number">3</span>,<span class="number">3</span>,<span class="number">2</span>,<span class="number">2</span>,relu&lt;affine&lt;con&lt;<span class="number">32</span>,<span class="number">7</span>,<span class="number">7</span>,<span class="number">2</span>,<span class="number">2</span>,</span><br><span class="line">input_rgb_image_sized&lt;<span class="number">150</span>&gt;</span><br><span class="line">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;;</span><br><span class="line"></span><br><span class="line">frontal_face_detector detector = get_frontal_face_detector(); <span class="comment">// 人脸正脸检测器</span></span><br><span class="line">shape_predictor sp; <span class="comment">//人脸关键点检测器</span></span><br><span class="line">anet_type net;  <span class="comment">// 人脸识别模型</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">char</span> *imgFile = <span class="string">"/home/zhoujie/data/allface/0002_IR_allleft.jpg"</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">char</span> *facesFile = <span class="string">"/home/zhoujie/cProject/dlib_test/candidate-face/"</span>;</span><br><span class="line"></span><br><span class="line">deserialize(<span class="string">"shape_predictor_68_face_landmarks.dat"</span>) &gt;&gt; sp;</span><br><span class="line">deserialize(<span class="string">"dlib_face_recognition_resnet_model_v1.dat"</span>) &gt;&gt; net;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">vector</span>&lt;matrix&lt;<span class="keyword">float</span>,0,1&gt;&gt; candidates_descriptors;</span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="built_in">string</span>&gt; candidates;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 人脸库训练 */</span></span><br><span class="line">candidates_train(facesFile,candidates_descriptors,candidates);</span><br><span class="line"></span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; locates;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 输出人脸位置 返回识别结果 */</span></span><br><span class="line"><span class="built_in">string</span> who = face_location(imgFile, locates, candidates_descriptors,candidates); </span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"识别结果："</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"This is "</span> &lt;&lt; who &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//深度图与红外图是水平翻转的</span></span><br><span class="line">locates[<span class="number">0</span>] = IMG_WIDTH - locates[<span class="number">0</span>] -locates[<span class="number">2</span>]; </span><br><span class="line"><span class="comment">// printf("%d,%d,%d,%d\n", locates[0],locates[1],locates[2],locates[3]);</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">char</span> *DeepFile = <span class="string">"/home/zhoujie/data/allface/0002_raw_allleft.raw"</span>;</span><br><span class="line"><span class="keyword">bool</span> IS_FACE;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 判断是否为活体 */</span></span><br><span class="line">    IS_FACE = liveness_detection( DeepFile, locates);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// printf("RESULT : %d\n", IS_FACE);</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 人脸库训练 */</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">candidates_train</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span> *facesFile,<span class="built_in">std</span>::<span class="built_in">vector</span>&lt;matrix&lt;<span class="keyword">float</span>,<span class="number">0</span>,<span class="number">1</span>&gt;&gt;&amp;candidates_descriptors,<span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="built_in">string</span>&gt;&amp;candidates)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">DIR *dir;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">dirent</span> *<span class="title">ptr</span>;</span> </span><br><span class="line">    <span class="keyword">char</span> base[<span class="number">30</span>]; </span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">char</span> *pick=<span class="string">".jpg"</span>; <span class="comment">//需要的子串;</span></span><br><span class="line"><span class="keyword">char</span> IRfile[<span class="number">100</span>];</span><br><span class="line"><span class="keyword">char</span> *name;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> face_num = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">vector</span>&lt;matrix&lt;rgb_pixel&gt;&gt; faces;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ((dir=opendir(facesFile)) == <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        perror(<span class="string">"Open dir error..."</span>);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> ((ptr=readdir(dir)) != <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">strcpy</span>(base, ptr-&gt;d_name);</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">strstr</span>(base,pick)) </span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"training image:%s\n"</span>,base); </span><br><span class="line"><span class="built_in">strcpy</span>(IRfile, facesFile);</span><br><span class="line">            <span class="built_in">strcat</span>(IRfile, base);</span><br><span class="line"></span><br><span class="line">name = strtok(base, <span class="string">"_"</span>);</span><br><span class="line"><span class="comment">// printf("%s\n",name); </span></span><br><span class="line"><span class="built_in">string</span> candidate = name;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"candidate: "</span> &lt;&lt; candidate &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">candidates.push_back(candidate);</span><br><span class="line"></span><br><span class="line">matrix&lt;rgb_pixel&gt; img;</span><br><span class="line">load_image(img, IRfile);</span><br><span class="line"></span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">vector</span>&lt;rectangle&gt; dets = detector(img);</span><br><span class="line">full_object_detection shape = sp(img, dets[<span class="number">0</span>]);</span><br><span class="line"></span><br><span class="line">matrix&lt;rgb_pixel&gt; face_chip;</span><br><span class="line">extract_image_chip(img, get_face_chip_details(shape,<span class="number">150</span>,<span class="number">0.25</span>), face_chip);</span><br><span class="line">faces.push_back(move(face_chip));</span><br><span class="line">face_num += <span class="number">1</span>;</span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">candidates_descriptors = net(faces);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"训练结果：\n共训练 %d 张人脸\n"</span>, face_num);</span><br><span class="line"></span><br><span class="line">closedir(dir);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 函数 输出人脸位置 返回识别结果 */</span></span><br><span class="line"><span class="function"><span class="built_in">string</span> <span class="title">face_location</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span>* imgFile,<span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp;locates, <span class="built_in">std</span>::<span class="built_in">vector</span>&lt;matrix&lt;<span class="keyword">float</span>,<span class="number">0</span>,<span class="number">1</span>&gt;&gt;&amp;candidates_descriptors,<span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="built_in">string</span>&gt;&amp;candidates)</span></span></span><br><span class="line"><span class="function"></span>&#123;   </span><br><span class="line"></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"processing image "</span> &lt;&lt; imgFile &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    matrix&lt;rgb_pixel&gt; img;</span><br><span class="line">    load_image(img, imgFile);</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">vector</span>&lt;rectangle&gt; dets = detector(img);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// cout &lt;&lt; "Number of faces detected: " &lt;&lt; dets.size() &lt;&lt; endl;</span></span><br><span class="line">locates.push_back(dets[<span class="number">0</span>].left());</span><br><span class="line">locates.push_back(dets[<span class="number">0</span>].top());</span><br><span class="line">locates.push_back(dets[<span class="number">0</span>].right() - dets[<span class="number">0</span>].left());</span><br><span class="line">locates.push_back(dets[<span class="number">0</span>].bottom() - dets[<span class="number">0</span>].top());</span><br><span class="line"></span><br><span class="line">full_object_detection shape = sp(img, dets[<span class="number">0</span>]);</span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">vector</span>&lt;matrix&lt;rgb_pixel&gt;&gt; faces;</span><br><span class="line">matrix&lt;rgb_pixel&gt; face_chip;</span><br><span class="line">    extract_image_chip(img, get_face_chip_details(shape,<span class="number">150</span>,<span class="number">0.25</span>), face_chip);</span><br><span class="line">faces.push_back(move(face_chip));</span><br><span class="line"></span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">vector</span>&lt;matrix&lt;<span class="keyword">float</span>,0,1&gt;&gt; face_descriptors = net(faces);</span><br><span class="line"></span><br><span class="line"><span class="keyword">float</span> distance;</span><br><span class="line"><span class="keyword">float</span> best_distance = length(face_descriptors[<span class="number">0</span>]-candidates_descriptors[<span class="number">0</span>]);</span><br><span class="line"><span class="comment">// printf("k = 0 ,best_distance = %f\n",best_distance);</span></span><br><span class="line"><span class="keyword">size_t</span> candidates_num = candidates_descriptors.size();</span><br><span class="line"><span class="keyword">int</span> candidates_num_int = <span class="keyword">static_cast</span>&lt;<span class="keyword">int</span>&gt;(candidates_num);</span><br><span class="line"><span class="comment">// printf("candidates_num_int : %d\n", candidates_num_int);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> best_k = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">1</span>; k &lt; candidates_num_int; k++)</span><br><span class="line">    &#123;</span><br><span class="line">distance = length(face_descriptors[<span class="number">0</span>]-candidates_descriptors[k]);</span><br><span class="line"><span class="comment">// printf("k = %d ,distance = %f\n",k,distance);</span></span><br><span class="line"><span class="keyword">if</span> (distance &lt; best_distance) </span><br><span class="line">        &#123;</span><br><span class="line">best_distance = distance;</span><br><span class="line">best_k = k;</span><br><span class="line">&#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">string</span> who;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (best_distance &lt; <span class="number">0.6</span>) &#123;</span><br><span class="line">who = candidates[best_k];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">who = <span class="string">"Unknow"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> who;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 函数判断是否为活体 */</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">liveness_detection</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span> *DeepFile,<span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp;locates)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> ITER = <span class="number">5000</span>; <span class="comment">// 随机取点次数</span></span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">float</span> PLANE_OR_NOT = <span class="number">0.2</span>; <span class="comment">// 判断是否为平面的分界线</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> SIGMA = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">short</span> UNIT16;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 从.raw读取二进制16位数据到MatDATA</span></span><br><span class="line">UNIT16 MatDATA[IMG_HEIGHT*IMG_WIDTH];</span><br><span class="line">FILE *fp = <span class="literal">NULL</span>;</span><br><span class="line">fp = fopen( DeepFile, <span class="string">"rb"</span> );</span><br><span class="line">    <span class="keyword">size_t</span> sizeRead = fread(MatDATA,<span class="keyword">sizeof</span>(UNIT16),IMG_HEIGHT*IMG_WIDTH,fp);</span><br><span class="line"><span class="keyword">if</span> (sizeRead != IMG_HEIGHT*IMG_WIDTH) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"error!\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line">fclose(fp);</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> i,j;</span><br><span class="line"><span class="keyword">int</span> COL = locates[<span class="number">0</span>],ROW = locates[<span class="number">1</span>],FACE_WIDTH = locates[<span class="number">2</span>],FACE_HEIGHT = locates[<span class="number">3</span>]; <span class="comment">//位置信息</span></span><br><span class="line"><span class="comment">// txt :157 66 172 198 , 取行66：66+198,列取157：157+172</span></span><br><span class="line"><span class="keyword">int</span> faceno0_num = FACE_HEIGHT*FACE_WIDTH <span class="number">-1</span>; </span><br><span class="line"><span class="keyword">int</span> FaceDATA[<span class="number">3</span>][<span class="number">100000</span>];</span><br><span class="line">n = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(i = <span class="number">1</span>;i&lt; FACE_HEIGHT+<span class="number">1</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(j= <span class="number">1</span>;j&lt; FACE_WIDTH+<span class="number">1</span>;j++) </span><br><span class="line">&#123; </span><br><span class="line"><span class="keyword">if</span> (MatDATA[IMG_WIDTH*(ROW+i<span class="number">-2</span>)+COL+j<span class="number">-2</span>] == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">faceno0_num -= <span class="number">1</span>; <span class="comment">// 非零深度点个数为 faceno0_num+1</span></span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line">FaceDATA[<span class="number">1</span>][n] = i;</span><br><span class="line">FaceDATA[<span class="number">0</span>][n] = j; </span><br><span class="line">FaceDATA[<span class="number">2</span>][n] = MatDATA[IMG_WIDTH*(ROW+i<span class="number">-2</span>)+COL+j<span class="number">-2</span>];</span><br><span class="line">n += <span class="number">1</span>;</span><br><span class="line">&#125; </span><br><span class="line">&#125; </span><br><span class="line"><span class="comment">// int test = 0;  </span></span><br><span class="line"><span class="comment">// printf("%d,%d,%d,%d\n",test,FaceDATA[0][test],FaceDATA[1][test],FaceDATA[2][test]);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> pretotal = <span class="number">0</span>;  <span class="comment">// 符合拟合模型的数据的个数</span></span><br><span class="line"><span class="keyword">int</span> x[<span class="number">3</span>],y[<span class="number">3</span>],z[<span class="number">3</span>];  <span class="comment">// 随机取三个点 </span></span><br><span class="line">srand((<span class="keyword">unsigned</span>)time(<span class="literal">NULL</span>));</span><br><span class="line"><span class="keyword">float</span> a,b,c;  <span class="comment">// 拟合平面方程 z=ax+by+c</span></span><br><span class="line"><span class="comment">// float besta,bestb,bestc;  // 最佳参数</span></span><br><span class="line"><span class="keyword">int</span> rand_num[<span class="number">3</span>];</span><br><span class="line"><span class="keyword">float</span> check,distance;</span><br><span class="line"><span class="keyword">int</span> total = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; ITER; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">do</span>&#123;</span><br><span class="line">rand_num[<span class="number">0</span>] = <span class="built_in">std</span>::rand()%faceno0_num; </span><br><span class="line">rand_num[<span class="number">1</span>] = <span class="built_in">std</span>::rand()%faceno0_num; </span><br><span class="line">rand_num[<span class="number">2</span>] = <span class="built_in">std</span>::rand()%faceno0_num; </span><br><span class="line">&#125;<span class="keyword">while</span>(rand_num[<span class="number">0</span>] == rand_num[<span class="number">1</span>] || rand_num[<span class="number">0</span>] == rand_num[<span class="number">2</span>] || rand_num[<span class="number">1</span>] == rand_num[<span class="number">2</span>]);</span><br><span class="line"><span class="keyword">for</span>(n = <span class="number">0</span>; n &lt; <span class="number">3</span>; n++ )</span><br><span class="line">&#123;</span><br><span class="line">x[n] = FaceDATA[<span class="number">0</span>][rand_num[n]];</span><br><span class="line">y[n] = FaceDATA[<span class="number">1</span>][rand_num[n]];</span><br><span class="line">z[n] = FaceDATA[<span class="number">2</span>][rand_num[n]];</span><br><span class="line"><span class="comment">// printf("%d,%d,%d,%d\n", x[n],y[n],z[n],n);</span></span><br><span class="line">&#125;</span><br><span class="line">check = (x[<span class="number">0</span>]-x[<span class="number">1</span>])*(y[<span class="number">0</span>]-y[<span class="number">2</span>]) - (x[<span class="number">0</span>]-x[<span class="number">2</span>])*(y[<span class="number">0</span>]-y[<span class="number">1</span>]);</span><br><span class="line"><span class="keyword">if</span> ( check == <span class="number">0</span>)  <span class="comment">// 防止提示浮点数例外 (核心已转储)</span></span><br><span class="line">&#123;</span><br><span class="line">i -= <span class="number">1</span>;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line">a = ( (z[<span class="number">0</span>]-z[<span class="number">1</span>])*(y[<span class="number">0</span>]-y[<span class="number">2</span>]) - (z[<span class="number">0</span>]-z[<span class="number">2</span>])*(y[<span class="number">0</span>]-y[<span class="number">1</span>]) )*<span class="number">1.0</span>/( (x[<span class="number">0</span>]-x[<span class="number">1</span>])*(y[<span class="number">0</span>]-y[<span class="number">2</span>]) - (x[<span class="number">0</span>]-x[<span class="number">2</span>])*(y[<span class="number">0</span>]-y[<span class="number">1</span>]) );</span><br><span class="line">        <span class="keyword">if</span> (y[<span class="number">0</span>] == y[<span class="number">2</span>])  <span class="comment">// 防止提示浮点数例外 (核心已转储)</span></span><br><span class="line">&#123;</span><br><span class="line">i -= <span class="number">1</span>;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line">b = ((z[<span class="number">0</span>] - z[<span class="number">2</span>]) - a * (x[<span class="number">0</span>] - x[<span class="number">2</span>]))*<span class="number">1.0</span>/(y[<span class="number">0</span>]-y[<span class="number">2</span>]);</span><br><span class="line">        c = z[<span class="number">0</span>]- a * x[<span class="number">0</span>] - b * y[<span class="number">0</span>];</span><br><span class="line"><span class="comment">// printf("%f,%f,%f\n",a,b,c);</span></span><br><span class="line">total = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(n = <span class="number">0</span>; n &lt; faceno0_num +<span class="number">1</span> ; n++ )</span><br><span class="line">&#123;</span><br><span class="line">distance = <span class="built_in">fabs</span>(a*FaceDATA[<span class="number">0</span>][n] + b*FaceDATA[<span class="number">1</span>][n] - <span class="number">1</span>*FaceDATA[<span class="number">2</span>][n] + c*<span class="number">1</span>);</span><br><span class="line"><span class="keyword">if</span> (distance &lt; SIGMA)</span><br><span class="line">&#123;</span><br><span class="line">total +=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// printf("%d,%f,%d\n",i,distance,total);</span></span><br><span class="line"><span class="keyword">if</span> (total &gt; pretotal)  <span class="comment">// 找到符合拟合平面数据最多的拟合平面</span></span><br><span class="line">        &#123;</span><br><span class="line">pretotal=total;</span><br><span class="line"><span class="comment">// besta = a;</span></span><br><span class="line"><span class="comment">// bestb = b;</span></span><br><span class="line"><span class="comment">// bestc = c;</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">float</span> pretotal_ary = pretotal *<span class="number">1.0</span>/ faceno0_num ;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"活体检测结果：\npretotal_ary=%f,"</span>,pretotal_ary);</span><br><span class="line"><span class="keyword">bool</span> IS_FACE;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (pretotal_ary &lt; PLANE_OR_NOT)</span><br><span class="line">&#123;</span><br><span class="line">IS_FACE =  <span class="literal">true</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"是人脸\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">IS_FACE = <span class="literal">false</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"不是人脸\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// printf("%d\n", IS_FACE);</span></span><br><span class="line"><span class="keyword">return</span>  IS_FACE;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;准备&quot;&gt;&lt;a href=&quot;#准备&quot; class=&quot;headerlink&quot; title=&quot;准备:&quot;&gt;&lt;/a&gt;准备:&lt;/h4&gt;&lt;h5 id=&quot;1、Ubuntu-C-编译dlib库&quot;&gt;&lt;a href=&quot;#1、Ubuntu-C-编译dlib库&quot; class=&quot;headerlink&quot; title=&quot;1、Ubuntu C++ 编译dlib库&quot;&gt;&lt;/a&gt;1、Ubuntu C++ 编译dlib库&lt;/h5&gt;&lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/ffcjjhv/article/details/84660869&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://blog.csdn.net/ffcjjhv/article/details/84660869&lt;/a&gt;&lt;/p&gt;
&lt;h5 id=&quot;2、数据-模型下载&quot;&gt;&lt;a href=&quot;#2、数据-模型下载&quot; class=&quot;headerlink&quot; title=&quot;2、数据+模型下载&quot;&gt;&lt;/a&gt;2、数据+模型下载&lt;/h5&gt;&lt;p&gt;&lt;a href=&quot;https://pan.baidu.com/s/1jIoW6BSa5nkGWNipL7sxVQ&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://pan.baidu.com/s/1jIoW6BSa5nkGWNipL7sxVQ&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="人脸识别" scheme="http://yoursite.com/categories/%E4%BA%BA%E8%84%B8%E8%AF%86%E5%88%AB/"/>
    
      <category term="活体检测" scheme="http://yoursite.com/categories/%E4%BA%BA%E8%84%B8%E8%AF%86%E5%88%AB/%E6%B4%BB%E4%BD%93%E6%A3%80%E6%B5%8B/"/>
    
    
      <category term="活体检测" scheme="http://yoursite.com/tags/%E6%B4%BB%E4%BD%93%E6%A3%80%E6%B5%8B/"/>
    
      <category term="dlib" scheme="http://yoursite.com/tags/dlib/"/>
    
      <category term="人脸识别" scheme="http://yoursite.com/tags/%E4%BA%BA%E8%84%B8%E8%AF%86%E5%88%AB/"/>
    
      <category term="Ubuntu" scheme="http://yoursite.com/tags/Ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>微信小程序 人脸追踪+人脸识别+视频上传 页面</title>
    <link href="http://yoursite.com/2019/01/17/10/"/>
    <id>http://yoursite.com/2019/01/17/10/</id>
    <published>2019-01-17T04:23:19.000Z</published>
    <updated>2019-06-21T02:55:02.977Z</updated>
    
    <content type="html"><![CDATA[<p>效果图：<br><img src="https://img-blog.csdnimg.cn/20190117120524940.gif" alt="在这里插入图片描述"><br>调用的百度人脸识别api，免费账户就可以，虽然有QPS限制但对于自己学习使用是足够的。</p><a id="more"></a><h5 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h5><p>wxml：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&lt;view class=&quot;page-body&quot;&gt;</span><br><span class="line">  &lt;view class=&quot;page-body-wrapper&quot;&gt;</span><br><span class="line">    &lt;camera device-position=&quot;front&quot; flash=&quot;off&quot; binderror=&quot;error&quot; style=&quot;width:100%;height:300px;&quot;&gt;&lt;/camera&gt;</span><br><span class="line">    &lt;canvas wx:if=&quot;&#123;&#123;canvasshow&#125;&#125;&quot; style=&quot;width: 100%;height:300px;position:absolute;&quot; canvas-id=&quot;canvas&quot;&gt;&lt;/canvas&gt;</span><br><span class="line">    &lt;view class=&quot;btn-area&quot;&gt;</span><br><span class="line">      &lt;button type=&quot;primary&quot; bindtap=&quot;track&quot; style=&apos;background-color:#31859c;&apos; data-trackshow=&quot;&#123;&#123;trackshow&#125;&#125;&quot;&gt;&#123;&#123;trackshow&#125;&#125;&lt;/button&gt;</span><br><span class="line">    &lt;/view&gt;</span><br><span class="line">    &lt;view class=&quot;btn-area&quot;&gt;</span><br><span class="line">      &lt;button type=&quot;primary&quot; bindtap=&quot;search&quot; style=&apos;background-color:#31859c;&apos;&gt;进行人脸识别&lt;/button&gt;</span><br><span class="line">    &lt;/view&gt;</span><br><span class="line">    &lt;view class=&quot;btn-area&quot;&gt;</span><br><span class="line">      &lt;button type=&quot;primary&quot; bindtap=&quot;startRecord&quot; style=&apos;background-color:#31859c;&apos;&gt;开始录像&lt;/button&gt;</span><br><span class="line">    &lt;/view&gt;</span><br><span class="line">    &lt;view class=&quot;btn-area&quot;&gt;</span><br><span class="line">      &lt;button type=&quot;primary&quot; bindtap=&quot;stopRecord&quot; style=&apos;background-color:#31859c;&apos;&gt;结束录像&lt;/button&gt;</span><br><span class="line">    &lt;/view&gt;</span><br><span class="line">    &lt;view  class=&quot;preview-tips&quot;&gt;识别结果:&#123;&#123;who&#125;&#125;&lt;/view&gt;</span><br><span class="line">    &lt;view wx:if=&quot;&#123;&#123;src&#125;&#125;&quot; style=&apos;display:flex;width:100%&apos;&gt;</span><br><span class="line">      &lt;image  mode=&quot;aspectFit&quot; src=&quot;&#123;&#123;src&#125;&#125;&quot;  class=&apos;result-img&apos;&gt;&lt;/image&gt;</span><br><span class="line">      &lt;canvas  style=&quot;width: 100%;height:300px;position:absolute;&quot; canvas-id=&quot;canvasresult&quot;&gt;&lt;/canvas&gt;</span><br><span class="line">    &lt;/view&gt;</span><br><span class="line">    &lt;view wx:if=&quot;&#123;&#123;videoSrc&#125;&#125;&quot; class=&quot;preview-tips&quot;&gt;视频预览&lt;/view&gt;</span><br><span class="line">    &lt;video wx:if=&quot;&#123;&#123;videoSrc&#125;&#125;&quot; class=&quot;video&quot; src=&quot;&#123;&#123;videoSrc&#125;&#125;&quot;&gt;&lt;/video&gt;</span><br><span class="line">    &lt;view wx:if=&quot;&#123;&#123;videoSrc&#125;&#125;&quot; class=&quot;btn-area&quot;&gt;</span><br><span class="line">      &lt;button type=&quot;primary&quot; bindtap=&quot;uploadRecord&quot; style=&apos;background-color:#31859c;&apos;&gt;上传该录像&lt;/button&gt;</span><br><span class="line">    &lt;/view&gt;</span><br><span class="line">  &lt;/view&gt;</span><br><span class="line">&lt;/view&gt;</span><br></pre></td></tr></table></figure><p>js:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br></pre></td><td class="code"><pre><span class="line">var app = getApp();</span><br><span class="line">Page(&#123;</span><br><span class="line">  data: &#123;</span><br><span class="line">    src:&quot;&quot;,</span><br><span class="line">    fengmian:&quot;&quot;,</span><br><span class="line">    videoSrc:&quot;&quot;,</span><br><span class="line">    who:&quot;&quot;,</span><br><span class="line">    openid: &quot;&quot;,</span><br><span class="line">    token: &quot;&quot;,</span><br><span class="line">    windowWidth: 0,</span><br><span class="line">    trackshow: &quot;进行人脸追踪&quot;,</span><br><span class="line">    canvasshow:true</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  onLoad() &#123;</span><br><span class="line">    var that = this</span><br><span class="line">    //屏幕宽度</span><br><span class="line">    var sysInfo = wx.getSystemInfoSync()</span><br><span class="line">    that.setData(&#123;</span><br><span class="line">      windowWidth: sysInfo.windowWidth,</span><br><span class="line">    &#125;)</span><br><span class="line">    that.ctx = wx.createCameraContext()</span><br><span class="line">    console.log(&quot;onLoad&quot;),</span><br><span class="line">      that.setData(&#123;</span><br><span class="line">        openid: app.globalData.openid,</span><br><span class="line">        token: app.globalData.token</span><br><span class="line">      &#125;);</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  onReady: function () &#123;</span><br><span class="line">    // this.takePhoto()</span><br><span class="line">    // this.interval = setInterval(this.takePhoto, 500)</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  track (e)&#123;</span><br><span class="line">    var that =this</span><br><span class="line">    if (e.target.dataset.trackshow ==&quot;进行人脸追踪&quot;)&#123;</span><br><span class="line">      that.setData(&#123;</span><br><span class="line">        trackshow: &quot;停止人脸追踪&quot;,</span><br><span class="line">        canvasshow: true</span><br><span class="line">      &#125;)</span><br><span class="line">      that.takePhoto()</span><br><span class="line">      that.interval = setInterval(this.takePhoto, 500)</span><br><span class="line">    &#125;else&#123;</span><br><span class="line">      clearInterval(that.interval)</span><br><span class="line">      that.setData(&#123;</span><br><span class="line">        trackshow: &quot;进行人脸追踪&quot;,</span><br><span class="line">        canvasshow: false</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  takePhoto() &#123;</span><br><span class="line">    console.log(&quot;takePhoto&quot;)</span><br><span class="line">    var that = this</span><br><span class="line">    var takephonewidth</span><br><span class="line">    var takephoneheight</span><br><span class="line">    that.ctx.takePhoto(&#123;</span><br><span class="line">      quality: &apos;low&apos;,</span><br><span class="line">      success: (res) =&gt; &#123;</span><br><span class="line">        // console.log(res.tempImagePath),</span><br><span class="line">        // 获取图片真实宽高</span><br><span class="line">        wx.getImageInfo(&#123;</span><br><span class="line">          src: res.tempImagePath,</span><br><span class="line">          success: function (res) &#123;</span><br><span class="line">            takephonewidth= res.width,</span><br><span class="line">            takephoneheight = res.height</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">        wx.getFileSystemManager().readFile(&#123;</span><br><span class="line">          filePath: res.tempImagePath, //选择图片返回的相对路径</span><br><span class="line">          encoding: &apos;base64&apos;, //编码格式</span><br><span class="line">          success: res =&gt; &#123; //成功的回调</span><br><span class="line">            // console.log(&apos;data:image/png;base64,&apos; + res.data),</span><br><span class="line">            wx.request(&#123;</span><br><span class="line">              url: &quot;https://aip.baidubce.com/rest/2.0/face/v3/detect?access_token=【填自己的】&quot;,</span><br><span class="line">              data: &#123;</span><br><span class="line">                image:res.data,</span><br><span class="line">                image_type:&quot;BASE64&quot;,</span><br><span class="line">                max_face_num:10</span><br><span class="line">              &#125;,</span><br><span class="line">              method: &apos;POST&apos;,</span><br><span class="line">              dataType: &quot;json&quot;,</span><br><span class="line">              header: &#123;</span><br><span class="line">                &apos;content-type&apos;: &apos;application/json&apos; &#125;,</span><br><span class="line">              success: function (res) &#123;</span><br><span class="line">                console.log(res.data);</span><br><span class="line">                if (res.data.error_code === 0) &#123; </span><br><span class="line">                  var ctx = wx.createContext()</span><br><span class="line">                  ctx.setStrokeStyle(&apos;#31859c&apos;)</span><br><span class="line">                  ctx.lineWidth = 3</span><br><span class="line">                  for (let j = 0; j &lt; res.data.result.face_num; j++)&#123;</span><br><span class="line">                    var cavansl = res.data.result.face_list[j].location.left / takephonewidth * that.data.windowWidth</span><br><span class="line">                    var cavanst = res.data.result.face_list[j].location.top / takephoneheight * 300</span><br><span class="line">                    var cavansw = res.data.result.face_list[j].location.width / takephonewidth * that.data.windowWidth</span><br><span class="line">                    var cavansh = res.data.result.face_list[j].location.height / takephoneheight * 300</span><br><span class="line">                    ctx.strokeRect(cavansl, cavanst, cavansw, cavansh)</span><br><span class="line">                  &#125;</span><br><span class="line">                  wx.drawCanvas(&#123;</span><br><span class="line">                    canvasId: &apos;canvas&apos;,</span><br><span class="line">                    actions: ctx.getActions()</span><br><span class="line">                  &#125;)</span><br><span class="line">                &#125;else&#123;</span><br><span class="line">                  var ctx = wx.createContext()</span><br><span class="line">                  ctx.setStrokeStyle(&apos;#31859c&apos;)</span><br><span class="line">                  ctx.lineWidth = 3</span><br><span class="line">                  wx.drawCanvas(&#123;</span><br><span class="line">                    canvasId: &apos;canvas&apos;,</span><br><span class="line">                    actions: ctx.getActions()</span><br><span class="line">                  &#125;)</span><br><span class="line">                &#125;</span><br><span class="line">              &#125;,</span><br><span class="line">            &#125;)</span><br><span class="line"></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  search()&#123;</span><br><span class="line">    var that = this</span><br><span class="line">    var takephonewidth</span><br><span class="line">    var takephoneheight</span><br><span class="line">    that.ctx.takePhoto(&#123;</span><br><span class="line">      quality: &apos;heigh&apos;,</span><br><span class="line">      success: (res) =&gt; &#123;</span><br><span class="line">        // console.log(res.tempImagePath),</span><br><span class="line">          // 获取图片真实宽高</span><br><span class="line">          wx.getImageInfo(&#123;</span><br><span class="line">            src: res.tempImagePath,</span><br><span class="line">            success: function (res) &#123;</span><br><span class="line">              takephonewidth = res.width,</span><br><span class="line">                takephoneheight = res.height</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;)</span><br><span class="line">          that.setData(&#123;</span><br><span class="line">            src: res.tempImagePath</span><br><span class="line">          &#125;),</span><br><span class="line">          wx.getFileSystemManager().readFile(&#123;</span><br><span class="line">            filePath: that.data.src, //选择图片返回的相对路径</span><br><span class="line">            encoding: &apos;base64&apos;, //编码格式</span><br><span class="line">            success: res =&gt; &#123;</span><br><span class="line">              wx.request(&#123;</span><br><span class="line">                url: &quot;https://aip.baidubce.com/rest/2.0/face/v3/multi-search?access_token=【填自己的】&quot;,</span><br><span class="line">                data: &#123;</span><br><span class="line">                  image: res.data,</span><br><span class="line">                  image_type: &quot;BASE64&quot;,</span><br><span class="line">                  group_id_list: &quot;camera000001&quot;,</span><br><span class="line">                  max_face_num: 10,</span><br><span class="line">                  match_threshold: 60,</span><br><span class="line"></span><br><span class="line">                &#125;,</span><br><span class="line">                method: &apos;POST&apos;,</span><br><span class="line">                dataType: &quot;json&quot;,</span><br><span class="line">                header: &#123;</span><br><span class="line">                  &apos;content-type&apos;: &apos;application/json&apos;</span><br><span class="line">                &#125;,</span><br><span class="line">                success: function (res) &#123;</span><br><span class="line">                  console.log(res.data);</span><br><span class="line">                  var ctx = wx.createContext()</span><br><span class="line">                  if (res.data.error_code === 0) &#123;</span><br><span class="line">                    ctx.setStrokeStyle(&apos;#31859c&apos;)</span><br><span class="line">                    ctx.setFillStyle(&apos;#31859c&apos;);</span><br><span class="line">                    ctx.lineWidth = 3</span><br><span class="line">                    for (let j = 0; j &lt; res.data.result.face_num; j++) &#123;</span><br><span class="line">                      var cavansl = res.data.result.face_list[j].location.left / takephonewidth * that.data.windowWidth</span><br><span class="line">                      var cavanst = res.data.result.face_list[j].location.top / takephoneheight * 300</span><br><span class="line">                      var cavansw = res.data.result.face_list[j].location.width / takephonewidth * that.data.windowWidth</span><br><span class="line">                      var cavansh = res.data.result.face_list[j].location.height / takephoneheight * 300</span><br><span class="line">                      var cavanstext = res.data.result.face_list[j].user_list[0].user_id + &quot; &quot; + res.data.result.face_list[j].user_list[0].score.toFixed(0) + &quot;%&quot;</span><br><span class="line">                      ctx.setFontSize(14);</span><br><span class="line">                      ctx.fillText(cavanstext, cavansl, cavanst-2)</span><br><span class="line">                      ctx.strokeRect(cavansl, cavanst, cavansw, cavansh)</span><br><span class="line">                      </span><br><span class="line">                    &#125;</span><br><span class="line">                    wx.drawCanvas(&#123;</span><br><span class="line">                      canvasId: &apos;canvasresult&apos;,</span><br><span class="line">                      actions: ctx.getActions()</span><br><span class="line">                    &#125;)</span><br><span class="line">                  &#125; else &#123;</span><br><span class="line">                    var ctx = wx.createContext()</span><br><span class="line">                    ctx.setStrokeStyle(&apos;#31859c&apos;)</span><br><span class="line">                    ctx.lineWidth = 3</span><br><span class="line">                    wx.drawCanvas(&#123;</span><br><span class="line">                      canvasId: &apos;canvasresult&apos;,</span><br><span class="line">                      actions: ctx.getActions()</span><br><span class="line">                    &#125;)</span><br><span class="line">                  &#125;</span><br><span class="line">                &#125;,</span><br><span class="line">              &#125;)</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  startRecord() &#123;</span><br><span class="line">    this.ctx.startRecord(&#123;</span><br><span class="line">      success: (res) =&gt; &#123;</span><br><span class="line">        console.log(&apos;startRecord&apos;)</span><br><span class="line">      &#125;,   </span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;,</span><br><span class="line">  stopRecord() &#123;</span><br><span class="line">    this.ctx.stopRecord(&#123;</span><br><span class="line">      success: (res) =&gt; &#123;</span><br><span class="line">        console.log(res)</span><br><span class="line">        this.setData(&#123;</span><br><span class="line">          fengmian: res.tempThumbPath,</span><br><span class="line">          videoSrc: res.tempVideoPath</span><br><span class="line">        &#125;)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;,</span><br><span class="line">  uploadRecord() &#123;</span><br><span class="line">    var that = this;</span><br><span class="line">    wx.showLoading(&#123;</span><br><span class="line">      title: &apos;上传中&apos;,</span><br><span class="line">    &#125;)</span><br><span class="line">    //获取摄像头信息</span><br><span class="line">    wx.request(&#123;</span><br><span class="line">      url: app.globalData.urlHeader + &apos;/login/cameralist&apos;,</span><br><span class="line">      data: &#123;</span><br><span class="line">        openid: app.globalData.openid,</span><br><span class="line">        token: app.globalData.token</span><br><span class="line">      &#125;,</span><br><span class="line">      method: &apos;POST&apos;,</span><br><span class="line">      header: &#123;</span><br><span class="line">        &apos;content-type&apos;: &apos;application/json&apos;</span><br><span class="line">      &#125;,</span><br><span class="line">      success: function (res) &#123;</span><br><span class="line">        if (res.data.code === 0) &#123;</span><br><span class="line">          if (res.data.data.cameras == null) &#123;</span><br><span class="line">            wx.request(&#123;</span><br><span class="line">              url: app.globalData.urlHeader + &apos;/login/addcamera&apos;,</span><br><span class="line">              data: &#123;</span><br><span class="line">                openid: app.globalData.openid,</span><br><span class="line">                token: app.globalData.token,</span><br><span class="line">                camera: &quot;phone&quot;</span><br><span class="line">              &#125;,</span><br><span class="line">              method: &apos;POST&apos;,</span><br><span class="line">              header: &#123;</span><br><span class="line">                &apos;content-type&apos;: &apos;application/json&apos;</span><br><span class="line">              &#125;,</span><br><span class="line">              success: function (res) &#123;</span><br><span class="line">                if (res.data.code === 0) &#123;</span><br><span class="line">                  console.log(&apos;添加成功&apos;)</span><br><span class="line">                &#125; else &#123;</span><br><span class="line">                  console.log(res.data.error)</span><br><span class="line">                &#125;</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;)</span><br><span class="line">          &#125; else &#123;</span><br><span class="line">            var cameras = res.data.data.cameras</span><br><span class="line">            if (cameras.includes(&quot;phone&quot;)) &#123;</span><br><span class="line">              return false</span><br><span class="line">            &#125; else &#123;</span><br><span class="line">              wx.request(&#123;</span><br><span class="line">                url: app.globalData.urlHeader + &apos;/login/addcamera&apos;,</span><br><span class="line">                data: &#123;</span><br><span class="line">                  openid: app.globalData.openid,</span><br><span class="line">                  token: app.globalData.token,</span><br><span class="line">                  camera: &quot;phone&quot;</span><br><span class="line">                &#125;,</span><br><span class="line">                method: &apos;POST&apos;,</span><br><span class="line">                header: &#123;</span><br><span class="line">                  &apos;content-type&apos;: &apos;application/json&apos;</span><br><span class="line">                &#125;,</span><br><span class="line">                success: function (res) &#123;</span><br><span class="line">                  if (res.data.code === 0) &#123;</span><br><span class="line">                    console.log(&apos;添加成功&apos;)</span><br><span class="line">                  &#125; else &#123;</span><br><span class="line">                    console.log(res.data.error)</span><br><span class="line">                  &#125;</span><br><span class="line">                &#125;</span><br><span class="line">              &#125;)</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        else &#123;</span><br><span class="line">          wx.hideLoading()</span><br><span class="line">          console.log(&apos;获取摄像头列表失败！&apos; + res.data.error)</span><br><span class="line">          wx.showToast(&#123;</span><br><span class="line">            title: &apos;获取摄像头列表失败！&apos;,</span><br><span class="line">            image: &apos;../../img/about.png&apos;,</span><br><span class="line">            duration: 1000</span><br><span class="line">          &#125;)</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    wx.uploadFile(&#123;</span><br><span class="line">      url: app.globalData.urlHeader + &apos;/upload&apos;,</span><br><span class="line">      filePath: that.data.videoSrc,</span><br><span class="line">      name: &apos;file&apos;,</span><br><span class="line">      formData: &#123;</span><br><span class="line">        &apos;cameraid&apos;:&apos;phone&apos;,</span><br><span class="line">        &apos;openid&apos;: that.data.openid,</span><br><span class="line">        &apos;token&apos;: that.data.token,</span><br><span class="line">      &#125;,</span><br><span class="line">      success: function (res) &#123;</span><br><span class="line">        console.log(res.data);</span><br><span class="line">        var result = JSON.parse(res.data).data.filename</span><br><span class="line">        console.log(result);</span><br><span class="line">        wx.uploadFile(&#123;</span><br><span class="line">          url: app.globalData.urlHeader + &apos;/upload/fengmian&apos;,</span><br><span class="line">          filePath: that.data.fengmian,</span><br><span class="line">          name: &apos;file&apos;,</span><br><span class="line">          formData: &#123;</span><br><span class="line">            &apos;openid&apos;: that.data.openid,</span><br><span class="line">            &apos;token&apos;: that.data.token,</span><br><span class="line">            &apos;name&apos;: result</span><br><span class="line">          &#125;,</span><br><span class="line">          success(res) &#123;</span><br><span class="line">            console.log( res.data);</span><br><span class="line">            that.setData(&#123;</span><br><span class="line">              fengmian: &quot;&quot;,</span><br><span class="line">              videoSrc:&quot;&quot;</span><br><span class="line">            &#125;),</span><br><span class="line">            wx.hideLoading()</span><br><span class="line">            wx.showToast(&#123;</span><br><span class="line">              title: &apos;上传成功&apos;,</span><br><span class="line">              icon: &apos;success&apos;,</span><br><span class="line">              duration: 2000</span><br><span class="line">            &#125;)</span><br><span class="line">          &#125;,</span><br><span class="line">          fail(res) &#123;</span><br><span class="line">            wx.hideLoading()</span><br><span class="line">            wx.showToast(&#123;</span><br><span class="line">              title: &apos;上传失败&apos;,</span><br><span class="line">              image: &apos;../../img/about.png&apos;,</span><br><span class="line">              duration: 2000</span><br><span class="line">            &#125;)</span><br><span class="line"></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">      &#125;,</span><br><span class="line">      fail(res) &#123;</span><br><span class="line">        wx.hideLoading()</span><br><span class="line">        wx.showToast(&#123;</span><br><span class="line">          title: &apos;上传失败&apos;,</span><br><span class="line">          image: &apos;../../img/about.png&apos;,</span><br><span class="line">          duration: 2000</span><br><span class="line">        &#125;)</span><br><span class="line"></span><br><span class="line">      &#125;</span><br><span class="line">      </span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  onUnload: function () &#123;</span><br><span class="line">    var that=this</span><br><span class="line">    clearInterval(that.interval)</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  error(e) &#123;</span><br><span class="line">    console.log(e.detail)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>wxss：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">.preview-tips &#123;</span><br><span class="line">  margin: 50rpx 0  30rpx;  </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.video &#123;</span><br><span class="line">  margin: 20rpx auto;</span><br><span class="line">  width: 100%;</span><br><span class="line">  height: 300px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">page &#123;</span><br><span class="line">  background-color: #F8F8F8;</span><br><span class="line">  height: 100%;</span><br><span class="line">  font-size: 32rpx;</span><br><span class="line">  line-height: 1.6;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.page-body &#123;</span><br><span class="line">  padding: 20rpx 0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.page-body-wrapper &#123;</span><br><span class="line">  display: flex;</span><br><span class="line">  flex-direction: column;</span><br><span class="line">  align-items: center;</span><br><span class="line">  width: 100%;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.btn-area &#123;</span><br><span class="line">  margin-top: 40rpx;</span><br><span class="line">  box-sizing: border-box;</span><br><span class="line">  width: 100%;</span><br><span class="line">  padding: 0 30rpx;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.result-img&#123;</span><br><span class="line">width:100%;</span><br><span class="line">height:300px;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>自己的access_token获取看这里：<a href="http://ai.baidu.com/docs#/Face-Detect-V3/top" target="_blank" rel="noopener">http://ai.baidu.com/docs#/Face-Detect-V3/top</a><br>在手机端的主页效果，第二个即为演示图上传的视频<br><img src="https://img-blog.csdnimg.cn/20190117140445452.JPG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ZmY2pqaHY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>更新：改了识别结果显示方式，增加了多人识别。<br>效果：<br><img src="https://img-blog.csdnimg.cn/20190118121217147.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ZmY2pqaHY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>类似的骨架提取：<br><img src="https://img-blog.csdnimg.cn/20190118181127790.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ZmY2pqaHY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;效果图：&lt;br&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/20190117120524940.gif&quot; alt=&quot;在这里插入图片描述&quot;&gt;&lt;br&gt;调用的百度人脸识别api，免费账户就可以，虽然有QPS限制但对于自己学习使用是足够的。&lt;/p&gt;
    
    </summary>
    
      <category term="微信小程序" scheme="http://yoursite.com/categories/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
    
      <category term="微信小程序" scheme="http://yoursite.com/tags/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
      <category term="人脸追踪" scheme="http://yoursite.com/tags/%E4%BA%BA%E8%84%B8%E8%BF%BD%E8%B8%AA/"/>
    
      <category term="视频上传" scheme="http://yoursite.com/tags/%E8%A7%86%E9%A2%91%E4%B8%8A%E4%BC%A0/"/>
    
      <category term="百度AI sdk" scheme="http://yoursite.com/tags/%E7%99%BE%E5%BA%A6AI-sdk/"/>
    
  </entry>
  
  <entry>
    <title>matterport mask_rcnn配置运行 Ubuntu Jupyter&amp;pycharm</title>
    <link href="http://yoursite.com/2018/12/17/8/"/>
    <id>http://yoursite.com/2018/12/17/8/</id>
    <published>2018-12-17T09:00:42.000Z</published>
    <updated>2019-06-21T02:48:45.836Z</updated>
    
    <content type="html"><![CDATA[<p>mask_rcnn github地址：<a href="https://github.com/matterport/Mask_RCNN" target="_blank" rel="noopener">https://github.com/matterport/Mask_RCNN</a></p><h1 id="一、配置"><a href="#一、配置" class="headerlink" title="一、配置"></a>一、配置</h1><h2 id="1、安装-Anaconda"><a href="#1、安装-Anaconda" class="headerlink" title="1、安装 Anaconda"></a>1、安装 Anaconda</h2><p>Anaconda下载地址：<a href="https://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/" target="_blank" rel="noopener">https://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/</a></p><a id="more"></a><h2 id="2、python-3-6"><a href="#2、python-3-6" class="headerlink" title="2、python 3.6"></a>2、python 3.6</h2><p>#创建名为tensorflow的python36环境</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">conda create -n tensorflow python=<span class="number">3.6</span> <span class="comment">//创建环境</span></span><br><span class="line">source activate tensorflow  <span class="comment">//激活环境</span></span><br></pre></td></tr></table></figure><h2 id="3、配置环境"><a href="#3、配置环境" class="headerlink" title="3、配置环境"></a>3、配置环境</h2><h3 id="（1）安装Tensorflow-CPU"><a href="#（1）安装Tensorflow-CPU" class="headerlink" title="（1）安装Tensorflow(CPU)"></a>（1）安装Tensorflow(CPU)</h3> <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install tensorflow</span><br></pre></td></tr></table></figure><h3 id="（2）安装keras"><a href="#（2）安装keras" class="headerlink" title="（2）安装keras"></a>（2）安装keras</h3> <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install keras</span><br></pre></td></tr></table></figure><h3 id="（3）安装opencv"><a href="#（3）安装opencv" class="headerlink" title="（3）安装opencv"></a>（3）安装opencv</h3> <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install opencv-python</span><br></pre></td></tr></table></figure><h3 id="（4）安装其他依赖包"><a href="#（4）安装其他依赖包" class="headerlink" title="（4）安装其他依赖包"></a>（4）安装其他依赖包</h3> <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">pip install cython</span><br><span class="line">pip install scikit-image</span><br><span class="line">pip install theano</span><br><span class="line">pip install jupyter</span><br></pre></td></tr></table></figure><h3 id="（5）安装pycocotools"><a href="#（5）安装pycocotools" class="headerlink" title="（5）安装pycocotools"></a>（5）安装pycocotools</h3><p>#下载地址：<a href="https://github.com/waleedka/coco" target="_blank" rel="noopener">https://github.com/waleedka/coco</a><br> 解压后，cd到PythonAPI里面，输入<br> <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make -j4</span><br></pre></td></tr></table></figure></p><h1 id="二、运行"><a href="#二、运行" class="headerlink" title="二、运行"></a>二、运行</h1><h2 id="1、下载Mask-RCNN"><a href="#1、下载Mask-RCNN" class="headerlink" title="1、下载Mask-RCNN"></a>1、下载Mask-RCNN</h2><p>github地址：<a href="https://github.com/matterport/Mask_RCNN" target="_blank" rel="noopener">https://github.com/matterport/Mask_RCNN</a></p><h2 id="2、下载coco权重文件"><a href="#2、下载coco权重文件" class="headerlink" title="2、下载coco权重文件"></a>2、下载coco权重文件</h2><p> 文件mask_rcnn_coco.h5 （246MB）<br>下载地址：<a href="https://github.com/matterport/Mask_RCNN/releases" target="_blank" rel="noopener">https://github.com/matterport/Mask_RCNN/releases</a><br>若下载过慢，百度网盘： <a href="https://pan.baidu.com/s/18OYXRM3Fpqmk1cs9vH5WNA" target="_blank" rel="noopener">https://pan.baidu.com/s/18OYXRM3Fpqmk1cs9vH5WNA</a><br>下载完成以后放在<code>Mask_RCNN</code>目录下</p><h2 id="3、运行Mask-RCNN的demo"><a href="#3、运行Mask-RCNN的demo" class="headerlink" title="3、运行Mask_RCNN的demo"></a>3、运行Mask_RCNN的demo</h2><h3 id="（1）Jupyter运行"><a href="#（1）Jupyter运行" class="headerlink" title="（1）Jupyter运行"></a>（1）Jupyter运行</h3><p>Mask_RCNN根目录下输入：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jupyter notebook</span><br></pre></td></tr></table></figure><p>稍等片刻，会在浏览器打开页面，点击进入  <code>samples</code>目录，点击<code>demo.ipynp</code>进入代码运行页面</p><p>把pycocotools路径加到系统路径</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sys.path.append('/home/zhoujie/下载/coco-master/PythonAPI')</span><br></pre></td></tr></table></figure><p>修改后点击保存按钮，再点击重启服务然后运行整个代码<br><img src="https://img-blog.csdnimg.cn/20181217160853707.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ZmY2pqaHY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>出现结果：<br><img src="https://img-blog.csdnimg.cn/20181217160922430.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ZmY2pqaHY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h3 id="（2）pycharm运行"><a href="#（2）pycharm运行" class="headerlink" title="（2）pycharm运行"></a>（2）pycharm运行</h3><p>Mask_RCNN根目录下输入：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jupyter notebook</span><br></pre></td></tr></table></figure><p>稍等片刻，会在浏览器打开页面，点击进入  <code>samples</code>目录，点击<code>demo.ipynp</code>进入代码运行页面<br><code>点击文件-下载-Python（.py）</code>，将<code>demo.py</code>保存到<code>samples</code>文件夹</p><p>把pycocotools路径加到系统路径</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sys.path.append('/home/zhoujie/下载/coco-master/PythonAPI')</span><br></pre></td></tr></table></figure><p>再注释掉<code>get_ipython().run_line_magic(&#39;matplotlib&#39;, &#39;inline&#39;)</code><br>就可以运行demo.py了<br><img src="https://img-blog.csdnimg.cn/20181217165239173.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ZmY2pqaHY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>运行结果：<br><img src="https://img-blog.csdnimg.cn/20181217165911473.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ZmY2pqaHY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><img src="https://img-blog.csdnimg.cn/20181217165921915.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ZmY2pqaHY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;mask_rcnn github地址：&lt;a href=&quot;https://github.com/matterport/Mask_RCNN&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/matterport/Mask_RCNN&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;一、配置&quot;&gt;&lt;a href=&quot;#一、配置&quot; class=&quot;headerlink&quot; title=&quot;一、配置&quot;&gt;&lt;/a&gt;一、配置&lt;/h1&gt;&lt;h2 id=&quot;1、安装-Anaconda&quot;&gt;&lt;a href=&quot;#1、安装-Anaconda&quot; class=&quot;headerlink&quot; title=&quot;1、安装 Anaconda&quot;&gt;&lt;/a&gt;1、安装 Anaconda&lt;/h2&gt;&lt;p&gt;Anaconda下载地址：&lt;a href=&quot;https://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="算法" scheme="http://yoursite.com/categories/%E7%AE%97%E6%B3%95/"/>
    
      <category term="配置" scheme="http://yoursite.com/categories/%E7%AE%97%E6%B3%95/%E9%85%8D%E7%BD%AE/"/>
    
    
      <category term="mask_rcnn" scheme="http://yoursite.com/tags/mask-rcnn/"/>
    
      <category term="Jupyter" scheme="http://yoursite.com/tags/Jupyter/"/>
    
      <category term="算法" scheme="http://yoursite.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>微信小程序跳一跳html版复原（three.js+tween.js）</title>
    <link href="http://yoursite.com/2018/12/13/7/"/>
    <id>http://yoursite.com/2018/12/13/7/</id>
    <published>2018-12-13T10:34:54.000Z</published>
    <updated>2019-06-21T02:46:28.242Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、浏览器运行"><a href="#一、浏览器运行" class="headerlink" title="一、浏览器运行"></a>一、浏览器运行</h2><p>需要安装Tomcat后以类似 <code>http://localhost:8080/zjgame/zjgame.html</code>的方式访问，否则本地图片无法加载。<br>注：本项目基于Three.js，是对微信小游戏跳一跳的html版改写，只供研究学习使用。  </p><a id="more"></a><h3 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h3><p><img src="https://github.com/zj19941113/You_Jump_I_Jump/raw/master/youjumpijump.gif" alt="在这里插入图片描述"><br>GitHub：<a href="https://github.com/zj19941113/You_Jump_I_Jump" target="_blank" rel="noopener">https://github.com/zj19941113/You_Jump_I_Jump</a> ,只供个人研究学习使用。<br>Three.js+tween.js 基础(一)：<a href="https://blog.csdn.net/ffcjjhv/article/details/86632320" target="_blank" rel="noopener">https://blog.csdn.net/ffcjjhv/article/details/86632320</a><br>配置腾讯云服务器 通过域名访问自己的网页tomcat：<a href="https://blog.csdn.net/ffcjjhv/article/details/85140212" target="_blank" rel="noopener">https://blog.csdn.net/ffcjjhv/article/details/85140212</a></p><h2 id="二、在桌面运行-electron打包"><a href="#二、在桌面运行-electron打包" class="headerlink" title="二、在桌面运行 electron打包"></a>二、在桌面运行 electron打包</h2><h3 id="1、安装-node-js"><a href="#1、安装-node-js" class="headerlink" title="1、安装 node.js"></a>1、安装 node.js</h3><p>#下载：<a href="https://nodejs.org/en/" target="_blank" rel="noopener">https://nodejs.org/en/</a><br>cmd输入<code>node -v</code> 和<code>npm -v</code>查看是否安装成功<br><img src="https://img-blog.csdnimg.cn/20190426153931158.JPG" alt="在这里插入图片描述"></p><h3 id="2、安装-electron"><a href="#2、安装-electron" class="headerlink" title="2、安装 electron"></a>2、安装 electron</h3><p>命令行下载淘宝镜像命令工具 <code>cnpm</code></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install cnpm -g --registry=http:<span class="comment">//registry.npm.taobao.org</span></span><br></pre></td></tr></table></figure><p>用 cnpm 命令安装 <code>electron</code></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm install electron -g</span><br></pre></td></tr></table></figure><p>cmd输入<code>electron -v</code>查看是否安装成功<br><img src="https://img-blog.csdnimg.cn/20190426154148787.JPG" alt="在这里插入图片描述"></p><h3 id="3、运行"><a href="#3、运行" class="headerlink" title="3、运行"></a>3、运行</h3><p>下载：<a href="https://github.com/zj19941113/You_Jump_I_Jump" target="_blank" rel="noopener">https://github.com/zj19941113/You_Jump_I_Jump</a> ，并解压，将<code>zjgame.html</code>重命名为<code>index.html</code>。复制粘贴下面的 <code>package.json</code> 和 <code>main.js</code>文件，最终目录如图<br><img src="https://img-blog.csdnimg.cn/20190426154542338.JPG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ZmY2pqaHY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>在package.json中：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"name"</span>    : <span class="string">"your-app"</span>,</span><br><span class="line">  <span class="attr">"version"</span> : <span class="string">"0.1.0"</span>,</span><br><span class="line">  <span class="attr">"main"</span>    : <span class="string">"main.js"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在main.js中</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">const &#123;app, BrowserWindow&#125; = require('electron')</span><br><span class="line">const path = require('path')</span><br><span class="line">const url = require('url')</span><br><span class="line"></span><br><span class="line"><span class="comment">// Keep a global reference of the window object, if you don't, the window will</span></span><br><span class="line"><span class="comment">// be closed automatically when the JavaScript object is garbage collected.</span></span><br><span class="line">let win</span><br><span class="line"></span><br><span class="line"><span class="function">function <span class="title">createWindow</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="comment">// Create the browser window.</span></span><br><span class="line">  win = <span class="keyword">new</span> BrowserWindow(&#123;width: <span class="number">800</span>, height: <span class="number">600</span>&#125;)</span><br><span class="line"></span><br><span class="line">  <span class="comment">// and load the index.html of the app.</span></span><br><span class="line">  win.loadURL(url.format(&#123;</span><br><span class="line">    pathname: path.join(__dirname, 'index.html'),</span><br><span class="line">    protocol: 'file:',</span><br><span class="line">    slashes: <span class="literal">true</span></span><br><span class="line">  &#125;))</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Open the DevTools.</span></span><br><span class="line">  win.webContents.openDevTools()</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Emitted when the window is closed.</span></span><br><span class="line">  win.on('closed', () =&gt; &#123;</span><br><span class="line">    <span class="comment">// Dereference the window object, usually you would store windows</span></span><br><span class="line">    <span class="comment">// in an array if your app supports multi windows, this is the time</span></span><br><span class="line">    <span class="comment">// when you should delete the corresponding element.</span></span><br><span class="line">    win = null</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// This method will be called when Electron has finished</span></span><br><span class="line"><span class="comment">// initialization and is ready to create browser windows.</span></span><br><span class="line"><span class="comment">// Some APIs can only be used after this event occurs.</span></span><br><span class="line">app.on('ready', createWindow)</span><br><span class="line"></span><br><span class="line"><span class="comment">// Quit when all windows are closed.</span></span><br><span class="line">app.on('window-all-closed', () =&gt; &#123;</span><br><span class="line">  <span class="comment">// On macOS it is common for applications and their menu bar</span></span><br><span class="line">  <span class="comment">// to stay active until the user quits explicitly with Cmd + Q</span></span><br><span class="line">  if (process.platform !== 'darwin') &#123;</span><br><span class="line">    app.quit()</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">app.on('activate', () =&gt; &#123;</span><br><span class="line">  <span class="comment">// On macOS it's common to re-create a window in the app when the</span></span><br><span class="line">  <span class="comment">// dock icon is clicked and there are no other windows open.</span></span><br><span class="line">  <span class="keyword">if</span> (win === null) &#123;</span><br><span class="line">    createWindow()</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// In this file you can include the rest of your app's specific main process</span></span><br><span class="line"><span class="comment">// code. You can also put them in separate files and require them here.</span></span><br></pre></td></tr></table></figure><p>在项目目录下运行</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">electron .</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20190426154901769.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ZmY2pqaHY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h3 id="4、electron-packager打包为-exe"><a href="#4、electron-packager打包为-exe" class="headerlink" title="4、electron-packager打包为.exe"></a>4、electron-packager打包为.exe</h3><h4 id="（1）全局安装electron-packager"><a href="#（1）全局安装electron-packager" class="headerlink" title="（1）全局安装electron-packager"></a>（1）全局安装<code>electron-packager</code></h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install electron-packager -g</span><br></pre></td></tr></table></figure><h4 id="（2）运行打包命令"><a href="#（2）运行打包命令" class="headerlink" title="（2）运行打包命令"></a>（2）运行打包命令</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">electron-packager . YOU_JUMP_I_JUMP --win --out outApp --arch=x64 --app-version <span class="number">1.0</span><span class="number">.0</span> --electron-version <span class="number">5.0</span><span class="number">.0</span> --overwrite --ignore=node_modules</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20190426162842154.JPG" alt="在这里插入图片描述"><br>在<code>outApp\YOU_JUMP_I_JUMP-win32-x64\</code>文件夹下生成可执行文件<code>YOU_JUMP_I_JUMP.exe</code><br><img src="https://img-blog.csdnimg.cn/20190426162942926.JPG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ZmY2pqaHY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h3 id="5、源码加密"><a href="#5、源码加密" class="headerlink" title="5、源码加密"></a>5、源码加密</h3><p>在<code>YOU_JUMP_I_JUMP-win32-x64\resources\app</code>里有写的源码。写的代码完全暴露在用户电脑上是非常不安全的，可以通过electron 自带的加密功能解决这个问题。<br><img src="https://img-blog.csdnimg.cn/20190426163541666.JPG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ZmY2pqaHY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h4 id="（1）全局安装-asar"><a href="#（1）全局安装-asar" class="headerlink" title="（1）全局安装 asar"></a>（1）全局安装 asar</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install asar -g</span><br></pre></td></tr></table></figure><h4 id="（2）使用asar指令进行加密"><a href="#（2）使用asar指令进行加密" class="headerlink" title="（2）使用asar指令进行加密"></a>（2）使用asar指令进行加密</h4><p>在<code>resources</code>目录下使用<code>asar</code>指令进行加密</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">asar pack ./app app.asar</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20190426163959528.JPG" alt="在这里插入图片描述"><br>将原来的app文件夹删除，这样生成的app.asar就加密了之前的源代码<br>双击<code>YOU_JUMP_I_JUMP.exe</code>运行</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;一、浏览器运行&quot;&gt;&lt;a href=&quot;#一、浏览器运行&quot; class=&quot;headerlink&quot; title=&quot;一、浏览器运行&quot;&gt;&lt;/a&gt;一、浏览器运行&lt;/h2&gt;&lt;p&gt;需要安装Tomcat后以类似 &lt;code&gt;http://localhost:8080/zjgame/zjgame.html&lt;/code&gt;的方式访问，否则本地图片无法加载。&lt;br&gt;注：本项目基于Three.js，是对微信小游戏跳一跳的html版改写，只供研究学习使用。  &lt;/p&gt;
    
    </summary>
    
      <category term="微信小程序" scheme="http://yoursite.com/categories/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
      <category term="three" scheme="http://yoursite.com/categories/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/three/"/>
    
    
      <category term="微信小程序" scheme="http://yoursite.com/tags/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
      <category term="跳一跳" scheme="http://yoursite.com/tags/%E8%B7%B3%E4%B8%80%E8%B7%B3/"/>
    
      <category term="three" scheme="http://yoursite.com/tags/three/"/>
    
      <category term="tween" scheme="http://yoursite.com/tags/tween/"/>
    
      <category term="electron" scheme="http://yoursite.com/tags/electron/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu下编译C++与python版Dlib库，附新建样例程序（dlib+opencv）</title>
    <link href="http://yoursite.com/2018/11/30/6/"/>
    <id>http://yoursite.com/2018/11/30/6/</id>
    <published>2018-11-30T08:55:00.000Z</published>
    <updated>2019-06-21T02:44:20.114Z</updated>
    
    <content type="html"><![CDATA[<p>Win10+python36+opencv编译配置Dlib（anoconda）实时人脸识别看这里：<a href="https://blog.csdn.net/ffcjjhv/article/details/84992881" target="_blank" rel="noopener">https://blog.csdn.net/ffcjjhv/article/details/84992881</a></p><h1 id="下载Dlib"><a href="#下载Dlib" class="headerlink" title="下载Dlib"></a>下载Dlib</h1><p>进入官网：<a href="http://dlib.net/" target="_blank" rel="noopener">http://dlib.net/</a> ，点击左下角<code>Download dlib ver.19.16</code> ，下载后解压。</p><a id="more"></a><h1 id="安装cmake"><a href="#安装cmake" class="headerlink" title="安装cmake"></a>安装cmake</h1><p>运行 <code>sudo apt-get install cmake</code>  安装cmake ，如果提醒需要apt-get update，那就先<code>sudo apt-get update</code>，然后再执行 <code>sudo apt-get install cmake</code>  </p><h1 id="1-Python-编译dlib-opencv（只编译C-版，可跳过此步）"><a href="#1-Python-编译dlib-opencv（只编译C-版，可跳过此步）" class="headerlink" title="1. Python 编译dlib +opencv（只编译C++版，可跳过此步）"></a>1. Python 编译dlib +opencv（只编译C++版，可跳过此步）</h1><h3 id="编译dlib"><a href="#编译dlib" class="headerlink" title="编译dlib"></a>编译dlib</h3><p>dlib根目录下运行<code>python setup.py install</code></p><h3 id="安装opencv"><a href="#安装opencv" class="headerlink" title="安装opencv"></a>安装opencv</h3><p>运行 <code>pip install opencv-python</code></p><h3 id="测试自己的程序"><a href="#测试自己的程序" class="headerlink" title="测试自己的程序"></a>测试自己的程序</h3><p>下载： <a href="https://github.com/zj19941113/Face_Recognition_dlib" target="_blank" rel="noopener">https://github.com/zj19941113/Face_Recognition_dlib</a><br>运行<code>python facerec_68point.py</code> 得到识别结果all-face-result.jpg<br><img src="https://img-blog.csdnimg.cn/20181130155957887.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ZmY2pqaHY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h4 id="在anoconda下编译dlib-opencv"><a href="#在anoconda下编译dlib-opencv" class="headerlink" title="在anoconda下编译dlib +opencv"></a>在anoconda下编译dlib +opencv</h4><p>在dlib根目录下运行：<br><code>conda create -n py36 python=3.6</code><br><code>source activate py36</code><br><code>python setup.py install</code><br><code>pip install opencv-python</code></p><p>下载： <a href="https://github.com/zj19941113/Face_Recognition_dlib" target="_blank" rel="noopener">https://github.com/zj19941113/Face_Recognition_dlib</a> 解压后，在当前项目根目录运行：<br> <code>source activate py36</code><br><code>python facerec_68point.py</code></p><h1 id="2-C-编译dlib-opencv（在dlib根目录下已编译过python版也不影响）"><a href="#2-C-编译dlib-opencv（在dlib根目录下已编译过python版也不影响）" class="headerlink" title="2. C++ 编译dlib +opencv（在dlib根目录下已编译过python版也不影响）"></a>2. C++ 编译dlib +opencv（在dlib根目录下已编译过python版也不影响）</h1><p>仍然先进入dlib根目录下<br><code>mkdir build</code>  //如果已经编译过python版，此步略过<br><code>cd build</code><br><code>cmake .. -DDLIB_USE_CUDA=0</code><br><code>cmake --build . --config Release</code><br><code>sudo make install</code></p><p>到此dlib已经编译好了</p><p>opencv的编译参考 <a href="https://blog.csdn.net/cocoaqin/article/details/78163171" target="_blank" rel="noopener">https://blog.csdn.net/cocoaqin/article/details/78163171</a></p><h3 id="测试自己的程序-1"><a href="#测试自己的程序-1" class="headerlink" title="测试自己的程序"></a>测试自己的程序</h3><p>新建文件夹dlib_test<br><img src="https://img-blog.csdnimg.cn/20181130163246313.JPG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ZmY2pqaHY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h6 id="dlib-test-cpp文件："><a href="#dlib-test-cpp文件：" class="headerlink" title="dlib_test.cpp文件："></a>dlib_test.cpp文件：</h6><p>打开 <a href="http://dlib.net/face_landmark_detection_ex.cpp.html" target="_blank" rel="noopener">http://dlib.net/face_landmark_detection_ex.cpp.html</a> ,拷贝全文粘贴到dlib_test.cpp </p><h6 id="shape-predictor-68-face-landmarks-dat文件："><a href="#shape-predictor-68-face-landmarks-dat文件：" class="headerlink" title="shape_predictor_68_face_landmarks.dat文件："></a>shape_predictor_68_face_landmarks.dat文件：</h6><p>点击：<a href="http://dlib.net/files/shape_predictor_68_face_landmarks.dat.bz2" target="_blank" rel="noopener">http://dlib.net/files/shape_predictor_68_face_landmarks.dat.bz2</a> 下载面部特征点检测模型shape_predictor_68_face_landmarks.dat.bz2 ，<br>运行<code>bunzip2 shape_predictor_68_face_landmarks.dat.bz2</code> 进行解压</p><h6 id="CMakeLists-txt文件："><a href="#CMakeLists-txt文件：" class="headerlink" title="CMakeLists.txt文件："></a>CMakeLists.txt文件：</h6><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">cmake_minimum_required(VERSION <span class="number">2.8</span><span class="number">.4</span>) </span><br><span class="line"></span><br><span class="line">PROJECT(dlib_test) </span><br><span class="line"></span><br><span class="line">SET(CMAKE_CXX_FLAGS <span class="string">"$&#123;CMAKE_CXX_FLAGS&#125; -std=c++11 -O2"</span>)</span><br><span class="line"></span><br><span class="line">IF(CMAKE_CXX_COMPILER_ID STREQUAL <span class="string">"Clang"</span>) </span><br><span class="line">  SET(CMAKE_CXX_FLAGS <span class="string">"$&#123;CMAKE_CXX_FLAGS&#125; -Weverything"</span>) </span><br><span class="line">ELSEIF(CMAKE_CXX_COMPILER_ID STREQUAL <span class="string">"GNU"</span>) </span><br><span class="line">  SET(CMAKE_CXX_FLAGS <span class="string">"$&#123;CMAKE_CXX_FLAGS&#125; -Wall -Wextra"</span>) </span><br><span class="line">ENDIF() </span><br><span class="line"></span><br><span class="line">INCLUDE(/home/zhoujie/dlib<span class="number">-19.16</span>/dlib/cmake)  <span class="comment">//需修改为自己的路径</span></span><br><span class="line"></span><br><span class="line">ADD_EXECUTABLE(dlib_test dlib_test.cpp) </span><br><span class="line">TARGET_LINK_LIBRARIES(dlib_test dlib)</span><br></pre></td></tr></table></figure><p>注：INCLUDE(/home/zhoujie/dlib-19.16/dlib/cmake)  需修改为自己的路径</p><h6 id="运行："><a href="#运行：" class="headerlink" title="运行："></a>运行：</h6><p>在 dlib_test 文件夹根目录运行<br><code>cmake .</code><br><code>make</code><br><code>./dlib_test shape_predictor_68_face_landmarks.dat all-face.jpg</code></p><p>运行结果：<br><img src="https://img-blog.csdnimg.cn/20181130165240766.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ZmY2pqaHY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Win10+python36+opencv编译配置Dlib（anoconda）实时人脸识别看这里：&lt;a href=&quot;https://blog.csdn.net/ffcjjhv/article/details/84992881&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://blog.csdn.net/ffcjjhv/article/details/84992881&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;下载Dlib&quot;&gt;&lt;a href=&quot;#下载Dlib&quot; class=&quot;headerlink&quot; title=&quot;下载Dlib&quot;&gt;&lt;/a&gt;下载Dlib&lt;/h1&gt;&lt;p&gt;进入官网：&lt;a href=&quot;http://dlib.net/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://dlib.net/&lt;/a&gt; ，点击左下角&lt;code&gt;Download dlib ver.19.16&lt;/code&gt; ，下载后解压。&lt;/p&gt;
    
    </summary>
    
      <category term="算法" scheme="http://yoursite.com/categories/%E7%AE%97%E6%B3%95/"/>
    
      <category term="人脸识别" scheme="http://yoursite.com/categories/%E7%AE%97%E6%B3%95/%E4%BA%BA%E8%84%B8%E8%AF%86%E5%88%AB/"/>
    
    
      <category term="dlib" scheme="http://yoursite.com/tags/dlib/"/>
    
      <category term="c++" scheme="http://yoursite.com/tags/c/"/>
    
      <category term="ubuntu" scheme="http://yoursite.com/tags/ubuntu/"/>
    
      <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
      <category term="人脸识别" scheme="http://yoursite.com/tags/%E4%BA%BA%E8%84%B8%E8%AF%86%E5%88%AB/"/>
    
      <category term="配置" scheme="http://yoursite.com/tags/%E9%85%8D%E7%BD%AE/"/>
    
      <category term="cmake" scheme="http://yoursite.com/tags/cmake/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu+dlib+opencv摄像头实时人脸识别（含训练人脸库）</title>
    <link href="http://yoursite.com/2018/11/29/5/"/>
    <id>http://yoursite.com/2018/11/29/5/</id>
    <published>2018-11-29T10:50:47.000Z</published>
    <updated>2019-06-21T02:44:15.584Z</updated>
    
    <content type="html"><![CDATA[<h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><ol><li>Ubuntu 16.04  </li><li>opencv 3.0 for python3.6 <code>pip install opencv-python</code>  </li><li>dlib 19.16  <a id="more"></a><h2 id="模型下载"><a href="#模型下载" class="headerlink" title="模型下载"></a>模型下载</h2>人脸关键点检测器 <code>predictor_path=&quot;shape_predictor_68_face_landmarks.dat</code><br>人脸识别模型 <code>face_rec_model_path = &quot;dlib_face_recognition_resnet_model_v1.dat</code><br>含人脸库candidate-face中人脸不同表情的测试数据集 <code>test-face.zip</code> 解压后与上述文件均置于根目录下<br>下载地址 ： 百度云盘 <a href="https://pan.baidu.com/s/1h01sfvf5KWU6_7c2-i5HTQ" target="_blank" rel="noopener">https://pan.baidu.com/s/1h01sfvf5KWU6_7c2-i5HTQ</a>  <h2 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h2>运行<code>python candidate_train.py</code> 获得人脸库特征信息，存储在<code>candidates.npy</code> 与 <code>candidates.txt</code> 中  。</li></ol><p>candidate_train.py文件：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: UTF-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> os,dlib,numpy</span><br><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"></span><br><span class="line"><span class="comment"># 1.人脸关键点检测器</span></span><br><span class="line">predictor_path = <span class="string">"shape_predictor_68_face_landmarks.dat"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.人脸识别模型</span></span><br><span class="line">face_rec_model_path = <span class="string">"dlib_face_recognition_resnet_model_v1.dat"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 3.候选人脸文件夹</span></span><br><span class="line">faces_folder_path = <span class="string">"candidate-face"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 4.需识别的人脸</span></span><br><span class="line">img_path = <span class="string">"test-face/0001_IR_allleft.jpg"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 5.识别结果存放文件夹</span></span><br><span class="line">faceRect_path = <span class="string">"faceRec"</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 1.加载正脸检测器</span></span><br><span class="line">detector = dlib.get_frontal_face_detector()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.加载人脸关键点检测器</span></span><br><span class="line">sp = dlib.shape_predictor(predictor_path)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3. 加载人脸识别模型</span></span><br><span class="line">facerec = dlib.face_recognition_model_v1(face_rec_model_path)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 候选人脸描述子list</span></span><br><span class="line"></span><br><span class="line">candidates = []</span><br><span class="line"></span><br><span class="line">filelist = os.listdir(faces_folder_path)</span><br><span class="line">count = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> fn <span class="keyword">in</span> filelist:</span><br><span class="line">        count = count+<span class="number">1</span></span><br><span class="line">descriptors = numpy.zeros(shape=(count,<span class="number">128</span>))</span><br><span class="line">n = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> file <span class="keyword">in</span> filelist:</span><br><span class="line">    f = os.path.join(faces_folder_path,file)</span><br><span class="line">    <span class="comment">#if os.path.splitext(file)[1] == ".jpg" #文件扩展名</span></span><br><span class="line">    print(<span class="string">"Processing file: &#123;&#125;"</span>.format(f))</span><br><span class="line">    img = cv2.imread(f)</span><br><span class="line">    <span class="comment"># 1.人脸检测</span></span><br><span class="line">    dets = detector(img, <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> k, d <span class="keyword">in</span> enumerate(dets):</span><br><span class="line">        <span class="comment"># 2.关键点检测</span></span><br><span class="line">        shape = sp(img, d)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 3.描述子提取，128D向量</span></span><br><span class="line">        face_descriptor = facerec.compute_face_descriptor(img, shape)</span><br><span class="line">        <span class="comment"># 转换为numpy array</span></span><br><span class="line">        v = numpy.array(face_descriptor)</span><br><span class="line"></span><br><span class="line">        descriptors[n] = v</span><br><span class="line"></span><br><span class="line">        <span class="comment"># descriptors.append(v)</span></span><br><span class="line">        candidates.append(os.path.splitext(file)[<span class="number">0</span>])</span><br><span class="line"></span><br><span class="line">    n += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> d <span class="keyword">in</span> dets:</span><br><span class="line">        <span class="comment"># print("faceRec locate:",d)</span></span><br><span class="line">        <span class="comment"># print(type(d))</span></span><br><span class="line">        <span class="comment"># 使用opencv在原图上画出人脸位置</span></span><br><span class="line">        left_top = (dlib.rectangle.left(d), dlib.rectangle.top(d))</span><br><span class="line">        right_bottom = (dlib.rectangle.right(d), dlib.rectangle.bottom(d))</span><br><span class="line">        cv2.rectangle(img, left_top, right_bottom, (<span class="number">0</span>, <span class="number">255</span>, <span class="number">0</span>), <span class="number">2</span>, cv2.LINE_AA)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># cv2.imwrite(os.path.join(faceRect_path,file), img)</span></span><br><span class="line"></span><br><span class="line">numpy.save(<span class="string">'candidates.npy'</span>,descriptors)</span><br><span class="line">file= open(<span class="string">'candidates.txt'</span>, <span class="string">'w'</span>)</span><br><span class="line"><span class="keyword">for</span> candidate <span class="keyword">in</span> candidates:</span><br><span class="line">    file.write(candidate)</span><br><span class="line">    file.write(<span class="string">'\n'</span>)</span><br><span class="line">file.close()</span><br></pre></td></tr></table></figure><p>运行 <code>python facerec_68point.py</code>  得到识别结果all-face-result.jpg。</p><p>facerec_68point.py文件：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: UTF-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> dlib</span><br><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="keyword">import</span> numpy</span><br><span class="line"></span><br><span class="line"><span class="comment"># 待检测图片</span></span><br><span class="line">img_path = <span class="string">"all-face.jpg"</span></span><br><span class="line"><span class="comment"># 人脸关键点检测器</span></span><br><span class="line">predictor_path=<span class="string">"shape_predictor_68_face_landmarks.dat"</span></span><br><span class="line"><span class="comment"># 人脸识别模型</span></span><br><span class="line">face_rec_model_path = <span class="string">"dlib_face_recognition_resnet_model_v1.dat"</span></span><br><span class="line"><span class="comment"># 候选人文件</span></span><br><span class="line">candidate_npydata_path = <span class="string">"candidates.npy"</span></span><br><span class="line">candidate_path = <span class="string">"candidates.txt"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 加载正脸检测器</span></span><br><span class="line">detector = dlib.get_frontal_face_detector()</span><br><span class="line"><span class="comment"># 加载人脸关键点检测器</span></span><br><span class="line">sp = dlib.shape_predictor(predictor_path)</span><br><span class="line"><span class="comment"># 加载人脸识别模型</span></span><br><span class="line">facerec = dlib.face_recognition_model_v1(face_rec_model_path)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 候选人脸描述子list</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 读取候选人数据</span></span><br><span class="line">npy_data=numpy.load(candidate_npydata_path)</span><br><span class="line">descriptors=npy_data.tolist()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 候选人名单</span></span><br><span class="line">candidate = []</span><br><span class="line">file=open(candidate_path, <span class="string">'r'</span>)</span><br><span class="line">list_read = file.readlines()</span><br><span class="line"><span class="keyword">for</span> name <span class="keyword">in</span> list_read:</span><br><span class="line">    name = name.strip(<span class="string">'\n'</span>)</span><br><span class="line">    candidate.append(name)</span><br><span class="line"></span><br><span class="line">print(<span class="string">"Processing file: &#123;&#125;"</span>.format(img_path))</span><br><span class="line">img = cv2.imread(img_path)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 1.人脸检测</span></span><br><span class="line">dets = detector(img, <span class="number">1</span>)</span><br><span class="line">print(<span class="string">"Number of faces detected: &#123;&#125;"</span>.format(len(dets)))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> k, d <span class="keyword">in</span> enumerate(dets):</span><br><span class="line">    <span class="comment"># 2.关键点检测</span></span><br><span class="line">    shape = sp(img, d)</span><br><span class="line">    face_descriptor = facerec.compute_face_descriptor(img, shape)</span><br><span class="line">    d_test2 = numpy.array(face_descriptor)</span><br><span class="line">    <span class="comment"># 计算欧式距离</span></span><br><span class="line">    dist = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> descriptors:</span><br><span class="line">        dist_ = numpy.linalg.norm(i - d_test2)</span><br><span class="line">        dist.append(dist_)</span><br><span class="line">    num = dist.index(min(dist))  <span class="comment"># 返回最小值</span></span><br><span class="line"></span><br><span class="line">    left_top = (dlib.rectangle.left(d), dlib.rectangle.top(d))</span><br><span class="line">    right_bottom = (dlib.rectangle.right(d), dlib.rectangle.bottom(d))</span><br><span class="line">    cv2.rectangle(img, left_top, right_bottom, (<span class="number">0</span>, <span class="number">255</span>, <span class="number">0</span>), <span class="number">2</span>, cv2.LINE_AA)</span><br><span class="line">    text_point = (dlib.rectangle.left(d), dlib.rectangle.top(d) - <span class="number">5</span>)</span><br><span class="line">    cv2.putText(img, candidate[num], text_point, cv2.FONT_HERSHEY_PLAIN, <span class="number">2.0</span>, (<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>), <span class="number">2</span>, <span class="number">1</span>)  <span class="comment"># 标出face</span></span><br><span class="line"></span><br><span class="line">cv2.imwrite(<span class="string">'all-face-result.jpg'</span>, img)</span><br><span class="line"></span><br><span class="line"><span class="comment"># cv2.imshow("img",img) # 转成ＢＧＲ显示</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># cv2.waitKey(0)</span></span><br><span class="line"><span class="comment"># cv2.destroyAllWindows()</span></span><br></pre></td></tr></table></figure><p>运行 <code>this_is_who_camera.py</code>  打开摄像头进行实时的人脸识别</p><p>this_is_who_camera.py文件：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: UTF-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> dlib,numpy </span><br><span class="line"><span class="keyword">import</span> cv2          </span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="comment"># 1.人脸关键点检测器</span></span><br><span class="line">predictor_path = <span class="string">"shape_predictor_68_face_landmarks.dat"</span></span><br><span class="line"><span class="comment"># 2.人脸识别模型</span></span><br><span class="line">face_rec_model_path = <span class="string">"dlib_face_recognition_resnet_model_v1.dat"</span></span><br><span class="line"><span class="comment"># 3.候选人文件</span></span><br><span class="line">candidate_npydata_path = <span class="string">"candidates.npy"</span></span><br><span class="line">candidate_path = <span class="string">"candidates.txt"</span></span><br><span class="line"><span class="comment"># 4.储存截图目录</span></span><br><span class="line">path_screenshots = <span class="string">"screenShots/"</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 加载正脸检测器</span></span><br><span class="line">detector = dlib.get_frontal_face_detector()</span><br><span class="line"><span class="comment"># 加载人脸关键点检测器</span></span><br><span class="line">sp = dlib.shape_predictor(predictor_path)</span><br><span class="line"><span class="comment"># 加载人脸识别模型</span></span><br><span class="line">facerec = dlib.face_recognition_model_v1(face_rec_model_path)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 候选人脸描述子list</span></span><br><span class="line"><span class="comment"># 读取候选人数据</span></span><br><span class="line">npy_data=numpy.load(candidate_npydata_path)</span><br><span class="line">descriptors=npy_data.tolist()</span><br><span class="line"><span class="comment"># 候选人名单</span></span><br><span class="line">candidate = []</span><br><span class="line">file=open(candidate_path, <span class="string">'r'</span>)</span><br><span class="line">list_read = file.readlines()</span><br><span class="line"><span class="keyword">for</span> name <span class="keyword">in</span> list_read:</span><br><span class="line">    name = name.strip(<span class="string">'\n'</span>)</span><br><span class="line">    candidate.append(name)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建 cv2 摄像头对象</span></span><br><span class="line">cv2.namedWindow(<span class="string">"camera"</span>, <span class="number">1</span>)</span><br><span class="line">cap = cv2.VideoCapture(<span class="number">0</span>)</span><br><span class="line">cap.set(<span class="number">3</span>, <span class="number">480</span>)</span><br><span class="line"><span class="comment"># 截图 screenshots 的计数器</span></span><br><span class="line">cnt = <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> (cap.isOpened()):  <span class="comment">#isOpened()  检测摄像头是否处于打开状态</span></span><br><span class="line">    ret, img = cap.read()  <span class="comment">#把摄像头获取的图像信息保存之img变量</span></span><br><span class="line">    <span class="keyword">if</span> ret == <span class="literal">True</span>:       <span class="comment">#如果摄像头读取图像成功</span></span><br><span class="line">        <span class="comment"># 添加提示</span></span><br><span class="line">        cv2.putText(img, <span class="string">"press 'S': screenshot"</span>, (<span class="number">20</span>, <span class="number">400</span>), cv2.FONT_HERSHEY_PLAIN, <span class="number">1</span>, (<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>), <span class="number">1</span>, cv2.LINE_AA)</span><br><span class="line">        cv2.putText(img, <span class="string">"press 'Q': quit"</span>, (<span class="number">20</span>, <span class="number">450</span>), cv2.FONT_HERSHEY_PLAIN, <span class="number">1</span>, (<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>), <span class="number">1</span>, cv2.LINE_AA)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># img_gray = cv2.cvtColor(im_rd, cv2.COLOR_RGB2GRAY)</span></span><br><span class="line">        dets = detector(img, <span class="number">1</span>)</span><br><span class="line">        <span class="keyword">if</span> len(dets) != <span class="number">0</span>:</span><br><span class="line">            <span class="comment"># 检测到人脸</span></span><br><span class="line">            <span class="keyword">for</span> k, d <span class="keyword">in</span> enumerate(dets):</span><br><span class="line">                <span class="comment"># 关键点检测</span></span><br><span class="line">                shape = sp(img, d)</span><br><span class="line">                <span class="comment"># 遍历所有点圈出来</span></span><br><span class="line">                <span class="keyword">for</span> pt <span class="keyword">in</span> shape.parts():</span><br><span class="line">                    pt_pos = (pt.x, pt.y)</span><br><span class="line">                    cv2.circle(img, pt_pos, <span class="number">2</span>, (<span class="number">0</span>, <span class="number">255</span>, <span class="number">0</span>), <span class="number">1</span>)</span><br><span class="line">                face_descriptor = facerec.compute_face_descriptor(img, shape)</span><br><span class="line">                d_test2 = numpy.array(face_descriptor)</span><br><span class="line">                <span class="comment"># 计算欧式距离</span></span><br><span class="line">                dist = []</span><br><span class="line">                <span class="keyword">for</span> i <span class="keyword">in</span> descriptors:</span><br><span class="line">                    dist_ = numpy.linalg.norm(i - d_test2)</span><br><span class="line">                    dist.append(dist_)</span><br><span class="line">                num = dist.index(min(dist))  <span class="comment"># 返回最小值</span></span><br><span class="line"></span><br><span class="line">                left_top = (dlib.rectangle.left(d), dlib.rectangle.top(d))</span><br><span class="line">                right_bottom = (dlib.rectangle.right(d), dlib.rectangle.bottom(d))</span><br><span class="line">                cv2.rectangle(img, left_top, right_bottom, (<span class="number">0</span>, <span class="number">255</span>, <span class="number">0</span>), <span class="number">2</span>, cv2.LINE_AA)</span><br><span class="line">                text_point = (dlib.rectangle.left(d), dlib.rectangle.top(d) - <span class="number">5</span>)</span><br><span class="line">                cv2.putText(img, candidate[num][<span class="number">0</span>:<span class="number">4</span>], text_point, cv2.FONT_HERSHEY_PLAIN, <span class="number">2.0</span>, (<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>), <span class="number">1</span>, <span class="number">1</span>)  <span class="comment"># 标出face</span></span><br><span class="line"></span><br><span class="line">            cv2.putText(img, <span class="string">"facesNum: "</span> + str(len(dets)), (<span class="number">20</span>, <span class="number">50</span>),  cv2.FONT_HERSHEY_PLAIN, <span class="number">1.5</span>, (<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>), <span class="number">2</span>, cv2.LINE_AA)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="comment"># 没有检测到人脸</span></span><br><span class="line">            cv2.putText(img, <span class="string">"facesNum:0"</span>, (<span class="number">20</span>, <span class="number">50</span>),  cv2.FONT_HERSHEY_PLAIN, <span class="number">1.5</span>, (<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>), <span class="number">2</span>, cv2.LINE_AA)</span><br><span class="line"></span><br><span class="line">        k = cv2.waitKey(<span class="number">1</span>)</span><br><span class="line">        <span class="comment"># 按下 's' 键保存</span></span><br><span class="line">        <span class="keyword">if</span> k == ord(<span class="string">'s'</span>):</span><br><span class="line">            cnt += <span class="number">1</span></span><br><span class="line">            print(path_screenshots + <span class="string">"screenshot"</span> + <span class="string">"_"</span> + str(cnt) + <span class="string">"_"</span> + time.strftime(<span class="string">"%Y-%m-%d-%H-%M-%S"</span>, time.localtime()) + <span class="string">".jpg"</span>)</span><br><span class="line">            cv2.imwrite(path_screenshots + <span class="string">"screenshot"</span> + <span class="string">"_"</span> + str(cnt) + <span class="string">"_"</span> + time.strftime(<span class="string">"%Y-%m-%d-%H-%M-%S"</span>, time.localtime()) + <span class="string">".jpg"</span>, img)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 按下 'q' 键退出</span></span><br><span class="line">        <span class="keyword">if</span> k == ord(<span class="string">'q'</span>):</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        cv2.imshow(<span class="string">"camera"</span>, img)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 释放摄像头</span></span><br><span class="line">cap.release()</span><br><span class="line">cv2.destroyAllWindows()</span><br></pre></td></tr></table></figure><h2 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h2><ol><li>每次人脸库candidate-face中加入新的人脸数据，均需运行<code>python candidate_train.py</code>  </li><li><code>python facerec_68point.py</code>检测的是与人脸库中最相似的</li><li>提供 <code>this_is_who.py</code> 进行在<code>test-face</code>文件夹中的批量测试，测试结果存于<code>faceRec</code>文件夹，识别错误结果存于<code>faceRec_ERROR</code></li><li>最近的项目是在红外人脸图像上进行的，人脸不太清晰，如果是正常摄像头效果应该会更好<h2 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果"></a>运行结果</h2>python facerec_68point.py在单张上的测试结果：<br><img src="https://img-blog.csdnimg.cn/20181129184753419.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ZmY2pqaHY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>this_is_who.py在<code>test-face</code>文件夹中的批量测试结果：<br><img src="https://img-blog.csdnimg.cn/20181129184737604.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ZmY2pqaHY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>this_is_who_camera.py实时检测效果.py<br><img src="https://img-blog.csdnimg.cn/20181213170325292.gif" alt="在这里插入图片描述"><br>摄像头截图：<br><img src="https://img-blog.csdnimg.cn/20181213172624191.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ZmY2pqaHY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>项目地址 ：<a href="https://github.com/zj19941113/Face_Recognition_dlib" target="_blank" rel="noopener">https://github.com/zj19941113/Face_Recognition_dlib</a></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;环境&quot;&gt;&lt;a href=&quot;#环境&quot; class=&quot;headerlink&quot; title=&quot;环境&quot;&gt;&lt;/a&gt;环境&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;Ubuntu 16.04  &lt;/li&gt;
&lt;li&gt;opencv 3.0 for python3.6 &lt;code&gt;pip install opencv-python&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;dlib 19.16
    
    </summary>
    
      <category term="算法" scheme="http://yoursite.com/categories/%E7%AE%97%E6%B3%95/"/>
    
      <category term="人脸识别" scheme="http://yoursite.com/categories/%E7%AE%97%E6%B3%95/%E4%BA%BA%E8%84%B8%E8%AF%86%E5%88%AB/"/>
    
    
      <category term="dlib" scheme="http://yoursite.com/tags/dlib/"/>
    
      <category term="ubuntu" scheme="http://yoursite.com/tags/ubuntu/"/>
    
      <category term="人脸识别" scheme="http://yoursite.com/tags/%E4%BA%BA%E8%84%B8%E8%AF%86%E5%88%AB/"/>
    
      <category term="配置" scheme="http://yoursite.com/tags/%E9%85%8D%E7%BD%AE/"/>
    
      <category term="opencv" scheme="http://yoursite.com/tags/opencv/"/>
    
  </entry>
  
  <entry>
    <title>人脸深度图活体检测_SVM（Ubuntu+opencv3）</title>
    <link href="http://yoursite.com/2018/11/19/4/"/>
    <id>http://yoursite.com/2018/11/19/4/</id>
    <published>2018-11-19T12:57:19.000Z</published>
    <updated>2019-06-21T02:39:16.087Z</updated>
    
    <content type="html"><![CDATA[<h1 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h1><p>Ubuntu ，opencv3  </p><h1 id="数据准备"><a href="#数据准备" class="headerlink" title="数据准备"></a>数据准备</h1><p>原始深度图（已标定过人脸位置） 百度云盘：<a href="https://pan.baidu.com/s/1Hi85o521oIGaAfDoavOXeA" target="_blank" rel="noopener">https://pan.baidu.com/s/1Hi85o521oIGaAfDoavOXeA</a><br>使用MATLAB进行数据采集与处理：</p><a id="more"></a><p>1、运行dataGet_MATLAB/position_process.m，进行深度图片的人脸位置的快速批量标定，鼠标框出人脸位置，自动生成同名包含位置信息的txt文件。（百度云盘中已包含人脸位置信息，可跳过此步）</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">clc</span><br><span class="line">clear</span><br><span class="line">RAW_PATH = <span class="string">'/home/zhoujie/liveness detection/zjraw/face/'</span>;</span><br><span class="line">file =dir([RAW_PATH ,<span class="string">'*.raw'</span>]);</span><br><span class="line"><span class="keyword">for</span> num=<span class="number">1</span>:<span class="built_in">length</span>(file)</span><br><span class="line">f1 = fopen([RAW_PATH,file(num).name], <span class="string">'r'</span>);</span><br><span class="line">data0 = fread(f1, <span class="string">'uint16'</span>);</span><br><span class="line">fclose(f1);</span><br><span class="line">img1 = <span class="built_in">reshape</span>(data0, <span class="number">400</span>, <span class="number">345</span>);</span><br><span class="line">dep_img = img1';</span><br><span class="line">imshow(dep_img,[<span class="number">350</span>,<span class="number">800</span>]); </span><br><span class="line">mouse=imrect; </span><br><span class="line">pos=getPosition(mouse)<span class="comment">% x1 y1 w h </span></span><br><span class="line">pos=<span class="built_in">round</span>(pos);</span><br><span class="line">txtname = strrep(file(num).name,<span class="string">'.raw'</span>,<span class="string">'.txt'</span>);</span><br><span class="line">fp=fopen([RAW_PATH,txtname],<span class="string">'a'</span>);</span><br><span class="line">fprintf(fp,<span class="string">'%i %i %i %i\n'</span>,pos); </span><br><span class="line">fclose(fp);</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>2、运行dataGet_MATLAB/faceGet_process.m，进行人脸深度图的批量处理 ，需提前新建/data/face与/data/non-face空文件夹用来存放生成的正负训练样本</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line">clc</span><br><span class="line">clear</span><br><span class="line">RAW_PATH = <span class="string">'/home/zhoujie/liveness detection/zjraw/face/'</span>;</span><br><span class="line">jpg_path = <span class="string">'/home/zhoujie/liveness detection/svm/data/face/'</span>;</span><br><span class="line">file =dir([RAW_PATH ,<span class="string">'*.raw'</span>]);</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">j</span>=<span class="number">1</span>:<span class="built_in">length</span>(file)</span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">        f1 = fopen([RAW_PATH,file(<span class="built_in">j</span>).name], <span class="string">'r'</span>);</span><br><span class="line">        txtname = strrep(file(<span class="built_in">j</span>).name,<span class="string">'.raw'</span>,<span class="string">'.txt'</span>);</span><br><span class="line">        [par1,par2,par3,par4] = textread([RAW_PATH,txtname],<span class="string">'%d%d%d%d'</span>,<span class="number">1</span>);</span><br><span class="line">        data0 = fread(f1, <span class="string">'uint16'</span>);</span><br><span class="line">        fclose(f1);</span><br><span class="line">        img1 = <span class="built_in">reshape</span>(data0, <span class="number">400</span>, <span class="number">345</span>);</span><br><span class="line">        dep_img = img1';</span><br><span class="line">        <span class="keyword">try</span></span><br><span class="line">            face = dep_img(par2 :par2 +par4<span class="number">-2</span>,par1 :par1 + par3<span class="number">-2</span>);</span><br><span class="line">        <span class="keyword">catch</span></span><br><span class="line">             <span class="keyword">if</span> par2 +par4<span class="number">-2</span> &gt;<span class="number">345</span></span><br><span class="line">                 face_height = <span class="number">345</span>;</span><br><span class="line">             <span class="keyword">else</span></span><br><span class="line">                 face_height = par2 +par4<span class="number">-2</span>;</span><br><span class="line">             <span class="keyword">end</span></span><br><span class="line">             <span class="keyword">if</span> par1 +par3<span class="number">-2</span> &gt;<span class="number">400</span></span><br><span class="line">                face_weight = <span class="number">400</span>;</span><br><span class="line">             <span class="keyword">else</span></span><br><span class="line">                face_weight = par1 +par3<span class="number">-2</span>;</span><br><span class="line">             <span class="keyword">end</span></span><br><span class="line">             face = dep_img(par2 :face_height,par1 :face_weight);</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">        [m,n]=<span class="built_in">size</span>(face);</span><br><span class="line">         faceData = <span class="built_in">reshape</span>(face, <span class="number">1</span>, m*n);</span><br><span class="line">         faceData(<span class="built_in">find</span>(faceData==<span class="number">0</span>))=[];</span><br><span class="line">         able = <span class="number">0</span>;total = <span class="number">0</span>;</span><br><span class="line">         <span class="keyword">for</span> <span class="built_in">i</span> =<span class="number">1</span>:<span class="number">1000</span></span><br><span class="line">             num = randperm(<span class="built_in">length</span>(faceData),<span class="number">1</span>);</span><br><span class="line">             facePlane = faceData(num);</span><br><span class="line">             distance = <span class="built_in">abs</span>([<span class="number">-1</span>,faceData(num)]*[faceData;<span class="built_in">ones</span>(<span class="number">1</span>,<span class="built_in">length</span>(faceData))]);</span><br><span class="line">             total=sum(distance&lt;<span class="number">30</span>); </span><br><span class="line">             <span class="keyword">if</span> total&gt;able           </span><br><span class="line">                able=total;</span><br><span class="line">                bestfacePlane=facePlane;</span><br><span class="line">             <span class="keyword">end</span></span><br><span class="line">         <span class="keyword">end</span></span><br><span class="line">         xmax = bestfacePlane+<span class="number">50</span>;</span><br><span class="line">         xmin = bestfacePlane<span class="number">-50</span>;</span><br><span class="line">         face(<span class="built_in">find</span>(face &gt; xmax ))=xmax; </span><br><span class="line">         face(<span class="built_in">find</span>(face &lt; xmin ))=xmin; </span><br><span class="line">         ymax=<span class="number">255</span>;ymin=<span class="number">0</span>; </span><br><span class="line">         OutImg = <span class="built_in">round</span>((ymax-ymin)*(face-xmin)/(xmax-xmin) + ymin); <span class="comment">%归一化并取整</span></span><br><span class="line">         Outface=uint8(OutImg); </span><br><span class="line">         Outface = imresize(Outface, [<span class="number">40</span> <span class="number">40</span>]);</span><br><span class="line">         jpgname = [jpg_path,num2str(<span class="built_in">j</span>+<span class="number">538</span>),<span class="string">'.jpg'</span>];</span><br><span class="line">         imwrite(Outface,jpgname);      </span><br><span class="line">    <span class="keyword">catch</span></span><br><span class="line">        <span class="built_in">disp</span>(file(<span class="built_in">j</span>).name)</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20181119203439282.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ZmY2pqaHY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>新建文件夹data/train_image/1、data/train_image/0、data/test_image/1、data/test_image/0<br>data/face文件夹中的五分之四复制到data/train_image/1，剩下的复制到data/test_image/1<br>data/non-face文件夹中的五分之四复制到data/train_image/0，剩下的复制到data/test_image/0</p><h1 id="模型训练"><a href="#模型训练" class="headerlink" title="模型训练"></a>模型训练</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt; </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;time.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;opencv2/highgui/highgui.hpp&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;opencv2/ml/ml.hpp&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;dirent.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>; </span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> cv;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> cv::ml;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">getFiles</span><span class="params">( <span class="built_in">string</span> path, <span class="built_in">vector</span>&lt;<span class="built_in">string</span>&gt;&amp; files)</span></span>; </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">get_num</span><span class="params">(<span class="keyword">int</span> num, Mat&amp; trainingImages, <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; trainingLabels)</span></span>; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line">    <span class="comment">//获取训练数据 </span></span><br><span class="line">    Mat classes; </span><br><span class="line">    Mat trainingData;</span><br><span class="line">    Mat trainingImages; </span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; trainingLabels;</span><br><span class="line">    get_num(<span class="number">0</span>, trainingImages, trainingLabels);</span><br><span class="line">    get_num(<span class="number">1</span>, trainingImages, trainingLabels);</span><br><span class="line">    </span><br><span class="line">    Mat(trainingImages).copyTo(trainingData); </span><br><span class="line">    trainingData.convertTo(trainingData, CV_32FC1); </span><br><span class="line">    Mat(trainingLabels).copyTo(classes); </span><br><span class="line"></span><br><span class="line">    <span class="comment">//配置SVM训练器参数 </span></span><br><span class="line">    Ptr&lt;SVM&gt; svm = SVM::create();   </span><br><span class="line">    svm-&gt;setType(SVM::C_SVC);    </span><br><span class="line">    svm-&gt;setKernel(SVM::LINEAR); </span><br><span class="line">    </span><br><span class="line">    Ptr&lt;TrainData&gt; tData =TrainData::create(trainingData, ROW_SAMPLE, classes);</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"SVM: start train ..."</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">clock_t</span> start,finish;</span><br><span class="line">    <span class="keyword">double</span> totaltime;</span><br><span class="line">    start=clock();</span><br><span class="line"></span><br><span class="line">    svm-&gt;trainAuto(tData);  </span><br><span class="line">    svm-&gt;save(<span class="string">"svm.xml"</span>);</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"SVM: TRAIN SUCCESS !"</span>&lt;&lt;<span class="built_in">endl</span>; </span><br><span class="line">    finish=clock();</span><br><span class="line">    totaltime=(<span class="keyword">double</span>)(finish-start)/CLOCKS_PER_SEC;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"TRAIN TIME : "</span>&lt;&lt;totaltime&lt;&lt;<span class="string">" S ！"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="comment">// getchar(); </span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>; </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">getFiles</span><span class="params">( <span class="built_in">string</span> path, <span class="built_in">vector</span>&lt;<span class="built_in">string</span>&gt;&amp; files )</span> </span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line">    DIR *dir;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">dirent</span> *<span class="title">ptr</span>;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ((dir=opendir(path.c_str())) == <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">perror(<span class="string">"Open path error..."</span>);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> ((ptr=readdir(dir)) != <span class="literal">NULL</span>) </span><br><span class="line">    &#123; </span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">strcmp</span>(ptr-&gt;d_name,<span class="string">"."</span>)==<span class="number">0</span> || <span class="built_in">strcmp</span>(ptr-&gt;d_name,<span class="string">".."</span>)==<span class="number">0</span>) <span class="comment">///current dir OR parrent dir </span></span><br><span class="line">            <span class="keyword">continue</span>; </span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(ptr-&gt;d_type == <span class="number">8</span>) <span class="comment">///file </span></span><br><span class="line">            &#123;</span><br><span class="line">                files.push_back(ptr-&gt;d_name); </span><br><span class="line">            &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(ptr-&gt;d_type == <span class="number">10</span>) <span class="comment">///link file </span></span><br><span class="line">            &#123;<span class="keyword">continue</span>; &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(ptr-&gt;d_type == <span class="number">4</span>) <span class="comment">///dir </span></span><br><span class="line">        &#123; </span><br><span class="line">            files.push_back(ptr-&gt;d_name); </span><br><span class="line">        &#125; </span><br><span class="line">    &#125; </span><br><span class="line">    closedir(dir);</span><br><span class="line">    sort(files.begin(), files.end());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">get_num</span><span class="params">(<span class="keyword">int</span> num, Mat&amp; trainingImages, <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; trainingLabels)</span> </span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line">    <span class="built_in">string</span> numpath = <span class="string">"/home/zhoujie/liveness detection/svm/data/train_image/"</span>;</span><br><span class="line">    <span class="keyword">char</span> char_num[<span class="number">2</span>];</span><br><span class="line">    <span class="built_in">sprintf</span>(char_num,<span class="string">"%d"</span>,num);</span><br><span class="line">    <span class="built_in">string</span> str_num = char_num;</span><br><span class="line">    <span class="built_in">string</span> str = numpath + str_num;</span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">char</span>* filePath = str.data();</span><br><span class="line">    <span class="built_in">string</span> base;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="built_in">string</span>&gt; files;</span><br><span class="line">    getFiles(filePath, files); </span><br><span class="line">    <span class="keyword">int</span> number = files.size(); </span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; number;i++) </span><br><span class="line">    &#123; </span><br><span class="line">        <span class="comment">// cout &lt;&lt; "*************************** n = " &lt;&lt; i &lt;&lt; " ************************************ "&lt;&lt; endl; </span></span><br><span class="line">        base = str + <span class="string">"/"</span> + files[i];</span><br><span class="line">        Mat SrcImage=imread(base.c_str()); </span><br><span class="line">        SrcImage= SrcImage.reshape(<span class="number">1</span>, <span class="number">1</span>); </span><br><span class="line">        <span class="comment">// cout &lt;&lt; SrcImage &lt;&lt; endl; </span></span><br><span class="line">        trainingImages.push_back(SrcImage); </span><br><span class="line">        trainingLabels.push_back(num); </span><br><span class="line">    &#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行 svm_train.cpp  </p><blockquote><p>g++ svm_train.cpp `pkg-config –cflags –libs opencv` -o svm_train<br>./ svm_train   </p></blockquote><p>生成的SVM模型存储在根目录的svm.xml中</p><h1 id="模型测试"><a href="#模型测试" class="headerlink" title="模型测试"></a>模型测试</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;opencv2/highgui/highgui.hpp&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;opencv2/ml/ml.hpp&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;dirent.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>; </span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> cv; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">getFiles</span><span class="params">( <span class="built_in">string</span> path, <span class="built_in">vector</span>&lt;<span class="built_in">string</span>&gt;&amp; files )</span></span>; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> num = <span class="number">0</span>; num &lt; <span class="number">2</span>; num ++) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> response;</span><br><span class="line">        <span class="keyword">int</span> result = <span class="number">0</span>; </span><br><span class="line">        <span class="keyword">float</span> accuracy;</span><br><span class="line">        <span class="built_in">string</span> numpath = <span class="string">"/home/zhoujie/liveness detection/svm/data/test_image/"</span>;</span><br><span class="line">        <span class="keyword">char</span> char_num[<span class="number">2</span>];</span><br><span class="line">        <span class="built_in">sprintf</span>(char_num,<span class="string">"%d"</span>,num);</span><br><span class="line">        <span class="built_in">string</span> str_num = char_num;</span><br><span class="line">        <span class="built_in">string</span> str = numpath + str_num;</span><br><span class="line">        <span class="keyword">const</span> <span class="keyword">char</span>* filePath = str.data();</span><br><span class="line">        <span class="built_in">string</span> base;</span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="built_in">string</span>&gt; files; </span><br><span class="line">        getFiles(filePath, files ); </span><br><span class="line">        <span class="keyword">int</span> number = files.size(); </span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt;<span class="string">"文件夹"</span>&lt;&lt; num &lt;&lt;<span class="string">" 共有测试图片 "</span> &lt;&lt;number &lt;&lt;<span class="string">" 张"</span>&lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        Ptr&lt;ml::SVM&gt;svm = ml::SVM::load(<span class="string">"svm.xml"</span>);</span><br><span class="line">    </span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; number;i++) </span><br><span class="line">        &#123; </span><br><span class="line">            base = str + <span class="string">"/"</span> + files[i];</span><br><span class="line">            Mat inMat = imread(base.c_str()); </span><br><span class="line">            Mat p = inMat.reshape(<span class="number">1</span>, <span class="number">1</span>); </span><br><span class="line">            p.convertTo(p, CV_32FC1); </span><br><span class="line">            response = (<span class="keyword">int</span>)svm-&gt;predict(p);  <span class="comment">// 核心代码，将检测的图片的标签返回回来，结果保存在response中</span></span><br><span class="line">            <span class="comment">// cout &lt;&lt; "识别的数字为：" &lt;&lt; response &lt;&lt; endl;</span></span><br><span class="line">            <span class="keyword">if</span> (response == num) </span><br><span class="line">            &#123; </span><br><span class="line">                result++; </span><br><span class="line">            &#125; </span><br><span class="line"> <span class="comment">// else</span></span><br><span class="line"> <span class="comment">// &#123;</span></span><br><span class="line"> <span class="comment">// cout &lt;&lt; base.c_str() &lt;&lt; " ERROR ! " &lt;&lt; endl;</span></span><br><span class="line">         <span class="comment">// &#125;</span></span><br><span class="line">         &#125; </span><br><span class="line">        accuracy = result*<span class="number">1.0</span>/number;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"识别正确 "</span> &lt;&lt; result &lt;&lt;<span class="string">" 张，准确率： "</span>&lt;&lt; accuracy &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>; </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">getFiles</span><span class="params">( <span class="built_in">string</span> path, <span class="built_in">vector</span>&lt;<span class="built_in">string</span>&gt;&amp; files )</span> </span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line">    DIR *dir;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">dirent</span> *<span class="title">ptr</span>;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ((dir=opendir(path.c_str())) == <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">perror(<span class="string">"Open path error..."</span>);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> ((ptr=readdir(dir)) != <span class="literal">NULL</span>) </span><br><span class="line">    &#123; </span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">strcmp</span>(ptr-&gt;d_name,<span class="string">"."</span>)==<span class="number">0</span> || <span class="built_in">strcmp</span>(ptr-&gt;d_name,<span class="string">".."</span>)==<span class="number">0</span>) <span class="comment">///current dir OR parrent dir </span></span><br><span class="line">            <span class="keyword">continue</span>; </span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(ptr-&gt;d_type == <span class="number">8</span>) <span class="comment">///file </span></span><br><span class="line">            &#123;</span><br><span class="line">                files.push_back(ptr-&gt;d_name); </span><br><span class="line">            &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(ptr-&gt;d_type == <span class="number">10</span>) <span class="comment">///link file </span></span><br><span class="line">           &#123; </span><br><span class="line"><span class="keyword">continue</span>; </span><br><span class="line">   &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(ptr-&gt;d_type == <span class="number">4</span>) <span class="comment">///dir </span></span><br><span class="line">           &#123; </span><br><span class="line">                files.push_back(ptr-&gt;d_name); </span><br><span class="line">           &#125; </span><br><span class="line">    &#125; </span><br><span class="line">    closedir(dir);</span><br><span class="line">    sort(files.begin(), files.end());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行 svm_test.cpp  </p><blockquote><p>g++ svm_test.cpp `pkg-config –cflags –libs opencv` -o svm_test<br>./ svm_test   </p></blockquote><h1 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果"></a>运行结果</h1><p><img src="https://img-blog.csdnimg.cn/20181119205230390.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ZmY2pqaHY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>项目地址 ：<a href="https://github.com/zj19941113/FaceLivenessDetection_SVM" target="_blank" rel="noopener">https://github.com/zj19941113/FaceLivenessDetection_SVM</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;环境&quot;&gt;&lt;a href=&quot;#环境&quot; class=&quot;headerlink&quot; title=&quot;环境&quot;&gt;&lt;/a&gt;环境&lt;/h1&gt;&lt;p&gt;Ubuntu ，opencv3  &lt;/p&gt;
&lt;h1 id=&quot;数据准备&quot;&gt;&lt;a href=&quot;#数据准备&quot; class=&quot;headerlink&quot; title=&quot;数据准备&quot;&gt;&lt;/a&gt;数据准备&lt;/h1&gt;&lt;p&gt;原始深度图（已标定过人脸位置） 百度云盘：&lt;a href=&quot;https://pan.baidu.com/s/1Hi85o521oIGaAfDoavOXeA&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://pan.baidu.com/s/1Hi85o521oIGaAfDoavOXeA&lt;/a&gt;&lt;br&gt;使用MATLAB进行数据采集与处理：&lt;/p&gt;
    
    </summary>
    
      <category term="活体检测" scheme="http://yoursite.com/categories/%E6%B4%BB%E4%BD%93%E6%A3%80%E6%B5%8B/"/>
    
    
      <category term="活体检测" scheme="http://yoursite.com/tags/%E6%B4%BB%E4%BD%93%E6%A3%80%E6%B5%8B/"/>
    
      <category term="近红外人脸定位" scheme="http://yoursite.com/tags/%E8%BF%91%E7%BA%A2%E5%A4%96%E4%BA%BA%E8%84%B8%E5%AE%9A%E4%BD%8D/"/>
    
      <category term="SVM" scheme="http://yoursite.com/tags/SVM/"/>
    
  </entry>
  
  <entry>
    <title>C++ 时间类型及相互转换详解 time_t与tm</title>
    <link href="http://yoursite.com/2018/10/25/3/"/>
    <id>http://yoursite.com/2018/10/25/3/</id>
    <published>2018-10-25T03:18:28.000Z</published>
    <updated>2019-06-21T02:36:38.686Z</updated>
    
    <content type="html"><![CDATA[<p>时间常见的有两种存储方式:<br><strong>time_t</strong> :整数类型 用来存储从1970年到现在经过了多少秒<br><strong>tm</strong> :结构类型 把日期和时间以 C 结构的形式保存，tm 结构的定义如下：</p><a id="more"></a><p>struct tm {<br>  int tm_sec;   // 秒，正常范围从 0 到 59，但允许至 61<br>  int tm_min;   // 分，范围从 0 到 59<br>  int tm_hour;  // 小时，范围从 0 到 23<br>  int tm_mday;  // 一月中的第几天，范围从 1 到 31<br>  int tm_mon;   // 月，范围从 0 到 11<br>  int tm_year;  // 自 1900 年起的年数<br>  int tm_wday;  // 一周中的第几天，范围从 0 到 6，从星期日算起<br>  int tm_yday;  // 一年中的第几天，范围从 0 到 365，从 1 月 1 日算起<br>  int tm_isdst; // 夏令时<br>}</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;time.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt; </span></span></span><br><span class="line"> <span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span>  </span></span><br><span class="line"><span class="function"></span>&#123;   <span class="keyword">time_t</span> timep;    </span><br><span class="line">    time(&amp;timep); <span class="comment">/*获取time_t类型的当前时间*/</span>  </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%s"</span>, asctime(gmtime(&amp;timep)));  </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出为UTC时间：</p><blockquote><p>Thu Oct 25 01:49:20 2018</p></blockquote><p>用<strong>gmtime</strong>将time_t类型的时间转换为<code>struct tm</code>类型的时间，按没有经过时区转换的UTC时间，然后再用<strong>asctime</strong>转换为我们常见的格式 Thu Oct 25 01:49:20 2018</p><p>修改时间输出格式：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt; </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;time.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> *wday[] = &#123;<span class="string">"Sun"</span>, <span class="string">"Mon"</span>, <span class="string">"Tue"</span>, <span class="string">"Wed"</span>, <span class="string">"Thu"</span>, <span class="string">"Fri"</span>, <span class="string">"Sat"</span>&#125;;</span><br><span class="line">    <span class="keyword">time_t</span> timep;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">tm</span> *<span class="title">p</span>;</span></span><br><span class="line">   </span><br><span class="line">    time(&amp;timep); <span class="comment">/*获得time_t结构的时间，UTC时间*/</span></span><br><span class="line">    p = localtime(&amp;timep); <span class="comment">/*转换为struct tm结构的本地时间*/</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d/%d/%d "</span>, <span class="number">1900</span> + p-&gt;tm_year, <span class="number">1</span> + p-&gt;tm_mon, p-&gt;tm_mday);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%s %d:%d:%d\n"</span>, wday[p-&gt;tm_wday], p-&gt;tm_hour,</span><br><span class="line">        p-&gt;tm_min, p-&gt;tm_sec);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出为本地时间：</p><blockquote><p>2018/10/25 Thu 09:49:20</p></blockquote><p>常用时间函数：<br><code>time_t time(time_t* t);</code><br>//取得从1970年1月1日至今的秒数</p><p><code>char *asctime(const struct tm* timeptr);</code><br>//将结构中的信息转换为真实世界的时间，以字符串的形式显示</p><p><code>char *ctime(const time_t* timep);</code><br>//将timep转换为真是世界的时间，以字符串显示</p><p><code>struct tm* gmtime(const time_t* timep);</code><br>//将time_t表示的时间转换为没有经过时区转换的UTC时间，是一个struct tm结构指针</p><p><code>struct tm* localtime(const time_t* timep);</code><br>//和gmtime类似，但是它是经过时区转换的时间</p><p><code>time_t mktime(struct tm* timeptr);</code><br>//将struct tm 结构的时间转换为从1970年至今的秒数</p><p>C语言中，#include &lt; time.h &gt; </p><blockquote><p>time_t timep;<br>time(&amp;timep);  /* 获取 time_t 类型的当前时间 */</p></blockquote><p>  C++中，#include &lt; ctime &gt;</p><blockquote><p>time_t now = time(0); // 基于当前系统的当前日期/时间</p></blockquote><p>转换关系如下图：<br><img src="https://img-blog.csdn.net/20181025111627283?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ZmY2pqaHY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="转换关系"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;时间常见的有两种存储方式:&lt;br&gt;&lt;strong&gt;time_t&lt;/strong&gt; :整数类型 用来存储从1970年到现在经过了多少秒&lt;br&gt;&lt;strong&gt;tm&lt;/strong&gt; :结构类型 把日期和时间以 C 结构的形式保存，tm 结构的定义如下：&lt;/p&gt;
    
    </summary>
    
      <category term="算法语言" scheme="http://yoursite.com/categories/%E7%AE%97%E6%B3%95%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="C++" scheme="http://yoursite.com/tags/C/"/>
    
      <category term="语法" scheme="http://yoursite.com/tags/%E8%AF%AD%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>C++ 近红外人脸定位与深度图人脸活体检测（.raw深度图像）</title>
    <link href="http://yoursite.com/2018/10/22/2/"/>
    <id>http://yoursite.com/2018/10/22/2/</id>
    <published>2018-10-22T03:35:07.000Z</published>
    <updated>2019-06-19T04:19:33.011Z</updated>
    
    <content type="html"><![CDATA[<p>通过深度相机的红外图进行人脸位置定位，传给深度图进行活体检测<br>注：利用rgb传来的位置对应到深度图上偏差过大，直接利用深度相机产生的红外图像进行人脸位置的确定更加精准。</p><a id="more"></a><h2 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h2><p>dlib_test.cpp</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;dlib/image_processing/frontal_face_detector.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;dlib/gui_widgets.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;dlib/image_io.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;time.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdbool.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> dlib;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 函数声明 */</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> *<span class="title">face_location</span><span class="params">(<span class="keyword">char</span> *imgFile)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">liveness_detection</span><span class="params">(<span class="keyword">char</span> *DeepFile, <span class="keyword">int</span> rec_face[<span class="number">4</span>])</span></span>;  </span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> IMG_HEIGHT =  <span class="number">720</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> IMG_WIDTH =  <span class="number">1280</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> *imgFile = <span class="string">"/home/zhoujie/cProject/dlib_test/0001_IR_frontface.jpg"</span>;</span><br><span class="line"><span class="keyword">int</span> *rec_face;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 调用函数得到人脸位置 */</span></span><br><span class="line">    <span class="comment">// Eg:rec_face = &#123;157 ,66 ,172 ,198 &#125;, 行取66：66+198,列取157：157+172</span></span><br><span class="line">rec_face = face_location(imgFile);</span><br><span class="line"></span><br><span class="line"><span class="comment">//深度图与红外图是水平翻转的</span></span><br><span class="line">rec_face[<span class="number">0</span>] = IMG_WIDTH - rec_face[<span class="number">0</span>] -rec_face[<span class="number">2</span>]; </span><br><span class="line">    </span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; rec_face[<span class="number">0</span>] &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; rec_face[<span class="number">1</span>] &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; rec_face[<span class="number">2</span>] &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; rec_face[<span class="number">3</span>] &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">char</span> *DeepFile = <span class="string">"/home/zhoujie/cProject/dlib_test/raw_0001_frontface.raw"</span>;</span><br><span class="line"><span class="keyword">bool</span> IS_FACE;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 调用函数判断是否为活体 */</span></span><br><span class="line">    IS_FACE = liveness_detection( DeepFile, rec_face);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"RESULT : %d\n"</span>, IS_FACE);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">delete</span> rec_face;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 函数 输出人脸位置 */</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> *<span class="title">face_location</span><span class="params">(<span class="keyword">char</span>* imgFile)</span></span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">    <span class="keyword">int</span> *rec_face = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">4</span>];</span><br><span class="line"></span><br><span class="line">    frontal_face_detector detector = get_frontal_face_detector();</span><br><span class="line"></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"processing image "</span> &lt;&lt; imgFile &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">clock_t</span> start,finish;</span><br><span class="line">    <span class="keyword">double</span> totaltime;</span><br><span class="line">    start=clock();</span><br><span class="line"></span><br><span class="line">    array2d&lt;<span class="keyword">unsigned</span> <span class="keyword">char</span>&gt; img;</span><br><span class="line">    load_image(img, imgFile);</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">vector</span>&lt;rectangle&gt; dets = detector(img);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"Number of faces detected: "</span> &lt;&lt; dets.size() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    rec_face[<span class="number">0</span>] = dets[<span class="number">0</span>].left();</span><br><span class="line">    rec_face[<span class="number">1</span>] = dets[<span class="number">0</span>].top();</span><br><span class="line">    rec_face[<span class="number">2</span>] = dets[<span class="number">0</span>].right() - dets[<span class="number">0</span>].left() + <span class="number">1</span>;</span><br><span class="line">    rec_face[<span class="number">3</span>] = dets[<span class="number">0</span>].bottom() - dets[<span class="number">0</span>].top() + <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    finish=clock();</span><br><span class="line">    totaltime=(<span class="keyword">double</span>)(finish-start)/CLOCKS_PER_SEC;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"\n此程序的运行时间为"</span>&lt;&lt;totaltime&lt;&lt;<span class="string">"秒！"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// delete rec_face;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span>  rec_face;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 函数判断是否为活体 */</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">liveness_detection</span><span class="params">(<span class="keyword">char</span> *DeepFile, <span class="keyword">int</span> rec_face[<span class="number">4</span>])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">int</span> ITER = <span class="number">10000</span>; <span class="comment">// 随机取点次数</span></span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">float</span> PLANE_OR_NOT = <span class="number">0.1</span>; <span class="comment">// 判断是否为平面的分界线</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> SIGMA = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">short</span> UNIT16;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 从.raw读取二进制16位数据到MatDATA</span></span><br><span class="line">UNIT16 MatDATA[IMG_HEIGHT*IMG_WIDTH];</span><br><span class="line">FILE *fp = <span class="literal">NULL</span>;</span><br><span class="line">fp = fopen( DeepFile, <span class="string">"rb"</span> );</span><br><span class="line">    fread(MatDATA,<span class="keyword">sizeof</span>(UNIT16),IMG_HEIGHT*IMG_WIDTH,fp);</span><br><span class="line">fclose(fp);</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> i,j;</span><br><span class="line"><span class="keyword">int</span> COL = rec_face[<span class="number">0</span>],ROW = rec_face[<span class="number">1</span>],FACE_WIDTH = rec_face[<span class="number">2</span>],FACE_HEIGHT = rec_face[<span class="number">3</span>]; <span class="comment">//位置信息</span></span><br><span class="line"><span class="comment">// txt :157 66 172 198 , 取行66：66+198,列取157：157+172</span></span><br><span class="line"><span class="keyword">int</span> faceno0_num = FACE_HEIGHT*FACE_WIDTH <span class="number">-1</span>; </span><br><span class="line"><span class="keyword">int</span> FaceDATA[<span class="number">3</span>][<span class="number">160000</span>];</span><br><span class="line">n = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(i = <span class="number">1</span>;i&lt; FACE_HEIGHT+<span class="number">1</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(j= <span class="number">1</span>;j&lt; FACE_WIDTH+<span class="number">1</span>;j++) </span><br><span class="line">&#123; </span><br><span class="line"><span class="keyword">if</span> (MatDATA[IMG_WIDTH*(ROW+i<span class="number">-2</span>)+COL+j<span class="number">-2</span>] == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">faceno0_num -= <span class="number">1</span>; <span class="comment">// 非零深度点个数为 faceno0_num+1</span></span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line">FaceDATA[<span class="number">1</span>][n] = i;</span><br><span class="line">FaceDATA[<span class="number">0</span>][n] = j; </span><br><span class="line">FaceDATA[<span class="number">2</span>][n] = MatDATA[IMG_WIDTH*(ROW+i<span class="number">-2</span>)+COL+j<span class="number">-2</span>];</span><br><span class="line">n += <span class="number">1</span>;</span><br><span class="line">&#125; </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> pretotal = <span class="number">0</span>;  <span class="comment">// 符合拟合模型的数据的个数</span></span><br><span class="line"><span class="keyword">int</span> x[<span class="number">3</span>],y[<span class="number">3</span>],z[<span class="number">3</span>];  <span class="comment">// 随机取三个点 </span></span><br><span class="line">srand((<span class="keyword">unsigned</span>)time(<span class="literal">NULL</span>));</span><br><span class="line"><span class="keyword">float</span> a,b,c;  <span class="comment">// 拟合平面方程 z=ax+by+c</span></span><br><span class="line"><span class="comment">// float besta,bestb,bestc;  // 最佳参数</span></span><br><span class="line"><span class="keyword">int</span> rand_num[<span class="number">3</span>];</span><br><span class="line"><span class="keyword">float</span> check,distance;</span><br><span class="line"><span class="keyword">int</span> total = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; ITER; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">do</span>&#123;</span><br><span class="line">rand_num[<span class="number">0</span>] = <span class="built_in">std</span>::rand()%faceno0_num; </span><br><span class="line">rand_num[<span class="number">1</span>] = <span class="built_in">std</span>::rand()%faceno0_num; </span><br><span class="line">rand_num[<span class="number">2</span>] = <span class="built_in">std</span>::rand()%faceno0_num; </span><br><span class="line">&#125;<span class="keyword">while</span>(rand_num[<span class="number">0</span>] == rand_num[<span class="number">1</span>] || rand_num[<span class="number">0</span>] == rand_num[<span class="number">2</span>] || rand_num[<span class="number">1</span>] == rand_num[<span class="number">2</span>]);</span><br><span class="line"><span class="keyword">for</span>(n = <span class="number">0</span>; n &lt; <span class="number">3</span>; n++ )</span><br><span class="line">&#123;</span><br><span class="line">x[n] = FaceDATA[<span class="number">0</span>][rand_num[n]];</span><br><span class="line">y[n] = FaceDATA[<span class="number">1</span>][rand_num[n]];</span><br><span class="line">z[n] = FaceDATA[<span class="number">2</span>][rand_num[n]];</span><br><span class="line"><span class="comment">// printf("%d,%d,%d,%d\n", x[n],y[n],z[n],n);</span></span><br><span class="line">&#125;</span><br><span class="line">check = (x[<span class="number">0</span>]-x[<span class="number">1</span>])*(y[<span class="number">0</span>]-y[<span class="number">2</span>]) - (x[<span class="number">0</span>]-x[<span class="number">2</span>])*(y[<span class="number">0</span>]-y[<span class="number">1</span>]);</span><br><span class="line"><span class="keyword">if</span> ( check == <span class="number">0</span>)  <span class="comment">// 防止提示浮点数例外 (核心已转储)</span></span><br><span class="line">&#123;</span><br><span class="line">i -= <span class="number">1</span>;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line">a = ( (z[<span class="number">0</span>]-z[<span class="number">1</span>])*(y[<span class="number">0</span>]-y[<span class="number">2</span>]) - (z[<span class="number">0</span>]-z[<span class="number">2</span>])*(y[<span class="number">0</span>]-y[<span class="number">1</span>]) )/( (x[<span class="number">0</span>]-x[<span class="number">1</span>])*(y[<span class="number">0</span>]-y[<span class="number">2</span>]) - (x[<span class="number">0</span>]-x[<span class="number">2</span>])*(y[<span class="number">0</span>]-y[<span class="number">1</span>]) );</span><br><span class="line">        <span class="keyword">if</span> (y[<span class="number">0</span>] == y[<span class="number">2</span>])  <span class="comment">// 防止提示浮点数例外 (核心已转储)</span></span><br><span class="line">&#123;</span><br><span class="line">i -= <span class="number">1</span>;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line">b = ((z[<span class="number">0</span>] - z[<span class="number">2</span>]) - a * (x[<span class="number">0</span>] - x[<span class="number">2</span>]))/(y[<span class="number">0</span>]-y[<span class="number">2</span>]);</span><br><span class="line">        c = z[<span class="number">0</span>]- a * x[<span class="number">0</span>] - b * y[<span class="number">0</span>];</span><br><span class="line"><span class="comment">// printf("%f,%f,%f\n",a,b,c);</span></span><br><span class="line">total = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(n = <span class="number">0</span>; n &lt; faceno0_num +<span class="number">1</span> ; n++ )</span><br><span class="line">&#123;</span><br><span class="line">distance = <span class="built_in">fabs</span>(a*FaceDATA[<span class="number">0</span>][n] + b*FaceDATA[<span class="number">1</span>][n] - <span class="number">1</span>*FaceDATA[<span class="number">2</span>][n] + c*<span class="number">1</span>);</span><br><span class="line"><span class="keyword">if</span> (distance &lt; SIGMA)</span><br><span class="line">&#123;</span><br><span class="line">total +=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// printf("%d,%f,%d\n",i,distance,total);</span></span><br><span class="line"><span class="keyword">if</span> (total &gt; pretotal)  <span class="comment">// 找到符合拟合平面数据最多的拟合平面</span></span><br><span class="line">        &#123;</span><br><span class="line">pretotal=total;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">float</span> pretotal_ary = pretotal *<span class="number">1.0</span>/ faceno0_num ;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d,%f\n"</span>, pretotal,pretotal_ary);</span><br><span class="line"><span class="keyword">bool</span> IS_FACE;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (pretotal_ary &lt; PLANE_OR_NOT)</span><br><span class="line">&#123;</span><br><span class="line">IS_FACE =  <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">IS_FACE = <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span>  IS_FACE;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Ubuntu下编译Dlib库参考这里 <a href="https://blog.csdn.net/ffcjjhv/article/details/84660869" target="_blank" rel="noopener">https://blog.csdn.net/ffcjjhv/article/details/84660869</a><br>修改CMakeLists.txt相应路径<br><code>cmake .</code><br><code>make</code><br><code>./dlib_test</code>  </p><h2 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果"></a>运行结果</h2><p><img src="https://img-blog.csdnimg.cn/20181204145758796.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ZmY2pqaHY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>项目地址：<a href="https://github.com/zj19941113/Face-Liveness_detection" target="_blank" rel="noopener">https://github.com/zj19941113/Face-Liveness_detection</a></p><h3 id="活检部分原理"><a href="#活检部分原理" class="headerlink" title="活检部分原理"></a>活检部分原理</h3><p>Func_liveness_detection.c</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;dirent.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;time.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdbool.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> IMG_HEIGHT =  <span class="number">345</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> IMG_WIDTH =  <span class="number">400</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> ITER = <span class="number">10000</span>; <span class="comment">// 随机取点次数</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">float</span> PLANE_OR_NOT = <span class="number">0.1</span>; <span class="comment">// 判断是否为平面的分界线</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">short</span> UNIT16;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">readFileList</span><span class="params">(<span class="keyword">char</span> *basePath)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    DIR *dir;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">dirent</span> *<span class="title">ptr</span>;</span> </span><br><span class="line">    <span class="keyword">char</span> base[<span class="number">8</span>]; </span><br><span class="line">    <span class="keyword">char</span> title[<span class="number">4</span>];</span><br><span class="line">    <span class="keyword">char</span> *p=<span class="string">".raw"</span>; <span class="comment">//需要的子串;</span></span><br><span class="line">    <span class="keyword">char</span> *p2=<span class="string">".txt"</span>;</span><br><span class="line">    <span class="keyword">char</span> *padd=<span class="string">"/"</span>;</span><br><span class="line">    <span class="keyword">int</span> len;</span><br><span class="line">    <span class="keyword">char</span> Deepfile_raw[<span class="number">100</span>];</span><br><span class="line">    <span class="keyword">char</span> Deepfile_txt[<span class="number">100</span>];</span><br><span class="line"></span><br><span class="line">    UNIT16 MatDATA[IMG_HEIGHT*IMG_WIDTH];</span><br><span class="line">    FILE *fp = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">int</span> DeepDATA[<span class="number">3</span>][IMG_HEIGHT*IMG_WIDTH];</span><br><span class="line">    <span class="keyword">int</span> length;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="keyword">int</span> i,j;</span><br><span class="line">    FILE *fp2 = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">char</span> buf[<span class="number">20</span>];</span><br><span class="line">    <span class="keyword">char</span> *ptr2;</span><br><span class="line">    <span class="keyword">int</span> rec_face[<span class="number">4</span>];</span><br><span class="line">    <span class="keyword">int</span> COL ,ROW ,FACE_WIDTH ,FACE_HEIGHT ; </span><br><span class="line">    <span class="keyword">int</span> FaceDATA[<span class="number">3</span>][<span class="number">40000</span>];</span><br><span class="line">    <span class="keyword">int</span> faceno0_num ;</span><br><span class="line">    <span class="keyword">int</span> sigma = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">int</span> pretotal;  <span class="comment">// 符合拟合模型的数据的个数</span></span><br><span class="line">    <span class="keyword">int</span> x[<span class="number">3</span>],y[<span class="number">3</span>],z[<span class="number">3</span>];  <span class="comment">// 随机取三个点 </span></span><br><span class="line">    <span class="keyword">float</span> a,b,c;  <span class="comment">// 拟合平面方程 z=ax+by+c</span></span><br><span class="line">    <span class="comment">// float besta,bestb,bestc;  // 最佳参数</span></span><br><span class="line">    <span class="keyword">int</span> rand_num[<span class="number">3</span>];</span><br><span class="line">    <span class="keyword">float</span> check,distance;</span><br><span class="line">    <span class="keyword">int</span> total;</span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ((dir=opendir(basePath)) == <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        perror(<span class="string">"Open dir error..."</span>);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> ((ptr=readdir(dir)) != <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">strcpy</span>(base, ptr-&gt;d_name);</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">strstr</span>(base,p)) </span><br><span class="line">        &#123;</span><br><span class="line">            len = <span class="built_in">strlen</span>(base);</span><br><span class="line">            <span class="built_in">memset</span>(title, <span class="string">'\0'</span>, <span class="keyword">sizeof</span>(title));</span><br><span class="line">            <span class="built_in">strncpy</span>(title, base, len <span class="number">-4</span>);</span><br><span class="line">            <span class="built_in">strcpy</span>(Deepfile_raw, basePath);</span><br><span class="line">            <span class="built_in">strcat</span>(Deepfile_raw, padd);</span><br><span class="line">            <span class="built_in">strcat</span>(Deepfile_raw, title);</span><br><span class="line">            <span class="built_in">strcpy</span>(Deepfile_txt, Deepfile_raw);</span><br><span class="line">            <span class="built_in">strcat</span>(Deepfile_raw, p);</span><br><span class="line">            <span class="built_in">strcat</span>(Deepfile_txt, p2);</span><br><span class="line">            <span class="comment">// printf("%s\n",Deepfile_raw); </span></span><br><span class="line">            <span class="comment">// printf("%s\n",Deepfile_txt); </span></span><br><span class="line"></span><br><span class="line">            <span class="comment">// 从.raw读取二进制16位数据到MatDATA </span></span><br><span class="line">            fp = fopen( Deepfile_raw, <span class="string">"rb"</span> );</span><br><span class="line">            fread(MatDATA,<span class="keyword">sizeof</span>(UNIT16),IMG_HEIGHT*IMG_WIDTH,fp);</span><br><span class="line">            fclose(fp);</span><br><span class="line">            <span class="comment">// length = sizeof(MatDATA) / sizeof(UNIT16); </span></span><br><span class="line">            <span class="comment">// printf("数组的长度为: %d\n",length); //length 应为IMG_HEIGHT*IMG_WIDTH</span></span><br><span class="line">            n = <span class="number">0</span>;</span><br><span class="line">            <span class="comment">// DeepDATA三行分别为深度图行数，列数，深度信息</span></span><br><span class="line">            <span class="keyword">for</span>(i=<span class="number">1</span>;i&lt; IMG_HEIGHT+<span class="number">1</span> ;i++)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">for</span>(j=<span class="number">1</span>;j&lt; IMG_WIDTH+<span class="number">1</span> ;j++) </span><br><span class="line">                    &#123; </span><br><span class="line">                        DeepDATA[<span class="number">0</span>][n] = i;</span><br><span class="line">                        DeepDATA[<span class="number">1</span>][n] = j;</span><br><span class="line">                        DeepDATA[<span class="number">2</span>][n] = MatDATA[n];</span><br><span class="line">                        n += <span class="number">1</span>;</span><br><span class="line">                    &#125; </span><br><span class="line">                &#125; </span><br><span class="line">            <span class="comment">// int test1 = 110194 ;</span></span><br><span class="line">            <span class="comment">// printf("%d,%d,%d\n",DeepDATA[0][test1],DeepDATA[1][test1],DeepDATA[2][test1]);</span></span><br><span class="line">            </span><br><span class="line">            <span class="comment">// FaceDATA为深度图DeepDATA裁剪后且去除零深度信息后的人脸部分</span></span><br><span class="line">            n = <span class="number">0</span>;</span><br><span class="line">            fp2 = fopen(Deepfile_txt, <span class="string">"r"</span>);</span><br><span class="line">            fgets(buf, <span class="number">20</span>, fp2);</span><br><span class="line">            <span class="comment">// printf("%s\n", buf );</span></span><br><span class="line">            ptr2 = strtok(buf, <span class="string">" "</span>);</span><br><span class="line">            <span class="keyword">for</span>(n = <span class="number">0</span>; n &lt; <span class="number">4</span>; n++)</span><br><span class="line">            &#123;</span><br><span class="line">                rec_face[n] = atoi(ptr2);</span><br><span class="line">                ptr2 = strtok(<span class="literal">NULL</span>, <span class="string">" "</span>);</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">            fclose(fp2);</span><br><span class="line">            COL = rec_face[<span class="number">0</span>],ROW = rec_face[<span class="number">1</span>],FACE_WIDTH = rec_face[<span class="number">2</span>],FACE_HEIGHT = rec_face[<span class="number">3</span>]; <span class="comment">//位置信息</span></span><br><span class="line">            <span class="comment">// txt :157 66 172 198 , 取行66：66+198,列取157：157+172</span></span><br><span class="line">            faceno0_num = FACE_HEIGHT*FACE_WIDTH <span class="number">-1</span>; </span><br><span class="line">            n = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span>(i = <span class="number">1</span>;i&lt; FACE_HEIGHT+<span class="number">1</span>;i++)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">for</span>(j= <span class="number">1</span>;j&lt; FACE_WIDTH+<span class="number">1</span>;j++) </span><br><span class="line">                    &#123; </span><br><span class="line">                        <span class="keyword">if</span> (MatDATA[IMG_WIDTH*(ROW+i<span class="number">-2</span>)+COL+j<span class="number">-2</span>] == <span class="number">0</span>)</span><br><span class="line">                        &#123;</span><br><span class="line">                            faceno0_num -= <span class="number">1</span>; <span class="comment">// 非零深度点个数为 faceno0_num+1</span></span><br><span class="line">                            <span class="keyword">continue</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                        FaceDATA[<span class="number">1</span>][n] = i;</span><br><span class="line">                        FaceDATA[<span class="number">0</span>][n] = j; </span><br><span class="line">                        FaceDATA[<span class="number">2</span>][n] = MatDATA[IMG_WIDTH*(ROW+i<span class="number">-2</span>)+COL+j<span class="number">-2</span>];</span><br><span class="line">                        n += <span class="number">1</span>;</span><br><span class="line">                    &#125; </span><br><span class="line">                &#125; </span><br><span class="line">            <span class="comment">// int test = 6804;  </span></span><br><span class="line">            <span class="comment">// printf("%d,%d,%d,%d\n",test,FaceDATA[0][test],FaceDATA[1][test],FaceDATA[2][test]);</span></span><br><span class="line">            </span><br><span class="line">            srand((<span class="keyword">unsigned</span>)time(<span class="literal">NULL</span>));</span><br><span class="line">            pretotal = <span class="number">0</span>;</span><br><span class="line">            total = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; ITER; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">do</span>&#123;</span><br><span class="line">                    rand_num[<span class="number">0</span>] = rand()%faceno0_num; </span><br><span class="line">                    rand_num[<span class="number">1</span>] = rand()%faceno0_num; </span><br><span class="line">                    rand_num[<span class="number">2</span>] = rand()%faceno0_num; </span><br><span class="line">                &#125;<span class="keyword">while</span>(rand_num[<span class="number">0</span>] == rand_num[<span class="number">1</span>] || rand_num[<span class="number">0</span>] == rand_num[<span class="number">2</span>] || rand_num[<span class="number">1</span>] == rand_num[<span class="number">2</span>]);</span><br><span class="line">                <span class="keyword">for</span>(n = <span class="number">0</span>; n &lt; <span class="number">3</span>; n++ )</span><br><span class="line">                &#123;</span><br><span class="line">                    x[n] = FaceDATA[<span class="number">0</span>][rand_num[n]];</span><br><span class="line">                    y[n] = FaceDATA[<span class="number">1</span>][rand_num[n]];</span><br><span class="line">                    z[n] = FaceDATA[<span class="number">2</span>][rand_num[n]];</span><br><span class="line">                    <span class="comment">// printf("%d,%d,%d,%d\n", x[n],y[n],z[n],n);</span></span><br><span class="line">                &#125;</span><br><span class="line">                check = (x[<span class="number">0</span>]-x[<span class="number">1</span>])*(y[<span class="number">0</span>]-y[<span class="number">2</span>]) - (x[<span class="number">0</span>]-x[<span class="number">2</span>])*(y[<span class="number">0</span>]-y[<span class="number">1</span>]);</span><br><span class="line">                <span class="keyword">if</span> ( check == <span class="number">0</span>)  <span class="comment">// 防止提示浮点数例外 (核心已转储)</span></span><br><span class="line">                &#123;</span><br><span class="line">                    i -= <span class="number">1</span>;</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                a = ( (z[<span class="number">0</span>]-z[<span class="number">1</span>])*(y[<span class="number">0</span>]-y[<span class="number">2</span>]) - (z[<span class="number">0</span>]-z[<span class="number">2</span>])*(y[<span class="number">0</span>]-y[<span class="number">1</span>]) )*<span class="number">1.0</span>/( (x[<span class="number">0</span>]-x[<span class="number">1</span>])*(y[<span class="number">0</span>]-y[<span class="number">2</span>]) - (x[<span class="number">0</span>]-x[<span class="number">2</span>])*(y[<span class="number">0</span>]-y[<span class="number">1</span>]) );</span><br><span class="line">                <span class="keyword">if</span> (y[<span class="number">0</span>] == y[<span class="number">2</span>])  <span class="comment">// 防止提示浮点数例外 (核心已转储)</span></span><br><span class="line">                &#123;</span><br><span class="line">                    i -= <span class="number">1</span>;</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                b = ((z[<span class="number">0</span>] - z[<span class="number">2</span>]) - a * (x[<span class="number">0</span>] - x[<span class="number">2</span>]))*<span class="number">1.0</span>/(y[<span class="number">0</span>]-y[<span class="number">2</span>]);</span><br><span class="line">                c = z[<span class="number">0</span>]- a * x[<span class="number">0</span>] - b * y[<span class="number">0</span>];</span><br><span class="line">                <span class="comment">// printf("%f,%f,%f\n",a,b,c);</span></span><br><span class="line">                total = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">for</span>(n = <span class="number">0</span>; n &lt; faceno0_num +<span class="number">1</span> ; n++ )</span><br><span class="line">                &#123;</span><br><span class="line">                    distance = <span class="built_in">fabs</span>(a*FaceDATA[<span class="number">0</span>][n] + b*FaceDATA[<span class="number">1</span>][n] - <span class="number">1</span>*FaceDATA[<span class="number">2</span>][n] + c*<span class="number">1</span>);</span><br><span class="line">                    <span class="keyword">if</span> (distance &lt; sigma)</span><br><span class="line">                    &#123;</span><br><span class="line">                        total +=<span class="number">1</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">// printf("%d,%f,%d\n",i,distance,total);</span></span><br><span class="line">                <span class="keyword">if</span> (total &gt; pretotal)  <span class="comment">// 找到符合拟合平面数据最多的拟合平面</span></span><br><span class="line">                &#123;</span><br><span class="line">                    pretotal=total;</span><br><span class="line">                    <span class="comment">// besta = a;</span></span><br><span class="line">                    <span class="comment">// bestb = b;</span></span><br><span class="line">                    <span class="comment">// bestc = c;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">float</span> pretotal_ary = pretotal *<span class="number">1.0</span>/ faceno0_num ;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"pretotal = %d,_ary = %f,"</span>,pretotal,pretotal_ary);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%s"</span>,base);</span><br><span class="line">            <span class="keyword">bool</span> IS_FACE;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (pretotal_ary&gt;PLANE_OR_NOT)</span><br><span class="line">            &#123;</span><br><span class="line">                IS_FACE =  <span class="literal">false</span>;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"不是人脸\n"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                IS_FACE = <span class="literal">true</span>;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"是人脸\n"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;</span><br><span class="line">    closedir(dir);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    DIR *dir;</span><br><span class="line">    <span class="keyword">char</span> *basePath = <span class="string">"/home/zhoujie/liveness detection/raw文件/non-face"</span>;</span><br><span class="line">    readFileList(basePath);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>github地址：<a href="https://github.com/zj19941113/Face-Liveness_detection" target="_blank" rel="noopener">https://github.com/zj19941113/Face-Liveness_detection</a><br>上面这个项目使用的数据集标定的不太准，PLANE_OR_NOT参数选为 0.1</p><p>这个数据集是自己标定的，数量较少但是比较准确： <a href="https://pan.baidu.com/s/161xSbayGW7tKg0tKfTW1mw" target="_blank" rel="noopener">https://pan.baidu.com/s/161xSbayGW7tKg0tKfTW1mw</a> ，PLANE_OR_NOT参数选为 0.2</p><p>快速鼠标标定深度图人脸位置： <a href="https://blog.csdn.net/ffcjjhv/article/details/83270002" target="_blank" rel="noopener">https://blog.csdn.net/ffcjjhv/article/details/83270002</a></p><p><img src="https://raw.githubusercontent.com/zj19941113/Face-Liveness_detection/master/images/2018-10-19%2011-55-09%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE.png" alt></p><p><img src="https://raw.githubusercontent.com/zj19941113/Face-Liveness_detection/master/images/2018-10-19%2011-58-47%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE.png" alt></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;通过深度相机的红外图进行人脸位置定位，传给深度图进行活体检测&lt;br&gt;注：利用rgb传来的位置对应到深度图上偏差过大，直接利用深度相机产生的红外图像进行人脸位置的确定更加精准。&lt;/p&gt;
    
    </summary>
    
      <category term="活体检测" scheme="http://yoursite.com/categories/%E6%B4%BB%E4%BD%93%E6%A3%80%E6%B5%8B/"/>
    
    
      <category term="深度图" scheme="http://yoursite.com/tags/%E6%B7%B1%E5%BA%A6%E5%9B%BE/"/>
    
      <category term="活体检测" scheme="http://yoursite.com/tags/%E6%B4%BB%E4%BD%93%E6%A3%80%E6%B5%8B/"/>
    
      <category term="C++" scheme="http://yoursite.com/tags/C/"/>
    
      <category term="近红外人脸定位" scheme="http://yoursite.com/tags/%E8%BF%91%E7%BA%A2%E5%A4%96%E4%BA%BA%E8%84%B8%E5%AE%9A%E4%BD%8D/"/>
    
  </entry>
  
</feed>
